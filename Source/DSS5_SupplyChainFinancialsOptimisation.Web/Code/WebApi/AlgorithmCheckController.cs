// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).
using System;
using System.IO;
using System.Collections.Generic;
using System.Linq;
using System.Net.Http;
using System.Web;
using System.Web.Http;
using zAppDev.DotNet.Framework.Mvc;
using AppCode;
using Identity = zAppDev.DotNet.Framework.Identity;
using zAppDev.DotNet.Framework.Identity;
namespace DSS5_SupplyChainFinancialsOptimisation.Web.Code.WebApi
{
    public class AlgorithmCheckAlgorithmCheckDto
    {
        public decimal? annual_turnover
        {
            get;
            set;
        } public string b2b
        {
            get;
            set;
        } public string b2c
        {
            get;
            set;
        } public decimal? payment_term_of_receivable
        {
            get;
            set;
        } public decimal? average_of_payment_terms
        {
            get;
            set;
        } public decimal? average_invoice_value
        {
            get;
            set;
        } public decimal? equity_ratio
        {
            get;
            set;
        }
    }

    [RoutePrefix("api/AlgorithmCheck")]
    [WebApiThrottle.EnableThrottling()]
    public class AlgorithmCheckController : BasicApiCtrl
    {

        /// <summary>
        ///
        /// </summary>
        /// <returns>AlgorithmCheck</returns>
        [CustomWebApiActionFilter()]
        [CustomWebApiAuthorize(LogEnabled = false)]

        [Route("AlgorithmCheck")]
        [HttpPost]
        public DSS5_SupplyChainFinancialsOptimisation.Services.AlgorithmCheck.DataContracts.AlgorithmCheckDTO AlgorithmCheck([FromBody]AlgorithmCheckAlgorithmCheckDto data)
        {
            var request = ((HttpContextBase)Request.Properties["MS_HttpContext"]).Request;
            var _RequestSourceIp = request.UserHostAddress;
            var _UserName = Identity.IdentityHelper.GetCurrentUserName();
            var httpContext = (HttpContextWrapper)Request.Properties["MS_HttpContext"];
            if(data == null)
            {
                throw new ArgumentNullException(nameof(data), "No input provided.");
            }
            var annual_turnover = data.annual_turnover;
            var b2b = data.b2b;
            var b2c = data.b2c;
            var payment_term_of_receivable = data.payment_term_of_receivable;
            var average_of_payment_terms = data.average_of_payment_terms;
            var average_invoice_value = data.average_invoice_value;
            var equity_ratio = data.equity_ratio;
            var result =  (new DSS5_SupplyChainFinancialsOptimisation.Services.AlgorithmCheckService()).AlgorithmCheck(annual_turnover,b2b,b2c,payment_term_of_receivable,average_of_payment_terms,average_invoice_value,equity_ratio,_RequestSourceIp, _UserName);
            return result;
        }
    }
}
