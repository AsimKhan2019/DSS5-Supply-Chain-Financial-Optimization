// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).
var DSS5_SupplyChainFinancialsOptimisation;
(function (DSS5_SupplyChainFinancialsOptimisation) {
    var Services;
    (function (Services) {
        /**
         * Client for 'Supplier' Service
         */
        var SupplierServiceClient = (function () {
            function SupplierServiceClient() {
            }
            /**
            * Creates a new Supplier
            */
            SupplierServiceClient.Create = function (newSupplier) {
                var _data = newSupplier;
                return axios.post(window._context.siteRoot + SupplierServiceClient.baseUrl + "Create", _data);
            };
            /**
            * Get an Supplier insance based on UserName
            */
            SupplierServiceClient.Get = function (UserName) {
                var _data = { params: { UserName: UserName } };
                return axios.get(window._context.siteRoot + SupplierServiceClient.baseUrl, _data);
            };
            /**
            * Count all Suppliers
            */
            SupplierServiceClient.Count = function () {
                var _data = { params: {} };
                return axios.get(window._context.siteRoot + SupplierServiceClient.baseUrl + "count", _data);
            };
            /**
            * Gets all Suppliers. Max pageSize is 50
            */
            SupplierServiceClient.GetAll = function (pageSize, pageIndex) {
                var _data = { params: { pageSize: pageSize, pageIndex: pageIndex } };
                return axios.get(window._context.siteRoot + SupplierServiceClient.baseUrl + "all", _data);
            };
            /**
            * Saves a Supplier insance
            */
            SupplierServiceClient.Save = function (Supplier) {
                var _data = Supplier;
                return axios.post(window._context.siteRoot + SupplierServiceClient.baseUrl, _data);
            };
            /**
            * Deletes a Supplier insance based on UserName
            */
            SupplierServiceClient.Delete = function (UserName) {
                var _data = { params: { UserName: UserName } };
                return axios["delete"](window._context.siteRoot + SupplierServiceClient.baseUrl, _data);
            };
            /**
            *
            */
            SupplierServiceClient.Find = function (usern) {
                var _data = { params: { usern: usern } };
                return axios.get(window._context.siteRoot + SupplierServiceClient.baseUrl + "Find", _data);
            };
            /**
            *
            */
            SupplierServiceClient.IsSupplier = function (username) {
                var _data = { params: { username: username } };
                return axios.get(window._context.siteRoot + SupplierServiceClient.baseUrl + "IsSupplier", _data);
            };
            /**
            *
            */
            SupplierServiceClient.IsInRole = function (name, roles) {
                var _data = { name: name, roles: roles };
                return axios.post(window._context.siteRoot + SupplierServiceClient.baseUrl + "IsInRole", _data);
            };
            return SupplierServiceClient;
        }());
        /**
         * Base url for 'Supplier' Service
         */
        SupplierServiceClient.baseUrl = "/api/Supplier/";
        Services.SupplierServiceClient = SupplierServiceClient;
    })(Services = DSS5_SupplyChainFinancialsOptimisation.Services || (DSS5_SupplyChainFinancialsOptimisation.Services = {}));
})(DSS5_SupplyChainFinancialsOptimisation || (DSS5_SupplyChainFinancialsOptimisation = {}));
// Create service shortcut
if (window.$api == null) {
    window.$api = {};
}
window.$api.Supplier = DSS5_SupplyChainFinancialsOptimisation.Services.SupplierServiceClient;
