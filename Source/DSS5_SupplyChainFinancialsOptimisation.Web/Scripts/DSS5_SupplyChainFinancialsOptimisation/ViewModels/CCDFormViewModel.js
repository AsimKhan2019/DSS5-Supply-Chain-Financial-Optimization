var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).
var DSS5_SupplyChainFinancialsOptimisation;
(function (DSS5_SupplyChainFinancialsOptimisation) {
    var ViewModels;
    (function (ViewModels) {
        var CCDForm;
        (function (CCDForm) {
            var CCDFormViewModel = (function (_super) {
                __extends(CCDFormViewModel, _super);
                function CCDFormViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            CustomsClearingDocumentation: true
                        };
                    }
                    else {
                        _this._members["CustomsClearingDocumentation"] = true;
                    }
                    return _this;
                }
                CCDFormViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.CustomsClearingDocumentation != null)
                        instance.CustomsClearingDocumentation = CustomsClearingDocumentation_CustomsClearingDocumentationViewModel._lightCast(instance.CustomsClearingDocumentation);
                    return instance;
                };
                CCDFormViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new CCDFormViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateCCDFormViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                CCDFormViewModel.prototype._hydrateCCDFormViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    this._hydrateMasterPageViewModel(original, ignoreReadOnlyProperties, context);
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.CustomsClearingDocumentation !== undefined)
                        this.CustomsClearingDocumentation = CustomsClearingDocumentation_CustomsClearingDocumentationViewModel._initializeFrom(original.CustomsClearingDocumentation, ignoreReadOnlyProperties, context);
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = CCDFormViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        CCDFormViewModel._deleteDropDownInitialValues(reduced);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                CCDFormViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = CCDFormViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    CCDFormViewModel._deleteDropDownInitialValues(reduced);
                    return reduced;
                };
                CCDFormViewModel._deleteDropDownInitialValues = function (reduced) {
                    if (reduced == null)
                        return;
                    DSS5_SupplyChainFinancialsOptimisation.ViewModels.MasterPage.MasterPageViewModel._deleteDropDownInitialValues(reduced);
                };
                CCDFormViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return CCDFormViewModel;
            }(DSS5_SupplyChainFinancialsOptimisation.ViewModels.MasterPage.MasterPageViewModel));
            CCDForm.CCDFormViewModel = CCDFormViewModel;
            var CustomsClearingDocumentation_CustomsClearingDocumentationViewModel = (function (_super) {
                __extends(CustomsClearingDocumentation_CustomsClearingDocumentationViewModel, _super);
                function CustomsClearingDocumentation_CustomsClearingDocumentationViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            BuyerName: true, CustomsClearingDate: true, ExportingCountry: true, Id: true, ImportingCountry: true, Transaction: true
                        };
                    }
                    else {
                        _this._members["BuyerName"] = true;
                        _this._members["CustomsClearingDate"] = true;
                        _this._members["ExportingCountry"] = true;
                        _this._members["Id"] = true;
                        _this._members["ImportingCountry"] = true;
                        _this._members["Transaction"] = true;
                    }
                    return _this;
                }
                CustomsClearingDocumentation_CustomsClearingDocumentationViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.CustomsClearingDate != null)
                        instance.CustomsClearingDate = new Date(instance.CustomsClearingDate);
                    if (instance.Transaction != null)
                        instance.Transaction = CustomsClearingDocumentation_CustomsClearingDocumentation_Transaction_TransactionViewModel._lightCast(instance.Transaction);
                    return instance;
                };
                CustomsClearingDocumentation_CustomsClearingDocumentationViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new CustomsClearingDocumentation_CustomsClearingDocumentationViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateCustomsClearingDocumentation_CustomsClearingDocumentationViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                CustomsClearingDocumentation_CustomsClearingDocumentationViewModel.prototype._hydrateCustomsClearingDocumentation_CustomsClearingDocumentationViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.BuyerName !== undefined)
                        this.BuyerName = original.BuyerName;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.CustomsClearingDate))
                        this.CustomsClearingDate = new Date(original.CustomsClearingDate);
                    if (original.ExportingCountry !== undefined)
                        this.ExportingCountry = original.ExportingCountry;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.ImportingCountry !== undefined)
                        this.ImportingCountry = original.ImportingCountry;
                    if (original.Transaction !== undefined)
                        this.Transaction = CustomsClearingDocumentation_CustomsClearingDocumentation_Transaction_TransactionViewModel._initializeFrom(original.Transaction, ignoreReadOnlyProperties, context);
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = CustomsClearingDocumentation_CustomsClearingDocumentationViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                CustomsClearingDocumentation_CustomsClearingDocumentationViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = CustomsClearingDocumentation_CustomsClearingDocumentationViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                CustomsClearingDocumentation_CustomsClearingDocumentationViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return CustomsClearingDocumentation_CustomsClearingDocumentationViewModel;
            }(BaseClass.ViewModel));
            CCDForm.CustomsClearingDocumentation_CustomsClearingDocumentationViewModel = CustomsClearingDocumentation_CustomsClearingDocumentationViewModel;
            var CustomsClearingDocumentation_CustomsClearingDocumentation_Transaction_TransactionViewModel = (function (_super) {
                __extends(CustomsClearingDocumentation_CustomsClearingDocumentation_Transaction_TransactionViewModel, _super);
                function CustomsClearingDocumentation_CustomsClearingDocumentation_Transaction_TransactionViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            FundedAmount: true, Id: true, TransactionDateOccured: true, TransactionValue: true
                        };
                    }
                    else {
                        _this._members["FundedAmount"] = true;
                        _this._members["Id"] = true;
                        _this._members["TransactionDateOccured"] = true;
                        _this._members["TransactionValue"] = true;
                    }
                    return _this;
                }
                CustomsClearingDocumentation_CustomsClearingDocumentation_Transaction_TransactionViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.TransactionDateOccured != null)
                        instance.TransactionDateOccured = new Date(instance.TransactionDateOccured);
                    return instance;
                };
                CustomsClearingDocumentation_CustomsClearingDocumentation_Transaction_TransactionViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new CustomsClearingDocumentation_CustomsClearingDocumentation_Transaction_TransactionViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateCustomsClearingDocumentation_CustomsClearingDocumentation_Transaction_TransactionViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                CustomsClearingDocumentation_CustomsClearingDocumentation_Transaction_TransactionViewModel.prototype._hydrateCustomsClearingDocumentation_CustomsClearingDocumentation_Transaction_TransactionViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.FundedAmount !== undefined)
                        this.FundedAmount = original.FundedAmount;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.TransactionDateOccured))
                        this.TransactionDateOccured = new Date(original.TransactionDateOccured);
                    if (original.TransactionValue !== undefined)
                        this.TransactionValue = original.TransactionValue;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = CustomsClearingDocumentation_CustomsClearingDocumentation_Transaction_TransactionViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                CustomsClearingDocumentation_CustomsClearingDocumentation_Transaction_TransactionViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = CustomsClearingDocumentation_CustomsClearingDocumentation_Transaction_TransactionViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                CustomsClearingDocumentation_CustomsClearingDocumentation_Transaction_TransactionViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return CustomsClearingDocumentation_CustomsClearingDocumentation_Transaction_TransactionViewModel;
            }(BaseClass.ViewModel));
            CCDForm.CustomsClearingDocumentation_CustomsClearingDocumentation_Transaction_TransactionViewModel = CustomsClearingDocumentation_CustomsClearingDocumentation_Transaction_TransactionViewModel;
        })(CCDForm = ViewModels.CCDForm || (ViewModels.CCDForm = {}));
    })(ViewModels = DSS5_SupplyChainFinancialsOptimisation.ViewModels || (DSS5_SupplyChainFinancialsOptimisation.ViewModels = {}));
})(DSS5_SupplyChainFinancialsOptimisation || (DSS5_SupplyChainFinancialsOptimisation = {}));
