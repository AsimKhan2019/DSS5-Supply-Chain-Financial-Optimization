// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).
namespace DSS5_SupplyChainFinancialsOptimisation.ViewModels.OrderForm {
export class OrderFormViewModel extends DSS5_SupplyChainFinancialsOptimisation.ViewModels.MasterPage.MasterPageViewModel {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Order:
true,SupOrigin:
true,SupDest:
true,SupplierProducts:
true,SelectedIntermediaries:
true,CSVPath:
true,OrderStandardPath:
true,OrderStandardPhoto:
true,UploadConfirmed:
true,IsSupplier:
true,CommercialAgreement:
                true
            }
        } else {
            this._members["Order"] = true;
            this._members["SupOrigin"] = true;
            this._members["SupDest"] = true;
            this._members["SupplierProducts"] = true;
            this._members["SelectedIntermediaries"] = true;
            this._members["CSVPath"] = true;
            this._members["OrderStandardPath"] = true;
            this._members["OrderStandardPhoto"] = true;
            this._members["UploadConfirmed"] = true;
            this._members["IsSupplier"] = true;
            this._members["CommercialAgreement"] = true;
        }

        this.SupplierProducts = new Array<any>();
        this.SelectedIntermediaries = new Array<any>();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.Order != null)
            instance.Order = Order_OrderViewModel._lightCast(instance.Order);

        if(instance.SupplierProducts != null) {
            for(let i = 0; i < instance.SupplierProducts.length; i++) {
                instance.SupplierProducts[i] = SupplierProducts_SupplierProductViewModel._lightCast(instance.SupplierProducts[i]);

            }
        }

        if(instance.SelectedIntermediaries != null) {
            for(let i = 0; i < instance.SelectedIntermediaries.length; i++) {
                instance.SelectedIntermediaries[i] = SelectedIntermediaries_IntermediaryViewModel._lightCast(instance.SelectedIntermediaries[i]);

            }
        }
        if(instance.CommercialAgreement != null)
            instance.CommercialAgreement = CommercialAgreement_CommercialAgreementViewModel._lightCast(instance.CommercialAgreement);
        return instance;
    }

    public static _initializeFrom(original: OrderFormViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): OrderFormViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        OrderFormViewModel = new OrderFormViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateOrderFormViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateOrderFormViewModel(original: OrderFormViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;

        this._hydrateMasterPageViewModel(original, ignoreReadOnlyProperties, context);

        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;


        if(original.Order !== undefined) this.Order = Order_OrderViewModel._initializeFrom(original.Order, ignoreReadOnlyProperties, context);
        if(original.SupOrigin !== undefined) this.SupOrigin = original.SupOrigin;
        if(original.SupDest !== undefined) this.SupDest = original.SupDest;

        if(original.SupplierProducts != null) {
            for(let i = 0; i < original.SupplierProducts.length; i++) {
                this.SupplierProducts.push(SupplierProducts_SupplierProductViewModel._initializeFrom(original.SupplierProducts[i], ignoreReadOnlyProperties, context));
            }
        }

        if(original.SelectedIntermediaries != null) {
            for(let i = 0; i < original.SelectedIntermediaries.length; i++) {
                this.SelectedIntermediaries.push(SelectedIntermediaries_IntermediaryViewModel._initializeFrom(original.SelectedIntermediaries[i], ignoreReadOnlyProperties, context));
            }
        }
        if(original.CSVPath !== undefined) this.CSVPath = original.CSVPath;
        if(original.OrderStandardPath !== undefined) this.OrderStandardPath = original.OrderStandardPath;
        if(original.OrderStandardPhoto !== undefined) this.OrderStandardPhoto = original.OrderStandardPhoto;
        if(original.UploadConfirmed !== undefined) this.UploadConfirmed = original.UploadConfirmed;
        if(original.IsSupplier !== undefined) this.IsSupplier = original.IsSupplier;

        if(original.CommercialAgreement !== undefined) this.CommercialAgreement = CommercialAgreement_CommercialAgreementViewModel._initializeFrom(original.CommercialAgreement, ignoreReadOnlyProperties, context);
        this.PickListSelectedItemKeys = original.PickListSelectedItemKeys;
        this.PickList1SelectedItemKeys = original.PickList1SelectedItemKeys;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = OrderFormViewModel._initializeFrom(this, ignoreReadOnlyProperties);
            OrderFormViewModel._deleteDropDownInitialValues(reduced);
            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): OrderFormViewModel {
        var reduced = OrderFormViewModel._initializeFrom(this, ignoreReadOnlyProperties);
        OrderFormViewModel._deleteDropDownInitialValues(reduced);
        return reduced;
    }

    public static _deleteDropDownInitialValues(reduced: OrderFormViewModel) {
        if (reduced == null) return;


        DSS5_SupplyChainFinancialsOptimisation.ViewModels.MasterPage.MasterPageViewModel._deleteDropDownInitialValues(reduced);
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Order:
    any;
public SupOrigin:
    any;
public SupDest:
    any;
public SupplierProducts:
    Array<any>;
public SelectedIntermediaries:
    Array<any>;
public CSVPath:
    any;
public OrderStandardPath:
    any;
public OrderStandardPhoto:
    any;
public UploadConfirmed:
    any;
public IsSupplier:
    any;
public CommercialAgreement:
    any;
public PickListSelectedItemKeys:
    any[];
public PickList1SelectedItemKeys:
    any[];
}

export class Order_OrderViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
DateOfOrder:
true,DeliveryTo:
true,EstimatedDateOfDelivery:
true,From:
true,Id:
true,IntermediateParty:
true,OrderAmount:
true,OrderAttachment:
true,OrderNumber:
true,PaymentTerms:
true,Status:
true,TotalPrice:
true,OrderStatus:
true,CommercialAgreement:
true,FinalAcceptanceCertificate:
true,OrderProducts:
true,Transaction:
                true
            }
        } else {
            this._members["DateOfOrder"] = true;
            this._members["DeliveryTo"] = true;
            this._members["EstimatedDateOfDelivery"] = true;
            this._members["From"] = true;
            this._members["Id"] = true;
            this._members["IntermediateParty"] = true;
            this._members["OrderAmount"] = true;
            this._members["OrderAttachment"] = true;
            this._members["OrderNumber"] = true;
            this._members["PaymentTerms"] = true;
            this._members["Status"] = true;
            this._members["TotalPrice"] = true;
            this._members["OrderStatus"] = true;
            this._members["CommercialAgreement"] = true;
            this._members["FinalAcceptanceCertificate"] = true;
            this._members["OrderProducts"] = true;
            this._members["Transaction"] = true;
        }

        this.OrderProducts = new Array<any>();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.DateOfOrder != null) instance.DateOfOrder = new Date(instance.DateOfOrder);
        if(instance.EstimatedDateOfDelivery != null) instance.EstimatedDateOfDelivery = new Date(instance.EstimatedDateOfDelivery);
        if(instance.OrderStatus != null)
            instance.OrderStatus = Order_Order_OrderStatus_OrderStatusViewModel._lightCast(instance.OrderStatus);
        if(instance.CommercialAgreement != null)
            instance.CommercialAgreement = Order_Order_CommercialAgreement_CommercialAgreementViewModel._lightCast(instance.CommercialAgreement);
        if(instance.FinalAcceptanceCertificate != null)
            instance.FinalAcceptanceCertificate = Order_Order_FinalAcceptanceCertificate_FinalAcceptanceCertificateViewModel._lightCast(instance.FinalAcceptanceCertificate);

        if(instance.OrderProducts != null) {
            for(let i = 0; i < instance.OrderProducts.length; i++) {
                instance.OrderProducts[i] = Order_Order_OrderProducts_OrderProductViewModel._lightCast(instance.OrderProducts[i]);

            }
        }
        if(instance.Transaction != null)
            instance.Transaction = Order_Order_Transaction_TransactionViewModel._lightCast(instance.Transaction);
        return instance;
    }

    public static _initializeFrom(original: Order_OrderViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Order_OrderViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Order_OrderViewModel = new Order_OrderViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateOrder_OrderViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateOrder_OrderViewModel(original: Order_OrderViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(!CLMS.Framework.String.IsNullOrEmpty(original.DateOfOrder)) this.DateOfOrder = new Date(original.DateOfOrder);
        if(original.DeliveryTo !== undefined) this.DeliveryTo = original.DeliveryTo;
        if(!CLMS.Framework.String.IsNullOrEmpty(original.EstimatedDateOfDelivery)) this.EstimatedDateOfDelivery = new Date(original.EstimatedDateOfDelivery);
        if(original.From !== undefined) this.From = original.From;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.IntermediateParty !== undefined) this.IntermediateParty = original.IntermediateParty;
        if(original.OrderAmount !== undefined) this.OrderAmount = original.OrderAmount;
        if(original.OrderAttachment !== undefined) this.OrderAttachment = original.OrderAttachment;
        if(original.OrderNumber !== undefined) this.OrderNumber = original.OrderNumber;
        if(original.PaymentTerms !== undefined) this.PaymentTerms = original.PaymentTerms;
        if(original.Status !== undefined) this.Status = original.Status;
        if(original.TotalPrice !== undefined) this.TotalPrice = original.TotalPrice;

        if(original.OrderStatus !== undefined) this.OrderStatus = Order_Order_OrderStatus_OrderStatusViewModel._initializeFrom(original.OrderStatus, ignoreReadOnlyProperties, context);

        if(original.CommercialAgreement !== undefined) this.CommercialAgreement = Order_Order_CommercialAgreement_CommercialAgreementViewModel._initializeFrom(original.CommercialAgreement, ignoreReadOnlyProperties, context);

        if(original.FinalAcceptanceCertificate !== undefined) this.FinalAcceptanceCertificate = Order_Order_FinalAcceptanceCertificate_FinalAcceptanceCertificateViewModel._initializeFrom(original.FinalAcceptanceCertificate, ignoreReadOnlyProperties, context);

        if(original.OrderProducts != null) {
            for(let i = 0; i < original.OrderProducts.length; i++) {
                this.OrderProducts.push(Order_Order_OrderProducts_OrderProductViewModel._initializeFrom(original.OrderProducts[i], ignoreReadOnlyProperties, context));
            }
        }

        if(original.Transaction !== undefined) this.Transaction = Order_Order_Transaction_TransactionViewModel._initializeFrom(original.Transaction, ignoreReadOnlyProperties, context);

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Order_OrderViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Order_OrderViewModel {
        var reduced = Order_OrderViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public DateOfOrder:
    any;
public DeliveryTo:
    any;
public EstimatedDateOfDelivery:
    any;
public From:
    any;
public Id:
    any;
public IntermediateParty:
    any;
public OrderAmount:
    any;
public OrderAttachment:
    any;
public OrderNumber:
    any;
public PaymentTerms:
    any;
public Status:
    any;
public TotalPrice:
    any;
public OrderStatus:
    any;
public CommercialAgreement:
    any;
public FinalAcceptanceCertificate:
    any;
public OrderProducts:
    Array<any>;
public Transaction:
    any;
    public _versionTimestamp?: string;
}

export enum $Status {
    Initial
}
export class Order_Order_OrderStatus_OrderStatusViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
FinalOrdered:
true,Id:
true,InitialOrdered:
                true
            }
        } else {
            this._members["FinalOrdered"] = true;
            this._members["Id"] = true;
            this._members["InitialOrdered"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Order_Order_OrderStatus_OrderStatusViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Order_Order_OrderStatus_OrderStatusViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Order_Order_OrderStatus_OrderStatusViewModel = new Order_Order_OrderStatus_OrderStatusViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateOrder_Order_OrderStatus_OrderStatusViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateOrder_Order_OrderStatus_OrderStatusViewModel(original: Order_Order_OrderStatus_OrderStatusViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.FinalOrdered !== undefined) this.FinalOrdered = original.FinalOrdered;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.InitialOrdered !== undefined) this.InitialOrdered = original.InitialOrdered;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Order_Order_OrderStatus_OrderStatusViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Order_Order_OrderStatus_OrderStatusViewModel {
        var reduced = Order_Order_OrderStatus_OrderStatusViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public FinalOrdered:
    any;
public Id:
    any;
public InitialOrdered:
    any;
    public _versionTimestamp?: string;
}

export class Order_Order_CommercialAgreement_CommercialAgreementViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Id:
true,ImportedBuyer:
true,Supplier:
                true
            }
        } else {
            this._members["Id"] = true;
            this._members["ImportedBuyer"] = true;
            this._members["Supplier"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.ImportedBuyer != null)
            instance.ImportedBuyer = Order_Order_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel._lightCast(instance.ImportedBuyer);
        if(instance.Supplier != null)
            instance.Supplier = Order_Order_CommercialAgreement_CommercialAgreement_Supplier_SupplierViewModel._lightCast(instance.Supplier);
        return instance;
    }

    public static _initializeFrom(original: Order_Order_CommercialAgreement_CommercialAgreementViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Order_Order_CommercialAgreement_CommercialAgreementViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Order_Order_CommercialAgreement_CommercialAgreementViewModel = new Order_Order_CommercialAgreement_CommercialAgreementViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateOrder_Order_CommercialAgreement_CommercialAgreementViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateOrder_Order_CommercialAgreement_CommercialAgreementViewModel(original: Order_Order_CommercialAgreement_CommercialAgreementViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;

        if(original.ImportedBuyer !== undefined) this.ImportedBuyer = Order_Order_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel._initializeFrom(original.ImportedBuyer, ignoreReadOnlyProperties, context);

        if(original.Supplier !== undefined) this.Supplier = Order_Order_CommercialAgreement_CommercialAgreement_Supplier_SupplierViewModel._initializeFrom(original.Supplier, ignoreReadOnlyProperties, context);

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Order_Order_CommercialAgreement_CommercialAgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Order_Order_CommercialAgreement_CommercialAgreementViewModel {
        var reduced = Order_Order_CommercialAgreement_CommercialAgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Id:
    any;
public ImportedBuyer:
    any;
public Supplier:
    any;
    public _versionTimestamp?: string;
}

export class Order_Order_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
AddressTwo:
true,Id:
                true
            }
        } else {
            this._members["AddressTwo"] = true;
            this._members["Id"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Order_Order_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Order_Order_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Order_Order_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel = new Order_Order_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateOrder_Order_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateOrder_Order_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel(original: Order_Order_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.AddressTwo !== undefined) this.AddressTwo = original.AddressTwo;
        if(original.Id !== undefined) this.Id = original.Id;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Order_Order_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Order_Order_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel {
        var reduced = Order_Order_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public AddressTwo:
    any;
public Id:
    any;
    public _versionTimestamp?: string;
}

export class Order_Order_CommercialAgreement_CommercialAgreement_Supplier_SupplierViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Business:
true,UserName:
                true
            }
        } else {
            this._members["Business"] = true;
            this._members["UserName"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Order_Order_CommercialAgreement_CommercialAgreement_Supplier_SupplierViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Order_Order_CommercialAgreement_CommercialAgreement_Supplier_SupplierViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Order_Order_CommercialAgreement_CommercialAgreement_Supplier_SupplierViewModel = new Order_Order_CommercialAgreement_CommercialAgreement_Supplier_SupplierViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateOrder_Order_CommercialAgreement_CommercialAgreement_Supplier_SupplierViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateOrder_Order_CommercialAgreement_CommercialAgreement_Supplier_SupplierViewModel(original: Order_Order_CommercialAgreement_CommercialAgreement_Supplier_SupplierViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if(original.Business !== undefined) this.Business = original.Business;
        if(original.UserName !== undefined) this.UserName = original.UserName;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Order_Order_CommercialAgreement_CommercialAgreement_Supplier_SupplierViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Order_Order_CommercialAgreement_CommercialAgreement_Supplier_SupplierViewModel {
        var reduced = Order_Order_CommercialAgreement_CommercialAgreement_Supplier_SupplierViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Business:
    any;
public UserName:
    any;
}

export class Order_Order_FinalAcceptanceCertificate_FinalAcceptanceCertificateViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Certificate:
true,Id:
                true
            }
        } else {
            this._members["Certificate"] = true;
            this._members["Id"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Order_Order_FinalAcceptanceCertificate_FinalAcceptanceCertificateViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Order_Order_FinalAcceptanceCertificate_FinalAcceptanceCertificateViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Order_Order_FinalAcceptanceCertificate_FinalAcceptanceCertificateViewModel = new Order_Order_FinalAcceptanceCertificate_FinalAcceptanceCertificateViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateOrder_Order_FinalAcceptanceCertificate_FinalAcceptanceCertificateViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateOrder_Order_FinalAcceptanceCertificate_FinalAcceptanceCertificateViewModel(original: Order_Order_FinalAcceptanceCertificate_FinalAcceptanceCertificateViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Certificate !== undefined) this.Certificate = original.Certificate;
        if(original.Id !== undefined) this.Id = original.Id;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Order_Order_FinalAcceptanceCertificate_FinalAcceptanceCertificateViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Order_Order_FinalAcceptanceCertificate_FinalAcceptanceCertificateViewModel {
        var reduced = Order_Order_FinalAcceptanceCertificate_FinalAcceptanceCertificateViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Certificate:
    any;
public Id:
    any;
    public _versionTimestamp?: string;
}

export class Order_Order_OrderProducts_OrderProductViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Code:
true,Description:
true,Id:
true,LineTotalPrice:
true,MeasurementUnit:
true,Price:
true,Quantity:
true,UnitValue:
                true
            }
        } else {
            this._members["Code"] = true;
            this._members["Description"] = true;
            this._members["Id"] = true;
            this._members["LineTotalPrice"] = true;
            this._members["MeasurementUnit"] = true;
            this._members["Price"] = true;
            this._members["Quantity"] = true;
            this._members["UnitValue"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Order_Order_OrderProducts_OrderProductViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Order_Order_OrderProducts_OrderProductViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Order_Order_OrderProducts_OrderProductViewModel = new Order_Order_OrderProducts_OrderProductViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateOrder_Order_OrderProducts_OrderProductViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateOrder_Order_OrderProducts_OrderProductViewModel(original: Order_Order_OrderProducts_OrderProductViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Code !== undefined) this.Code = original.Code;
        if(original.Description !== undefined) this.Description = original.Description;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.LineTotalPrice !== undefined) this.LineTotalPrice = original.LineTotalPrice;
        if(original.MeasurementUnit !== undefined) this.MeasurementUnit = original.MeasurementUnit;
        if(original.Price !== undefined) this.Price = original.Price;
        if(original.Quantity !== undefined) this.Quantity = original.Quantity;
        if(original.UnitValue !== undefined) this.UnitValue = original.UnitValue;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Order_Order_OrderProducts_OrderProductViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Order_Order_OrderProducts_OrderProductViewModel {
        var reduced = Order_Order_OrderProducts_OrderProductViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Code:
    any;
public Description:
    any;
public Id:
    any;
public LineTotalPrice:
    any;
public MeasurementUnit:
    any;
public Price:
    any;
public Quantity:
    any;
public UnitValue:
    any;
    public _versionTimestamp?: string;
}

export class Order_Order_Transaction_TransactionViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Id:
true,CommercialAgreement:
true,Supplier:
                true
            }
        } else {
            this._members["Id"] = true;
            this._members["CommercialAgreement"] = true;
            this._members["Supplier"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.CommercialAgreement != null)
            instance.CommercialAgreement = Order_Order_Transaction_Transaction_CommercialAgreement_CommercialAgreementViewModel._lightCast(instance.CommercialAgreement);
        if(instance.Supplier != null)
            instance.Supplier = Order_Order_Transaction_Transaction_Supplier_SupplierViewModel._lightCast(instance.Supplier);
        return instance;
    }

    public static _initializeFrom(original: Order_Order_Transaction_TransactionViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Order_Order_Transaction_TransactionViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Order_Order_Transaction_TransactionViewModel = new Order_Order_Transaction_TransactionViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateOrder_Order_Transaction_TransactionViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateOrder_Order_Transaction_TransactionViewModel(original: Order_Order_Transaction_TransactionViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;

        if(original.CommercialAgreement !== undefined) this.CommercialAgreement = Order_Order_Transaction_Transaction_CommercialAgreement_CommercialAgreementViewModel._initializeFrom(original.CommercialAgreement, ignoreReadOnlyProperties, context);

        if(original.Supplier !== undefined) this.Supplier = Order_Order_Transaction_Transaction_Supplier_SupplierViewModel._initializeFrom(original.Supplier, ignoreReadOnlyProperties, context);

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Order_Order_Transaction_TransactionViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Order_Order_Transaction_TransactionViewModel {
        var reduced = Order_Order_Transaction_TransactionViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Id:
    any;
public CommercialAgreement:
    any;
public Supplier:
    any;
    public _versionTimestamp?: string;
}

export class Order_Order_Transaction_Transaction_CommercialAgreement_CommercialAgreementViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Id:
true,PaymentTerms:
true,ImportedBuyer:
                true
            }
        } else {
            this._members["Id"] = true;
            this._members["PaymentTerms"] = true;
            this._members["ImportedBuyer"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.ImportedBuyer != null)
            instance.ImportedBuyer = Order_Order_Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel._lightCast(instance.ImportedBuyer);
        return instance;
    }

    public static _initializeFrom(original: Order_Order_Transaction_Transaction_CommercialAgreement_CommercialAgreementViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Order_Order_Transaction_Transaction_CommercialAgreement_CommercialAgreementViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Order_Order_Transaction_Transaction_CommercialAgreement_CommercialAgreementViewModel = new Order_Order_Transaction_Transaction_CommercialAgreement_CommercialAgreementViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateOrder_Order_Transaction_Transaction_CommercialAgreement_CommercialAgreementViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateOrder_Order_Transaction_Transaction_CommercialAgreement_CommercialAgreementViewModel(original: Order_Order_Transaction_Transaction_CommercialAgreement_CommercialAgreementViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.PaymentTerms !== undefined) this.PaymentTerms = original.PaymentTerms;

        if(original.ImportedBuyer !== undefined) this.ImportedBuyer = Order_Order_Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel._initializeFrom(original.ImportedBuyer, ignoreReadOnlyProperties, context);

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Order_Order_Transaction_Transaction_CommercialAgreement_CommercialAgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Order_Order_Transaction_Transaction_CommercialAgreement_CommercialAgreementViewModel {
        var reduced = Order_Order_Transaction_Transaction_CommercialAgreement_CommercialAgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Id:
    any;
public PaymentTerms:
    any;
public ImportedBuyer:
    any;
    public _versionTimestamp?: string;
}

export class Order_Order_Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
AddressOne:
true,Code:
true,Company:
true,Id:
                true
            }
        } else {
            this._members["AddressOne"] = true;
            this._members["Code"] = true;
            this._members["Company"] = true;
            this._members["Id"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Order_Order_Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Order_Order_Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Order_Order_Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel = new Order_Order_Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateOrder_Order_Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateOrder_Order_Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel(original: Order_Order_Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.AddressOne !== undefined) this.AddressOne = original.AddressOne;
        if(original.Code !== undefined) this.Code = original.Code;
        if(original.Company !== undefined) this.Company = original.Company;
        if(original.Id !== undefined) this.Id = original.Id;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Order_Order_Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Order_Order_Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel {
        var reduced = Order_Order_Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public AddressOne:
    any;
public Code:
    any;
public Company:
    any;
public Id:
    any;
    public _versionTimestamp?: string;
}

export class Order_Order_Transaction_Transaction_Supplier_SupplierViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
UserName:
                true
            }
        } else {
            this._members["UserName"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Order_Order_Transaction_Transaction_Supplier_SupplierViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Order_Order_Transaction_Transaction_Supplier_SupplierViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Order_Order_Transaction_Transaction_Supplier_SupplierViewModel = new Order_Order_Transaction_Transaction_Supplier_SupplierViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateOrder_Order_Transaction_Transaction_Supplier_SupplierViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateOrder_Order_Transaction_Transaction_Supplier_SupplierViewModel(original: Order_Order_Transaction_Transaction_Supplier_SupplierViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if(original.UserName !== undefined) this.UserName = original.UserName;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Order_Order_Transaction_Transaction_Supplier_SupplierViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Order_Order_Transaction_Transaction_Supplier_SupplierViewModel {
        var reduced = Order_Order_Transaction_Transaction_Supplier_SupplierViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public UserName:
    any;
}

export class SupplierProducts_SupplierProductViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Code:
true,Description:
true,Id:
true,MeasurementUnit:
true,Price:
true,UnitValue:
                true
            }
        } else {
            this._members["Code"] = true;
            this._members["Description"] = true;
            this._members["Id"] = true;
            this._members["MeasurementUnit"] = true;
            this._members["Price"] = true;
            this._members["UnitValue"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: SupplierProducts_SupplierProductViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): SupplierProducts_SupplierProductViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        SupplierProducts_SupplierProductViewModel = new SupplierProducts_SupplierProductViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateSupplierProducts_SupplierProductViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateSupplierProducts_SupplierProductViewModel(original: SupplierProducts_SupplierProductViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Code !== undefined) this.Code = original.Code;
        if(original.Description !== undefined) this.Description = original.Description;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.MeasurementUnit !== undefined) this.MeasurementUnit = original.MeasurementUnit;
        if(original.Price !== undefined) this.Price = original.Price;
        if(original.UnitValue !== undefined) this.UnitValue = original.UnitValue;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = SupplierProducts_SupplierProductViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): SupplierProducts_SupplierProductViewModel {
        var reduced = SupplierProducts_SupplierProductViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Code:
    any;
public Description:
    any;
public Id:
    any;
public MeasurementUnit:
    any;
public Price:
    any;
public UnitValue:
    any;
    public _versionTimestamp?: string;
}

export class SelectedIntermediaries_IntermediaryViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
EMail:
true,Id:
                true
            }
        } else {
            this._members["EMail"] = true;
            this._members["Id"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: SelectedIntermediaries_IntermediaryViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): SelectedIntermediaries_IntermediaryViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        SelectedIntermediaries_IntermediaryViewModel = new SelectedIntermediaries_IntermediaryViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateSelectedIntermediaries_IntermediaryViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateSelectedIntermediaries_IntermediaryViewModel(original: SelectedIntermediaries_IntermediaryViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.EMail !== undefined) this.EMail = original.EMail;
        if(original.Id !== undefined) this.Id = original.Id;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = SelectedIntermediaries_IntermediaryViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): SelectedIntermediaries_IntermediaryViewModel {
        var reduced = SelectedIntermediaries_IntermediaryViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public EMail:
    any;
public Id:
    any;
    public _versionTimestamp?: string;
}

export class CommercialAgreement_CommercialAgreementViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Id:
true,PaymentTerms:
true,Supplier:
true,ImportedBuyer:
                true
            }
        } else {
            this._members["Id"] = true;
            this._members["PaymentTerms"] = true;
            this._members["Supplier"] = true;
            this._members["ImportedBuyer"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.Supplier != null)
            instance.Supplier = CommercialAgreement_CommercialAgreement_Supplier_SupplierViewModel._lightCast(instance.Supplier);
        if(instance.ImportedBuyer != null)
            instance.ImportedBuyer = CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel._lightCast(instance.ImportedBuyer);
        return instance;
    }

    public static _initializeFrom(original: CommercialAgreement_CommercialAgreementViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): CommercialAgreement_CommercialAgreementViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        CommercialAgreement_CommercialAgreementViewModel = new CommercialAgreement_CommercialAgreementViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateCommercialAgreement_CommercialAgreementViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateCommercialAgreement_CommercialAgreementViewModel(original: CommercialAgreement_CommercialAgreementViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.PaymentTerms !== undefined) this.PaymentTerms = original.PaymentTerms;

        if(original.Supplier !== undefined) this.Supplier = CommercialAgreement_CommercialAgreement_Supplier_SupplierViewModel._initializeFrom(original.Supplier, ignoreReadOnlyProperties, context);

        if(original.ImportedBuyer !== undefined) this.ImportedBuyer = CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel._initializeFrom(original.ImportedBuyer, ignoreReadOnlyProperties, context);

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = CommercialAgreement_CommercialAgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): CommercialAgreement_CommercialAgreementViewModel {
        var reduced = CommercialAgreement_CommercialAgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Id:
    any;
public PaymentTerms:
    any;
public Supplier:
    any;
public ImportedBuyer:
    any;
    public _versionTimestamp?: string;
}

export class CommercialAgreement_CommercialAgreement_Supplier_SupplierViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Business:
true,UserName:
                true
            }
        } else {
            this._members["Business"] = true;
            this._members["UserName"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: CommercialAgreement_CommercialAgreement_Supplier_SupplierViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): CommercialAgreement_CommercialAgreement_Supplier_SupplierViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        CommercialAgreement_CommercialAgreement_Supplier_SupplierViewModel = new CommercialAgreement_CommercialAgreement_Supplier_SupplierViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateCommercialAgreement_CommercialAgreement_Supplier_SupplierViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateCommercialAgreement_CommercialAgreement_Supplier_SupplierViewModel(original: CommercialAgreement_CommercialAgreement_Supplier_SupplierViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if(original.Business !== undefined) this.Business = original.Business;
        if(original.UserName !== undefined) this.UserName = original.UserName;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = CommercialAgreement_CommercialAgreement_Supplier_SupplierViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): CommercialAgreement_CommercialAgreement_Supplier_SupplierViewModel {
        var reduced = CommercialAgreement_CommercialAgreement_Supplier_SupplierViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Business:
    any;
public UserName:
    any;
}

export class CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
AddressOne:
true,AddressTwo:
true,Code:
true,Company:
true,Id:
                true
            }
        } else {
            this._members["AddressOne"] = true;
            this._members["AddressTwo"] = true;
            this._members["Code"] = true;
            this._members["Company"] = true;
            this._members["Id"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel = new CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateCommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateCommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel(original: CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.AddressOne !== undefined) this.AddressOne = original.AddressOne;
        if(original.AddressTwo !== undefined) this.AddressTwo = original.AddressTwo;
        if(original.Code !== undefined) this.Code = original.Code;
        if(original.Company !== undefined) this.Company = original.Company;
        if(original.Id !== undefined) this.Id = original.Id;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel {
        var reduced = CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public AddressOne:
    any;
public AddressTwo:
    any;
public Code:
    any;
public Company:
    any;
public Id:
    any;
    public _versionTimestamp?: string;
}

}
