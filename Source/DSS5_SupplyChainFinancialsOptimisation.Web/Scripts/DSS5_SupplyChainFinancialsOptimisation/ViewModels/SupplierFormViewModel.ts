// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).
namespace DSS5_SupplyChainFinancialsOptimisation.ViewModels.SupplierForm {
export class SupplierFormViewModel extends DSS5_SupplyChainFinancialsOptimisation.ViewModels.MasterPage.MasterPageViewModel {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Supplier:
true,Evaluation:
true,Passed:
true,TestRunned:
true,Rerun:
true,PolicyTerms:
true,Link:
true,Evaluation1:
true,Evaluation2:
true,Evaluation3:
true,Evaluation4:
true,Evaluation5:
true,Evaluation6:
true,EvaluationCount:
true,SupplierReceivables:
true,IsSupplier:
true,Agreements:
true,Investor:
true,Step1To2:
true,Step1:
true,Step2To3:
true,Step3To4:
true,Step4To5:
true,FinishButton:
true,GuestFinish:
                true
            }
        } else {
            this._members["Supplier"] = true;
            this._members["Evaluation"] = true;
            this._members["Passed"] = true;
            this._members["TestRunned"] = true;
            this._members["Rerun"] = true;
            this._members["PolicyTerms"] = true;
            this._members["Link"] = true;
            this._members["Evaluation1"] = true;
            this._members["Evaluation2"] = true;
            this._members["Evaluation3"] = true;
            this._members["Evaluation4"] = true;
            this._members["Evaluation5"] = true;
            this._members["Evaluation6"] = true;
            this._members["EvaluationCount"] = true;
            this._members["SupplierReceivables"] = true;
            this._members["IsSupplier"] = true;
            this._members["Agreements"] = true;
            this._members["Investor"] = true;
            this._members["Step1To2"] = true;
            this._members["Step1"] = true;
            this._members["Step2To3"] = true;
            this._members["Step3To4"] = true;
            this._members["Step4To5"] = true;
            this._members["FinishButton"] = true;
            this._members["GuestFinish"] = true;
        }

        this.Agreements = new Array<any>();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.Supplier != null)
            instance.Supplier = Supplier_SupplierViewModel._lightCast(instance.Supplier);

        if(instance.Agreements != null) {
            for(let i = 0; i < instance.Agreements.length; i++) {
                instance.Agreements[i] = Agreements_AgreementViewModel._lightCast(instance.Agreements[i]);

            }
        }
        if(instance.Investor != null)
            instance.Investor = Investor_InvestorViewModel._lightCast(instance.Investor);
        return instance;
    }

    public static _initializeFrom(original: SupplierFormViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): SupplierFormViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        SupplierFormViewModel = new SupplierFormViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateSupplierFormViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateSupplierFormViewModel(original: SupplierFormViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;

        this._hydrateMasterPageViewModel(original, ignoreReadOnlyProperties, context);

        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;


        if(original.Supplier !== undefined) this.Supplier = Supplier_SupplierViewModel._initializeFrom(original.Supplier, ignoreReadOnlyProperties, context);
        if(original.Evaluation !== undefined) this.Evaluation = original.Evaluation;
        if(original.Passed !== undefined) this.Passed = original.Passed;
        if(original.TestRunned !== undefined) this.TestRunned = original.TestRunned;
        if(original.Rerun !== undefined) this.Rerun = original.Rerun;
        if(original.PolicyTerms !== undefined) this.PolicyTerms = original.PolicyTerms;
        if(original.Link !== undefined) this.Link = original.Link;
        if(original.Evaluation1 !== undefined) this.Evaluation1 = original.Evaluation1;
        if(original.Evaluation2 !== undefined) this.Evaluation2 = original.Evaluation2;
        if(original.Evaluation3 !== undefined) this.Evaluation3 = original.Evaluation3;
        if(original.Evaluation4 !== undefined) this.Evaluation4 = original.Evaluation4;
        if(original.Evaluation5 !== undefined) this.Evaluation5 = original.Evaluation5;
        if(original.Evaluation6 !== undefined) this.Evaluation6 = original.Evaluation6;
        if(original.EvaluationCount !== undefined) this.EvaluationCount = original.EvaluationCount;
        if(original.SupplierReceivables !== undefined) this.SupplierReceivables = original.SupplierReceivables;
        if(original.IsSupplier !== undefined) this.IsSupplier = original.IsSupplier;

        if(original.Agreements != null) {
            for(let i = 0; i < original.Agreements.length; i++) {
                this.Agreements.push(Agreements_AgreementViewModel._initializeFrom(original.Agreements[i], ignoreReadOnlyProperties, context));
            }
        }

        if(original.Investor !== undefined) this.Investor = Investor_InvestorViewModel._initializeFrom(original.Investor, ignoreReadOnlyProperties, context);
        if(original.Step1To2 !== undefined) this.Step1To2 = original.Step1To2;
        if(original.Step1 !== undefined) this.Step1 = original.Step1;
        if(original.Step2To3 !== undefined) this.Step2To3 = original.Step2To3;
        if(original.Step3To4 !== undefined) this.Step3To4 = original.Step3To4;
        if(original.Step4To5 !== undefined) this.Step4To5 = original.Step4To5;
        if(original.FinishButton !== undefined) this.FinishButton = original.FinishButton;
        if(original.GuestFinish !== undefined) this.GuestFinish = original.GuestFinish;
        this.txtBusiness7SelectedItemKeys = original.txtBusiness7SelectedItemKeys;
        this.OptionButtonSelectedItemKeys = original.OptionButtonSelectedItemKeys;
        this.OptionButton1SelectedItemKeys = original.OptionButton1SelectedItemKeys;
        this.OptionButton2SelectedItemKeys = original.OptionButton2SelectedItemKeys;
        this.OptionButton3SelectedItemKeys = original.OptionButton3SelectedItemKeys;
        this.OptionButton4SelectedItemKeys = original.OptionButton4SelectedItemKeys;
        this.OptionButton5SelectedItemKeys = original.OptionButton5SelectedItemKeys;
        this.txtApplicableCommercialLawSelectedItemKeys = original.txtApplicableCommercialLawSelectedItemKeys;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = SupplierFormViewModel._initializeFrom(this, ignoreReadOnlyProperties);
            SupplierFormViewModel._deleteDropDownInitialValues(reduced);
            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): SupplierFormViewModel {
        var reduced = SupplierFormViewModel._initializeFrom(this, ignoreReadOnlyProperties);
        SupplierFormViewModel._deleteDropDownInitialValues(reduced);
        return reduced;
    }

    public static _deleteDropDownInitialValues(reduced: SupplierFormViewModel) {
        if (reduced == null) return;


        DSS5_SupplyChainFinancialsOptimisation.ViewModels.MasterPage.MasterPageViewModel._deleteDropDownInitialValues(reduced);
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Supplier:
    any;
public Evaluation:
    any;
public Passed:
    any;
public TestRunned:
    any;
public Rerun:
    any;
public PolicyTerms:
    any;
public Link:
    any;
public Evaluation1:
    any;
public Evaluation2:
    any;
public Evaluation3:
    any;
public Evaluation4:
    any;
public Evaluation5:
    any;
public Evaluation6:
    any;
public EvaluationCount:
    any;
public SupplierReceivables:
    any;
public IsSupplier:
    any;
public Agreements:
    Array<any>;
public Investor:
    any;
public Step1To2:
    any;
public Step1:
    any;
public Step2To3:
    any;
public Step3To4:
    any;
public Step4To5:
    any;
public FinishButton:
    any;
public GuestFinish:
    any;
public txtBusiness7SelectedItemKeys:
    any[];
public OptionButtonSelectedItemKeys:
    any[];
public OptionButton1SelectedItemKeys:
    any[];
public OptionButton2SelectedItemKeys:
    any[];
public OptionButton3SelectedItemKeys:
    any[];
public OptionButton4SelectedItemKeys:
    any[];
public OptionButton5SelectedItemKeys:
    any[];
public txtApplicableCommercialLawSelectedItemKeys:
    any[];
}

export class Supplier_SupplierViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
AcceptedPolicyTerms:
true,AdditionalComments:
true,AdditionalCommentsStep2:
true,AdditionalCommentsStep3:
true,AnnualTurnover:
true,Average:
true,BEnvironment:
true,Business:
true,Company:
true,CompanyLogo:
true,DomainFocus:
true,Email:
true,EqRatio:
true,EvaluationCountResult:
true,EvaluationResult:
true,InvoiceValue:
true,MarketSegment:
true,PTerms:
true,SupplierStatus:
true,UserName:
true,VATNumber:
true,WebSite:
true,SupplierBusinessStructureData:
true,SupplierReceivables:
true,SupplierContactInformation:
true,SupplierTurnover:
true,SupplierExtraInformation:
true,FinancialStatements:
true,EconomicEvaluations:
true,BusinessPlans:
true,PriorOutstandingBalances:
true,OutstandingBalances:
true,CurrentSituations:
true,CurrentStatements:
true,CurrentCredits:
true,FactoringAgreements:
true,CustomerAgreements:
true,GeneralConstractuals:
true,OrganizationalCharts:
true,InvoicesForms:
true,Declarations:
true,SupplierEvaluation:
true,Agreements:
                true
            }
        } else {
            this._members["AcceptedPolicyTerms"] = true;
            this._members["AdditionalComments"] = true;
            this._members["AdditionalCommentsStep2"] = true;
            this._members["AdditionalCommentsStep3"] = true;
            this._members["AnnualTurnover"] = true;
            this._members["Average"] = true;
            this._members["BEnvironment"] = true;
            this._members["Business"] = true;
            this._members["Company"] = true;
            this._members["CompanyLogo"] = true;
            this._members["DomainFocus"] = true;
            this._members["Email"] = true;
            this._members["EqRatio"] = true;
            this._members["EvaluationCountResult"] = true;
            this._members["EvaluationResult"] = true;
            this._members["InvoiceValue"] = true;
            this._members["MarketSegment"] = true;
            this._members["PTerms"] = true;
            this._members["SupplierStatus"] = true;
            this._members["UserName"] = true;
            this._members["VATNumber"] = true;
            this._members["WebSite"] = true;
            this._members["SupplierBusinessStructureData"] = true;
            this._members["SupplierReceivables"] = true;
            this._members["SupplierContactInformation"] = true;
            this._members["SupplierTurnover"] = true;
            this._members["SupplierExtraInformation"] = true;
            this._members["FinancialStatements"] = true;
            this._members["EconomicEvaluations"] = true;
            this._members["BusinessPlans"] = true;
            this._members["PriorOutstandingBalances"] = true;
            this._members["OutstandingBalances"] = true;
            this._members["CurrentSituations"] = true;
            this._members["CurrentStatements"] = true;
            this._members["CurrentCredits"] = true;
            this._members["FactoringAgreements"] = true;
            this._members["CustomerAgreements"] = true;
            this._members["GeneralConstractuals"] = true;
            this._members["OrganizationalCharts"] = true;
            this._members["InvoicesForms"] = true;
            this._members["Declarations"] = true;
            this._members["SupplierEvaluation"] = true;
            this._members["Agreements"] = true;
        }

        this.FinancialStatements = new Array<any>();
        this.EconomicEvaluations = new Array<any>();
        this.BusinessPlans = new Array<any>();
        this.PriorOutstandingBalances = new Array<any>();
        this.OutstandingBalances = new Array<any>();
        this.CurrentSituations = new Array<any>();
        this.CurrentStatements = new Array<any>();
        this.CurrentCredits = new Array<any>();
        this.FactoringAgreements = new Array<any>();
        this.CustomerAgreements = new Array<any>();
        this.GeneralConstractuals = new Array<any>();
        this.OrganizationalCharts = new Array<any>();
        this.InvoicesForms = new Array<any>();
        this.Declarations = new Array<any>();
        this.Agreements = new Array<any>();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.SupplierBusinessStructureData != null)
            instance.SupplierBusinessStructureData = Supplier_Supplier_SupplierBusinessStructureData_SupplierBusinessStructureDataViewModel._lightCast(instance.SupplierBusinessStructureData);
        if(instance.SupplierReceivables != null)
            instance.SupplierReceivables = Supplier_Supplier_SupplierReceivables_SupplierReceivablesViewModel._lightCast(instance.SupplierReceivables);
        if(instance.SupplierContactInformation != null)
            instance.SupplierContactInformation = Supplier_Supplier_SupplierContactInformation_SupplierContactInformationViewModel._lightCast(instance.SupplierContactInformation);
        if(instance.SupplierTurnover != null)
            instance.SupplierTurnover = Supplier_Supplier_SupplierTurnover_SupplierTurnoverViewModel._lightCast(instance.SupplierTurnover);
        if(instance.SupplierExtraInformation != null)
            instance.SupplierExtraInformation = Supplier_Supplier_SupplierExtraInformation_SupplierExtraInformationViewModel._lightCast(instance.SupplierExtraInformation);

        if(instance.FinancialStatements != null) {
            for(let i = 0; i < instance.FinancialStatements.length; i++) {
                instance.FinancialStatements[i] = Supplier_Supplier_FinancialStatements_SupplierUploadsViewModel._lightCast(instance.FinancialStatements[i]);

            }
        }

        if(instance.EconomicEvaluations != null) {
            for(let i = 0; i < instance.EconomicEvaluations.length; i++) {
                instance.EconomicEvaluations[i] = Supplier_Supplier_EconomicEvaluations_SupplierUploadsViewModel._lightCast(instance.EconomicEvaluations[i]);

            }
        }

        if(instance.BusinessPlans != null) {
            for(let i = 0; i < instance.BusinessPlans.length; i++) {
                instance.BusinessPlans[i] = Supplier_Supplier_BusinessPlans_SupplierUploadsViewModel._lightCast(instance.BusinessPlans[i]);

            }
        }

        if(instance.PriorOutstandingBalances != null) {
            for(let i = 0; i < instance.PriorOutstandingBalances.length; i++) {
                instance.PriorOutstandingBalances[i] = Supplier_Supplier_PriorOutstandingBalances_SupplierUploadsViewModel._lightCast(instance.PriorOutstandingBalances[i]);

            }
        }

        if(instance.OutstandingBalances != null) {
            for(let i = 0; i < instance.OutstandingBalances.length; i++) {
                instance.OutstandingBalances[i] = Supplier_Supplier_OutstandingBalances_SupplierUploadsViewModel._lightCast(instance.OutstandingBalances[i]);

            }
        }

        if(instance.CurrentSituations != null) {
            for(let i = 0; i < instance.CurrentSituations.length; i++) {
                instance.CurrentSituations[i] = Supplier_Supplier_CurrentSituations_SupplierUploadsViewModel._lightCast(instance.CurrentSituations[i]);

            }
        }

        if(instance.CurrentStatements != null) {
            for(let i = 0; i < instance.CurrentStatements.length; i++) {
                instance.CurrentStatements[i] = Supplier_Supplier_CurrentStatements_SupplierUploadsViewModel._lightCast(instance.CurrentStatements[i]);

            }
        }

        if(instance.CurrentCredits != null) {
            for(let i = 0; i < instance.CurrentCredits.length; i++) {
                instance.CurrentCredits[i] = Supplier_Supplier_CurrentCredits_SupplierUploadsViewModel._lightCast(instance.CurrentCredits[i]);

            }
        }

        if(instance.FactoringAgreements != null) {
            for(let i = 0; i < instance.FactoringAgreements.length; i++) {
                instance.FactoringAgreements[i] = Supplier_Supplier_FactoringAgreements_SupplierUploadsViewModel._lightCast(instance.FactoringAgreements[i]);

            }
        }

        if(instance.CustomerAgreements != null) {
            for(let i = 0; i < instance.CustomerAgreements.length; i++) {
                instance.CustomerAgreements[i] = Supplier_Supplier_CustomerAgreements_SupplierUploadsViewModel._lightCast(instance.CustomerAgreements[i]);

            }
        }

        if(instance.GeneralConstractuals != null) {
            for(let i = 0; i < instance.GeneralConstractuals.length; i++) {
                instance.GeneralConstractuals[i] = Supplier_Supplier_GeneralConstractuals_SupplierUploadsViewModel._lightCast(instance.GeneralConstractuals[i]);

            }
        }

        if(instance.OrganizationalCharts != null) {
            for(let i = 0; i < instance.OrganizationalCharts.length; i++) {
                instance.OrganizationalCharts[i] = Supplier_Supplier_OrganizationalCharts_SupplierUploadsViewModel._lightCast(instance.OrganizationalCharts[i]);

            }
        }

        if(instance.InvoicesForms != null) {
            for(let i = 0; i < instance.InvoicesForms.length; i++) {
                instance.InvoicesForms[i] = Supplier_Supplier_InvoicesForms_SupplierUploadsViewModel._lightCast(instance.InvoicesForms[i]);

            }
        }

        if(instance.Declarations != null) {
            for(let i = 0; i < instance.Declarations.length; i++) {
                instance.Declarations[i] = Supplier_Supplier_Declarations_SupplierUploadsViewModel._lightCast(instance.Declarations[i]);

            }
        }
        if(instance.SupplierEvaluation != null)
            instance.SupplierEvaluation = Supplier_Supplier_SupplierEvaluation_SupplierEvaluationViewModel._lightCast(instance.SupplierEvaluation);

        if(instance.Agreements != null) {
            for(let i = 0; i < instance.Agreements.length; i++) {
                instance.Agreements[i] = Supplier_Supplier_Agreements_AgreementViewModel._lightCast(instance.Agreements[i]);

            }
        }
        return instance;
    }

    public static _initializeFrom(original: Supplier_SupplierViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Supplier_SupplierViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Supplier_SupplierViewModel = new Supplier_SupplierViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateSupplier_SupplierViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateSupplier_SupplierViewModel(original: Supplier_SupplierViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if(original.AcceptedPolicyTerms !== undefined) this.AcceptedPolicyTerms = original.AcceptedPolicyTerms;
        if(original.AdditionalComments !== undefined) this.AdditionalComments = original.AdditionalComments;
        if(original.AdditionalCommentsStep2 !== undefined) this.AdditionalCommentsStep2 = original.AdditionalCommentsStep2;
        if(original.AdditionalCommentsStep3 !== undefined) this.AdditionalCommentsStep3 = original.AdditionalCommentsStep3;
        if(original.AnnualTurnover !== undefined) this.AnnualTurnover = original.AnnualTurnover;
        if(original.Average !== undefined) this.Average = original.Average;
        if(original.BEnvironment !== undefined) this.BEnvironment = original.BEnvironment;
        if(original.Business !== undefined) this.Business = original.Business;
        if(original.Company !== undefined) this.Company = original.Company;
        if(original.CompanyLogo !== undefined) this.CompanyLogo = original.CompanyLogo;
        if(original.DomainFocus !== undefined) this.DomainFocus = original.DomainFocus;
        if(original.Email !== undefined) this.Email = original.Email;
        if(original.EqRatio !== undefined) this.EqRatio = original.EqRatio;
        if(original.EvaluationCountResult !== undefined) this.EvaluationCountResult = original.EvaluationCountResult;
        if(original.EvaluationResult !== undefined) this.EvaluationResult = original.EvaluationResult;
        if(original.InvoiceValue !== undefined) this.InvoiceValue = original.InvoiceValue;
        if(original.MarketSegment !== undefined) this.MarketSegment = original.MarketSegment;
        if(original.PTerms !== undefined) this.PTerms = original.PTerms;
        if(original.SupplierStatus !== undefined) this.SupplierStatus = original.SupplierStatus;
        if(original.UserName !== undefined) this.UserName = original.UserName;
        if(original.VATNumber !== undefined) this.VATNumber = original.VATNumber;
        if(original.WebSite !== undefined) this.WebSite = original.WebSite;

        if(original.SupplierBusinessStructureData !== undefined) this.SupplierBusinessStructureData = Supplier_Supplier_SupplierBusinessStructureData_SupplierBusinessStructureDataViewModel._initializeFrom(original.SupplierBusinessStructureData, ignoreReadOnlyProperties, context);

        if(original.SupplierReceivables !== undefined) this.SupplierReceivables = Supplier_Supplier_SupplierReceivables_SupplierReceivablesViewModel._initializeFrom(original.SupplierReceivables, ignoreReadOnlyProperties, context);

        if(original.SupplierContactInformation !== undefined) this.SupplierContactInformation = Supplier_Supplier_SupplierContactInformation_SupplierContactInformationViewModel._initializeFrom(original.SupplierContactInformation, ignoreReadOnlyProperties, context);

        if(original.SupplierTurnover !== undefined) this.SupplierTurnover = Supplier_Supplier_SupplierTurnover_SupplierTurnoverViewModel._initializeFrom(original.SupplierTurnover, ignoreReadOnlyProperties, context);

        if(original.SupplierExtraInformation !== undefined) this.SupplierExtraInformation = Supplier_Supplier_SupplierExtraInformation_SupplierExtraInformationViewModel._initializeFrom(original.SupplierExtraInformation, ignoreReadOnlyProperties, context);

        if(original.FinancialStatements != null) {
            for(let i = 0; i < original.FinancialStatements.length; i++) {
                this.FinancialStatements.push(Supplier_Supplier_FinancialStatements_SupplierUploadsViewModel._initializeFrom(original.FinancialStatements[i], ignoreReadOnlyProperties, context));
            }
        }

        if(original.EconomicEvaluations != null) {
            for(let i = 0; i < original.EconomicEvaluations.length; i++) {
                this.EconomicEvaluations.push(Supplier_Supplier_EconomicEvaluations_SupplierUploadsViewModel._initializeFrom(original.EconomicEvaluations[i], ignoreReadOnlyProperties, context));
            }
        }

        if(original.BusinessPlans != null) {
            for(let i = 0; i < original.BusinessPlans.length; i++) {
                this.BusinessPlans.push(Supplier_Supplier_BusinessPlans_SupplierUploadsViewModel._initializeFrom(original.BusinessPlans[i], ignoreReadOnlyProperties, context));
            }
        }

        if(original.PriorOutstandingBalances != null) {
            for(let i = 0; i < original.PriorOutstandingBalances.length; i++) {
                this.PriorOutstandingBalances.push(Supplier_Supplier_PriorOutstandingBalances_SupplierUploadsViewModel._initializeFrom(original.PriorOutstandingBalances[i], ignoreReadOnlyProperties, context));
            }
        }

        if(original.OutstandingBalances != null) {
            for(let i = 0; i < original.OutstandingBalances.length; i++) {
                this.OutstandingBalances.push(Supplier_Supplier_OutstandingBalances_SupplierUploadsViewModel._initializeFrom(original.OutstandingBalances[i], ignoreReadOnlyProperties, context));
            }
        }

        if(original.CurrentSituations != null) {
            for(let i = 0; i < original.CurrentSituations.length; i++) {
                this.CurrentSituations.push(Supplier_Supplier_CurrentSituations_SupplierUploadsViewModel._initializeFrom(original.CurrentSituations[i], ignoreReadOnlyProperties, context));
            }
        }

        if(original.CurrentStatements != null) {
            for(let i = 0; i < original.CurrentStatements.length; i++) {
                this.CurrentStatements.push(Supplier_Supplier_CurrentStatements_SupplierUploadsViewModel._initializeFrom(original.CurrentStatements[i], ignoreReadOnlyProperties, context));
            }
        }

        if(original.CurrentCredits != null) {
            for(let i = 0; i < original.CurrentCredits.length; i++) {
                this.CurrentCredits.push(Supplier_Supplier_CurrentCredits_SupplierUploadsViewModel._initializeFrom(original.CurrentCredits[i], ignoreReadOnlyProperties, context));
            }
        }

        if(original.FactoringAgreements != null) {
            for(let i = 0; i < original.FactoringAgreements.length; i++) {
                this.FactoringAgreements.push(Supplier_Supplier_FactoringAgreements_SupplierUploadsViewModel._initializeFrom(original.FactoringAgreements[i], ignoreReadOnlyProperties, context));
            }
        }

        if(original.CustomerAgreements != null) {
            for(let i = 0; i < original.CustomerAgreements.length; i++) {
                this.CustomerAgreements.push(Supplier_Supplier_CustomerAgreements_SupplierUploadsViewModel._initializeFrom(original.CustomerAgreements[i], ignoreReadOnlyProperties, context));
            }
        }

        if(original.GeneralConstractuals != null) {
            for(let i = 0; i < original.GeneralConstractuals.length; i++) {
                this.GeneralConstractuals.push(Supplier_Supplier_GeneralConstractuals_SupplierUploadsViewModel._initializeFrom(original.GeneralConstractuals[i], ignoreReadOnlyProperties, context));
            }
        }

        if(original.OrganizationalCharts != null) {
            for(let i = 0; i < original.OrganizationalCharts.length; i++) {
                this.OrganizationalCharts.push(Supplier_Supplier_OrganizationalCharts_SupplierUploadsViewModel._initializeFrom(original.OrganizationalCharts[i], ignoreReadOnlyProperties, context));
            }
        }

        if(original.InvoicesForms != null) {
            for(let i = 0; i < original.InvoicesForms.length; i++) {
                this.InvoicesForms.push(Supplier_Supplier_InvoicesForms_SupplierUploadsViewModel._initializeFrom(original.InvoicesForms[i], ignoreReadOnlyProperties, context));
            }
        }

        if(original.Declarations != null) {
            for(let i = 0; i < original.Declarations.length; i++) {
                this.Declarations.push(Supplier_Supplier_Declarations_SupplierUploadsViewModel._initializeFrom(original.Declarations[i], ignoreReadOnlyProperties, context));
            }
        }

        if(original.SupplierEvaluation !== undefined) this.SupplierEvaluation = Supplier_Supplier_SupplierEvaluation_SupplierEvaluationViewModel._initializeFrom(original.SupplierEvaluation, ignoreReadOnlyProperties, context);

        if(original.Agreements != null) {
            for(let i = 0; i < original.Agreements.length; i++) {
                this.Agreements.push(Supplier_Supplier_Agreements_AgreementViewModel._initializeFrom(original.Agreements[i], ignoreReadOnlyProperties, context));
            }
        }

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Supplier_SupplierViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Supplier_SupplierViewModel {
        var reduced = Supplier_SupplierViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public AcceptedPolicyTerms:
    any;
public AdditionalComments:
    any;
public AdditionalCommentsStep2:
    any;
public AdditionalCommentsStep3:
    any;
public AnnualTurnover:
    any;
public Average:
    any;
public BEnvironment:
    any;
public Business:
    any;
public Company:
    any;
public CompanyLogo:
    any;
public DomainFocus:
    any;
public Email:
    any;
public EqRatio:
    any;
public EvaluationCountResult:
    any;
public EvaluationResult:
    any;
public InvoiceValue:
    any;
public MarketSegment:
    any;
public PTerms:
    any;
public SupplierStatus:
    any;
public UserName:
    any;
public VATNumber:
    any;
public WebSite:
    any;
public SupplierBusinessStructureData:
    any;
public SupplierReceivables:
    any;
public SupplierContactInformation:
    any;
public SupplierTurnover:
    any;
public SupplierExtraInformation:
    any;
public FinancialStatements:
    Array<any>;
public EconomicEvaluations:
    Array<any>;
public BusinessPlans:
    Array<any>;
public PriorOutstandingBalances:
    Array<any>;
public OutstandingBalances:
    Array<any>;
public CurrentSituations:
    Array<any>;
public CurrentStatements:
    Array<any>;
public CurrentCredits:
    Array<any>;
public FactoringAgreements:
    Array<any>;
public CustomerAgreements:
    Array<any>;
public GeneralConstractuals:
    Array<any>;
public OrganizationalCharts:
    Array<any>;
public InvoicesForms:
    Array<any>;
public Declarations:
    Array<any>;
public SupplierEvaluation:
    any;
public Agreements:
    Array<any>;
}

export class Supplier_Supplier_SupplierBusinessStructureData_SupplierBusinessStructureDataViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
ApplicableCommercialLaw:
true,Id:
true,Jurisdiction:
true,NumOfCustomers:
true,NumOfCustomersAbroad:
true,NumOfCustomersD:
true,NumOfCustomersEU:
true,NumOfEmployeesAbroad:
true,NumOfEmployeesD:
true,NumOfInvoices:
true,NumOfInvoicesAbroad:
true,NumOfInvoicesD:
true,NumOfInvoicesEU:
true,NumOfOccasionalCust:
true,NumOfOccasionalCustAbroad:
true,NumOfOccasionalCustD:
true,NumOfOccasionalCustEU:
true,NumOpenBalance:
true,NumOpenBalanceAboad:
true,NumOpenBalanceD:
true,NumOpenBalanceEU:
true,NumTransCust:
true,NumTransCustAbroad:
true,NumTransCustD:
true,NumTransCustEU:
true,ThereofActive:
true,ThereofActiveAbroad:
true,ThereofActiveD:
true,ThereofActiveEU:
                true
            }
        } else {
            this._members["ApplicableCommercialLaw"] = true;
            this._members["Id"] = true;
            this._members["Jurisdiction"] = true;
            this._members["NumOfCustomers"] = true;
            this._members["NumOfCustomersAbroad"] = true;
            this._members["NumOfCustomersD"] = true;
            this._members["NumOfCustomersEU"] = true;
            this._members["NumOfEmployeesAbroad"] = true;
            this._members["NumOfEmployeesD"] = true;
            this._members["NumOfInvoices"] = true;
            this._members["NumOfInvoicesAbroad"] = true;
            this._members["NumOfInvoicesD"] = true;
            this._members["NumOfInvoicesEU"] = true;
            this._members["NumOfOccasionalCust"] = true;
            this._members["NumOfOccasionalCustAbroad"] = true;
            this._members["NumOfOccasionalCustD"] = true;
            this._members["NumOfOccasionalCustEU"] = true;
            this._members["NumOpenBalance"] = true;
            this._members["NumOpenBalanceAboad"] = true;
            this._members["NumOpenBalanceD"] = true;
            this._members["NumOpenBalanceEU"] = true;
            this._members["NumTransCust"] = true;
            this._members["NumTransCustAbroad"] = true;
            this._members["NumTransCustD"] = true;
            this._members["NumTransCustEU"] = true;
            this._members["ThereofActive"] = true;
            this._members["ThereofActiveAbroad"] = true;
            this._members["ThereofActiveD"] = true;
            this._members["ThereofActiveEU"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Supplier_Supplier_SupplierBusinessStructureData_SupplierBusinessStructureDataViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Supplier_Supplier_SupplierBusinessStructureData_SupplierBusinessStructureDataViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Supplier_Supplier_SupplierBusinessStructureData_SupplierBusinessStructureDataViewModel = new Supplier_Supplier_SupplierBusinessStructureData_SupplierBusinessStructureDataViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateSupplier_Supplier_SupplierBusinessStructureData_SupplierBusinessStructureDataViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateSupplier_Supplier_SupplierBusinessStructureData_SupplierBusinessStructureDataViewModel(original: Supplier_Supplier_SupplierBusinessStructureData_SupplierBusinessStructureDataViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.ApplicableCommercialLaw !== undefined) this.ApplicableCommercialLaw = original.ApplicableCommercialLaw;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Jurisdiction !== undefined) this.Jurisdiction = original.Jurisdiction;
        if(original.NumOfCustomers !== undefined) this.NumOfCustomers = original.NumOfCustomers;
        if(original.NumOfCustomersAbroad !== undefined) this.NumOfCustomersAbroad = original.NumOfCustomersAbroad;
        if(original.NumOfCustomersD !== undefined) this.NumOfCustomersD = original.NumOfCustomersD;
        if(original.NumOfCustomersEU !== undefined) this.NumOfCustomersEU = original.NumOfCustomersEU;
        if(original.NumOfEmployeesAbroad !== undefined) this.NumOfEmployeesAbroad = original.NumOfEmployeesAbroad;
        if(original.NumOfEmployeesD !== undefined) this.NumOfEmployeesD = original.NumOfEmployeesD;
        if(original.NumOfInvoices !== undefined) this.NumOfInvoices = original.NumOfInvoices;
        if(original.NumOfInvoicesAbroad !== undefined) this.NumOfInvoicesAbroad = original.NumOfInvoicesAbroad;
        if(original.NumOfInvoicesD !== undefined) this.NumOfInvoicesD = original.NumOfInvoicesD;
        if(original.NumOfInvoicesEU !== undefined) this.NumOfInvoicesEU = original.NumOfInvoicesEU;
        if(original.NumOfOccasionalCust !== undefined) this.NumOfOccasionalCust = original.NumOfOccasionalCust;
        if(original.NumOfOccasionalCustAbroad !== undefined) this.NumOfOccasionalCustAbroad = original.NumOfOccasionalCustAbroad;
        if(original.NumOfOccasionalCustD !== undefined) this.NumOfOccasionalCustD = original.NumOfOccasionalCustD;
        if(original.NumOfOccasionalCustEU !== undefined) this.NumOfOccasionalCustEU = original.NumOfOccasionalCustEU;
        if(original.NumOpenBalance !== undefined) this.NumOpenBalance = original.NumOpenBalance;
        if(original.NumOpenBalanceAboad !== undefined) this.NumOpenBalanceAboad = original.NumOpenBalanceAboad;
        if(original.NumOpenBalanceD !== undefined) this.NumOpenBalanceD = original.NumOpenBalanceD;
        if(original.NumOpenBalanceEU !== undefined) this.NumOpenBalanceEU = original.NumOpenBalanceEU;
        if(original.NumTransCust !== undefined) this.NumTransCust = original.NumTransCust;
        if(original.NumTransCustAbroad !== undefined) this.NumTransCustAbroad = original.NumTransCustAbroad;
        if(original.NumTransCustD !== undefined) this.NumTransCustD = original.NumTransCustD;
        if(original.NumTransCustEU !== undefined) this.NumTransCustEU = original.NumTransCustEU;
        if(original.ThereofActive !== undefined) this.ThereofActive = original.ThereofActive;
        if(original.ThereofActiveAbroad !== undefined) this.ThereofActiveAbroad = original.ThereofActiveAbroad;
        if(original.ThereofActiveD !== undefined) this.ThereofActiveD = original.ThereofActiveD;
        if(original.ThereofActiveEU !== undefined) this.ThereofActiveEU = original.ThereofActiveEU;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Supplier_Supplier_SupplierBusinessStructureData_SupplierBusinessStructureDataViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Supplier_Supplier_SupplierBusinessStructureData_SupplierBusinessStructureDataViewModel {
        var reduced = Supplier_Supplier_SupplierBusinessStructureData_SupplierBusinessStructureDataViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public ApplicableCommercialLaw:
    any;
public Id:
    any;
public Jurisdiction:
    any;
public NumOfCustomers:
    any;
public NumOfCustomersAbroad:
    any;
public NumOfCustomersD:
    any;
public NumOfCustomersEU:
    any;
public NumOfEmployeesAbroad:
    any;
public NumOfEmployeesD:
    any;
public NumOfInvoices:
    any;
public NumOfInvoicesAbroad:
    any;
public NumOfInvoicesD:
    any;
public NumOfInvoicesEU:
    any;
public NumOfOccasionalCust:
    any;
public NumOfOccasionalCustAbroad:
    any;
public NumOfOccasionalCustD:
    any;
public NumOfOccasionalCustEU:
    any;
public NumOpenBalance:
    any;
public NumOpenBalanceAboad:
    any;
public NumOpenBalanceD:
    any;
public NumOpenBalanceEU:
    any;
public NumTransCust:
    any;
public NumTransCustAbroad:
    any;
public NumTransCustD:
    any;
public NumTransCustEU:
    any;
public ThereofActive:
    any;
public ThereofActiveAbroad:
    any;
public ThereofActiveD:
    any;
public ThereofActiveEU:
    any;
    public _versionTimestamp?: string;
}

export class Supplier_Supplier_SupplierReceivables_SupplierReceivablesViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
DomesticCustomersPresent:
true,DomesticCustomersPrior:
true,EUCustomersPresent:
true,EUCustomersPrior:
true,Id:
true,ThirdCountryCustomersPresent:
true,ThirdCountryCustomersPrior:
true,TotalPresent:
true,TotalPrior:
true,WillUploadFiles:
                true
            }
        } else {
            this._members["DomesticCustomersPresent"] = true;
            this._members["DomesticCustomersPrior"] = true;
            this._members["EUCustomersPresent"] = true;
            this._members["EUCustomersPrior"] = true;
            this._members["Id"] = true;
            this._members["ThirdCountryCustomersPresent"] = true;
            this._members["ThirdCountryCustomersPrior"] = true;
            this._members["TotalPresent"] = true;
            this._members["TotalPrior"] = true;
            this._members["WillUploadFiles"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Supplier_Supplier_SupplierReceivables_SupplierReceivablesViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Supplier_Supplier_SupplierReceivables_SupplierReceivablesViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Supplier_Supplier_SupplierReceivables_SupplierReceivablesViewModel = new Supplier_Supplier_SupplierReceivables_SupplierReceivablesViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateSupplier_Supplier_SupplierReceivables_SupplierReceivablesViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateSupplier_Supplier_SupplierReceivables_SupplierReceivablesViewModel(original: Supplier_Supplier_SupplierReceivables_SupplierReceivablesViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.DomesticCustomersPresent !== undefined) this.DomesticCustomersPresent = original.DomesticCustomersPresent;
        if(original.DomesticCustomersPrior !== undefined) this.DomesticCustomersPrior = original.DomesticCustomersPrior;
        if(original.EUCustomersPresent !== undefined) this.EUCustomersPresent = original.EUCustomersPresent;
        if(original.EUCustomersPrior !== undefined) this.EUCustomersPrior = original.EUCustomersPrior;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.ThirdCountryCustomersPresent !== undefined) this.ThirdCountryCustomersPresent = original.ThirdCountryCustomersPresent;
        if(original.ThirdCountryCustomersPrior !== undefined) this.ThirdCountryCustomersPrior = original.ThirdCountryCustomersPrior;
        if(original.TotalPresent !== undefined) this.TotalPresent = original.TotalPresent;
        if(original.TotalPrior !== undefined) this.TotalPrior = original.TotalPrior;
        if(original.WillUploadFiles !== undefined) this.WillUploadFiles = original.WillUploadFiles;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Supplier_Supplier_SupplierReceivables_SupplierReceivablesViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Supplier_Supplier_SupplierReceivables_SupplierReceivablesViewModel {
        var reduced = Supplier_Supplier_SupplierReceivables_SupplierReceivablesViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public DomesticCustomersPresent:
    any;
public DomesticCustomersPrior:
    any;
public EUCustomersPresent:
    any;
public EUCustomersPrior:
    any;
public Id:
    any;
public ThirdCountryCustomersPresent:
    any;
public ThirdCountryCustomersPrior:
    any;
public TotalPresent:
    any;
public TotalPrior:
    any;
public WillUploadFiles:
    any;
    public _versionTimestamp?: string;
}

export class Supplier_Supplier_SupplierContactInformation_SupplierContactInformationViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
AddressOne:
true,ContactPerson:
true,EstablishedIn:
true,Id:
true,ManagingDirector:
true,Telephone:
                true
            }
        } else {
            this._members["AddressOne"] = true;
            this._members["ContactPerson"] = true;
            this._members["EstablishedIn"] = true;
            this._members["Id"] = true;
            this._members["ManagingDirector"] = true;
            this._members["Telephone"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Supplier_Supplier_SupplierContactInformation_SupplierContactInformationViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Supplier_Supplier_SupplierContactInformation_SupplierContactInformationViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Supplier_Supplier_SupplierContactInformation_SupplierContactInformationViewModel = new Supplier_Supplier_SupplierContactInformation_SupplierContactInformationViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateSupplier_Supplier_SupplierContactInformation_SupplierContactInformationViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateSupplier_Supplier_SupplierContactInformation_SupplierContactInformationViewModel(original: Supplier_Supplier_SupplierContactInformation_SupplierContactInformationViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.AddressOne !== undefined) this.AddressOne = original.AddressOne;
        if(original.ContactPerson !== undefined) this.ContactPerson = original.ContactPerson;
        if(original.EstablishedIn !== undefined) this.EstablishedIn = original.EstablishedIn;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.ManagingDirector !== undefined) this.ManagingDirector = original.ManagingDirector;
        if(original.Telephone !== undefined) this.Telephone = original.Telephone;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Supplier_Supplier_SupplierContactInformation_SupplierContactInformationViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Supplier_Supplier_SupplierContactInformation_SupplierContactInformationViewModel {
        var reduced = Supplier_Supplier_SupplierContactInformation_SupplierContactInformationViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public AddressOne:
    any;
public ContactPerson:
    any;
public EstablishedIn:
    any;
public Id:
    any;
public ManagingDirector:
    any;
public Telephone:
    any;
    public _versionTimestamp?: string;
}

export class Supplier_Supplier_SupplierTurnover_SupplierTurnoverViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
ActualPreviousYear:
true,ActualPreviousYearAbroad:
true,ActualPreviousYearD:
true,ActualPreviousYearEU:
true,Id:
true,PercentageAbroad:
true,PercentageCN:
true,PercentageCNAbroad:
true,PercentageCND:
true,PercentageCNEU:
true,PercentageD:
true,PercentageEU:
true,PercentageSales:
true,PlannedCurrentYear:
true,PlannedCurrentYearAbroad:
true,PlannedCurrentYearD:
true,PlannedCurrentYearEU:
true,PlannedNextYear:
true,PlannedNextYearAbroad:
true,PlannedNextYearD:
true,PlannedNextYearEU:
                true
            }
        } else {
            this._members["ActualPreviousYear"] = true;
            this._members["ActualPreviousYearAbroad"] = true;
            this._members["ActualPreviousYearD"] = true;
            this._members["ActualPreviousYearEU"] = true;
            this._members["Id"] = true;
            this._members["PercentageAbroad"] = true;
            this._members["PercentageCN"] = true;
            this._members["PercentageCNAbroad"] = true;
            this._members["PercentageCND"] = true;
            this._members["PercentageCNEU"] = true;
            this._members["PercentageD"] = true;
            this._members["PercentageEU"] = true;
            this._members["PercentageSales"] = true;
            this._members["PlannedCurrentYear"] = true;
            this._members["PlannedCurrentYearAbroad"] = true;
            this._members["PlannedCurrentYearD"] = true;
            this._members["PlannedCurrentYearEU"] = true;
            this._members["PlannedNextYear"] = true;
            this._members["PlannedNextYearAbroad"] = true;
            this._members["PlannedNextYearD"] = true;
            this._members["PlannedNextYearEU"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Supplier_Supplier_SupplierTurnover_SupplierTurnoverViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Supplier_Supplier_SupplierTurnover_SupplierTurnoverViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Supplier_Supplier_SupplierTurnover_SupplierTurnoverViewModel = new Supplier_Supplier_SupplierTurnover_SupplierTurnoverViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateSupplier_Supplier_SupplierTurnover_SupplierTurnoverViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateSupplier_Supplier_SupplierTurnover_SupplierTurnoverViewModel(original: Supplier_Supplier_SupplierTurnover_SupplierTurnoverViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.ActualPreviousYear !== undefined) this.ActualPreviousYear = original.ActualPreviousYear;
        if(original.ActualPreviousYearAbroad !== undefined) this.ActualPreviousYearAbroad = original.ActualPreviousYearAbroad;
        if(original.ActualPreviousYearD !== undefined) this.ActualPreviousYearD = original.ActualPreviousYearD;
        if(original.ActualPreviousYearEU !== undefined) this.ActualPreviousYearEU = original.ActualPreviousYearEU;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.PercentageAbroad !== undefined) this.PercentageAbroad = original.PercentageAbroad;
        if(original.PercentageCN !== undefined) this.PercentageCN = original.PercentageCN;
        if(original.PercentageCNAbroad !== undefined) this.PercentageCNAbroad = original.PercentageCNAbroad;
        if(original.PercentageCND !== undefined) this.PercentageCND = original.PercentageCND;
        if(original.PercentageCNEU !== undefined) this.PercentageCNEU = original.PercentageCNEU;
        if(original.PercentageD !== undefined) this.PercentageD = original.PercentageD;
        if(original.PercentageEU !== undefined) this.PercentageEU = original.PercentageEU;
        if(original.PercentageSales !== undefined) this.PercentageSales = original.PercentageSales;
        if(original.PlannedCurrentYear !== undefined) this.PlannedCurrentYear = original.PlannedCurrentYear;
        if(original.PlannedCurrentYearAbroad !== undefined) this.PlannedCurrentYearAbroad = original.PlannedCurrentYearAbroad;
        if(original.PlannedCurrentYearD !== undefined) this.PlannedCurrentYearD = original.PlannedCurrentYearD;
        if(original.PlannedCurrentYearEU !== undefined) this.PlannedCurrentYearEU = original.PlannedCurrentYearEU;
        if(original.PlannedNextYear !== undefined) this.PlannedNextYear = original.PlannedNextYear;
        if(original.PlannedNextYearAbroad !== undefined) this.PlannedNextYearAbroad = original.PlannedNextYearAbroad;
        if(original.PlannedNextYearD !== undefined) this.PlannedNextYearD = original.PlannedNextYearD;
        if(original.PlannedNextYearEU !== undefined) this.PlannedNextYearEU = original.PlannedNextYearEU;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Supplier_Supplier_SupplierTurnover_SupplierTurnoverViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Supplier_Supplier_SupplierTurnover_SupplierTurnoverViewModel {
        var reduced = Supplier_Supplier_SupplierTurnover_SupplierTurnoverViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public ActualPreviousYear:
    any;
public ActualPreviousYearAbroad:
    any;
public ActualPreviousYearD:
    any;
public ActualPreviousYearEU:
    any;
public Id:
    any;
public PercentageAbroad:
    any;
public PercentageCN:
    any;
public PercentageCNAbroad:
    any;
public PercentageCND:
    any;
public PercentageCNEU:
    any;
public PercentageD:
    any;
public PercentageEU:
    any;
public PercentageSales:
    any;
public PlannedCurrentYear:
    any;
public PlannedCurrentYearAbroad:
    any;
public PlannedCurrentYearD:
    any;
public PlannedCurrentYearEU:
    any;
public PlannedNextYear:
    any;
public PlannedNextYearAbroad:
    any;
public PlannedNextYearD:
    any;
public PlannedNextYearEU:
    any;
    public _versionTimestamp?: string;
}

export class Supplier_Supplier_SupplierExtraInformation_SupplierExtraInformationViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
AreCompanyReceivables:
true,ExistenceCounterClaims:
true,HasCompanyAssigned:
true,Id:
true,OccurenceBadDebts:
                true
            }
        } else {
            this._members["AreCompanyReceivables"] = true;
            this._members["ExistenceCounterClaims"] = true;
            this._members["HasCompanyAssigned"] = true;
            this._members["Id"] = true;
            this._members["OccurenceBadDebts"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Supplier_Supplier_SupplierExtraInformation_SupplierExtraInformationViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Supplier_Supplier_SupplierExtraInformation_SupplierExtraInformationViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Supplier_Supplier_SupplierExtraInformation_SupplierExtraInformationViewModel = new Supplier_Supplier_SupplierExtraInformation_SupplierExtraInformationViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateSupplier_Supplier_SupplierExtraInformation_SupplierExtraInformationViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateSupplier_Supplier_SupplierExtraInformation_SupplierExtraInformationViewModel(original: Supplier_Supplier_SupplierExtraInformation_SupplierExtraInformationViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.AreCompanyReceivables !== undefined) this.AreCompanyReceivables = original.AreCompanyReceivables;
        if(original.ExistenceCounterClaims !== undefined) this.ExistenceCounterClaims = original.ExistenceCounterClaims;
        if(original.HasCompanyAssigned !== undefined) this.HasCompanyAssigned = original.HasCompanyAssigned;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.OccurenceBadDebts !== undefined) this.OccurenceBadDebts = original.OccurenceBadDebts;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Supplier_Supplier_SupplierExtraInformation_SupplierExtraInformationViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Supplier_Supplier_SupplierExtraInformation_SupplierExtraInformationViewModel {
        var reduced = Supplier_Supplier_SupplierExtraInformation_SupplierExtraInformationViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public AreCompanyReceivables:
    any;
public ExistenceCounterClaims:
    any;
public HasCompanyAssigned:
    any;
public Id:
    any;
public OccurenceBadDebts:
    any;
    public _versionTimestamp?: string;
}

export class Supplier_Supplier_FinancialStatements_SupplierUploadsViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Id:
true,Path:
                true
            }
        } else {
            this._members["Id"] = true;
            this._members["Path"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Supplier_Supplier_FinancialStatements_SupplierUploadsViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Supplier_Supplier_FinancialStatements_SupplierUploadsViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Supplier_Supplier_FinancialStatements_SupplierUploadsViewModel = new Supplier_Supplier_FinancialStatements_SupplierUploadsViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateSupplier_Supplier_FinancialStatements_SupplierUploadsViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateSupplier_Supplier_FinancialStatements_SupplierUploadsViewModel(original: Supplier_Supplier_FinancialStatements_SupplierUploadsViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Path !== undefined) this.Path = original.Path;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Supplier_Supplier_FinancialStatements_SupplierUploadsViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Supplier_Supplier_FinancialStatements_SupplierUploadsViewModel {
        var reduced = Supplier_Supplier_FinancialStatements_SupplierUploadsViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Id:
    any;
public Path:
    any;
    public _versionTimestamp?: string;
}

export class Supplier_Supplier_EconomicEvaluations_SupplierUploadsViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Id:
true,Path:
                true
            }
        } else {
            this._members["Id"] = true;
            this._members["Path"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Supplier_Supplier_EconomicEvaluations_SupplierUploadsViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Supplier_Supplier_EconomicEvaluations_SupplierUploadsViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Supplier_Supplier_EconomicEvaluations_SupplierUploadsViewModel = new Supplier_Supplier_EconomicEvaluations_SupplierUploadsViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateSupplier_Supplier_EconomicEvaluations_SupplierUploadsViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateSupplier_Supplier_EconomicEvaluations_SupplierUploadsViewModel(original: Supplier_Supplier_EconomicEvaluations_SupplierUploadsViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Path !== undefined) this.Path = original.Path;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Supplier_Supplier_EconomicEvaluations_SupplierUploadsViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Supplier_Supplier_EconomicEvaluations_SupplierUploadsViewModel {
        var reduced = Supplier_Supplier_EconomicEvaluations_SupplierUploadsViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Id:
    any;
public Path:
    any;
    public _versionTimestamp?: string;
}

export class Supplier_Supplier_BusinessPlans_SupplierUploadsViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Id:
true,Path:
                true
            }
        } else {
            this._members["Id"] = true;
            this._members["Path"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Supplier_Supplier_BusinessPlans_SupplierUploadsViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Supplier_Supplier_BusinessPlans_SupplierUploadsViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Supplier_Supplier_BusinessPlans_SupplierUploadsViewModel = new Supplier_Supplier_BusinessPlans_SupplierUploadsViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateSupplier_Supplier_BusinessPlans_SupplierUploadsViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateSupplier_Supplier_BusinessPlans_SupplierUploadsViewModel(original: Supplier_Supplier_BusinessPlans_SupplierUploadsViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Path !== undefined) this.Path = original.Path;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Supplier_Supplier_BusinessPlans_SupplierUploadsViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Supplier_Supplier_BusinessPlans_SupplierUploadsViewModel {
        var reduced = Supplier_Supplier_BusinessPlans_SupplierUploadsViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Id:
    any;
public Path:
    any;
    public _versionTimestamp?: string;
}

export class Supplier_Supplier_PriorOutstandingBalances_SupplierUploadsViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Id:
true,Path:
                true
            }
        } else {
            this._members["Id"] = true;
            this._members["Path"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Supplier_Supplier_PriorOutstandingBalances_SupplierUploadsViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Supplier_Supplier_PriorOutstandingBalances_SupplierUploadsViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Supplier_Supplier_PriorOutstandingBalances_SupplierUploadsViewModel = new Supplier_Supplier_PriorOutstandingBalances_SupplierUploadsViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateSupplier_Supplier_PriorOutstandingBalances_SupplierUploadsViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateSupplier_Supplier_PriorOutstandingBalances_SupplierUploadsViewModel(original: Supplier_Supplier_PriorOutstandingBalances_SupplierUploadsViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Path !== undefined) this.Path = original.Path;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Supplier_Supplier_PriorOutstandingBalances_SupplierUploadsViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Supplier_Supplier_PriorOutstandingBalances_SupplierUploadsViewModel {
        var reduced = Supplier_Supplier_PriorOutstandingBalances_SupplierUploadsViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Id:
    any;
public Path:
    any;
    public _versionTimestamp?: string;
}

export class Supplier_Supplier_OutstandingBalances_SupplierUploadsViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Id:
true,Path:
                true
            }
        } else {
            this._members["Id"] = true;
            this._members["Path"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Supplier_Supplier_OutstandingBalances_SupplierUploadsViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Supplier_Supplier_OutstandingBalances_SupplierUploadsViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Supplier_Supplier_OutstandingBalances_SupplierUploadsViewModel = new Supplier_Supplier_OutstandingBalances_SupplierUploadsViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateSupplier_Supplier_OutstandingBalances_SupplierUploadsViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateSupplier_Supplier_OutstandingBalances_SupplierUploadsViewModel(original: Supplier_Supplier_OutstandingBalances_SupplierUploadsViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Path !== undefined) this.Path = original.Path;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Supplier_Supplier_OutstandingBalances_SupplierUploadsViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Supplier_Supplier_OutstandingBalances_SupplierUploadsViewModel {
        var reduced = Supplier_Supplier_OutstandingBalances_SupplierUploadsViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Id:
    any;
public Path:
    any;
    public _versionTimestamp?: string;
}

export class Supplier_Supplier_CurrentSituations_SupplierUploadsViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Id:
true,Path:
                true
            }
        } else {
            this._members["Id"] = true;
            this._members["Path"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Supplier_Supplier_CurrentSituations_SupplierUploadsViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Supplier_Supplier_CurrentSituations_SupplierUploadsViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Supplier_Supplier_CurrentSituations_SupplierUploadsViewModel = new Supplier_Supplier_CurrentSituations_SupplierUploadsViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateSupplier_Supplier_CurrentSituations_SupplierUploadsViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateSupplier_Supplier_CurrentSituations_SupplierUploadsViewModel(original: Supplier_Supplier_CurrentSituations_SupplierUploadsViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Path !== undefined) this.Path = original.Path;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Supplier_Supplier_CurrentSituations_SupplierUploadsViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Supplier_Supplier_CurrentSituations_SupplierUploadsViewModel {
        var reduced = Supplier_Supplier_CurrentSituations_SupplierUploadsViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Id:
    any;
public Path:
    any;
    public _versionTimestamp?: string;
}

export class Supplier_Supplier_CurrentStatements_SupplierUploadsViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Id:
true,Path:
                true
            }
        } else {
            this._members["Id"] = true;
            this._members["Path"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Supplier_Supplier_CurrentStatements_SupplierUploadsViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Supplier_Supplier_CurrentStatements_SupplierUploadsViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Supplier_Supplier_CurrentStatements_SupplierUploadsViewModel = new Supplier_Supplier_CurrentStatements_SupplierUploadsViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateSupplier_Supplier_CurrentStatements_SupplierUploadsViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateSupplier_Supplier_CurrentStatements_SupplierUploadsViewModel(original: Supplier_Supplier_CurrentStatements_SupplierUploadsViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Path !== undefined) this.Path = original.Path;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Supplier_Supplier_CurrentStatements_SupplierUploadsViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Supplier_Supplier_CurrentStatements_SupplierUploadsViewModel {
        var reduced = Supplier_Supplier_CurrentStatements_SupplierUploadsViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Id:
    any;
public Path:
    any;
    public _versionTimestamp?: string;
}

export class Supplier_Supplier_CurrentCredits_SupplierUploadsViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Id:
true,Path:
                true
            }
        } else {
            this._members["Id"] = true;
            this._members["Path"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Supplier_Supplier_CurrentCredits_SupplierUploadsViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Supplier_Supplier_CurrentCredits_SupplierUploadsViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Supplier_Supplier_CurrentCredits_SupplierUploadsViewModel = new Supplier_Supplier_CurrentCredits_SupplierUploadsViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateSupplier_Supplier_CurrentCredits_SupplierUploadsViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateSupplier_Supplier_CurrentCredits_SupplierUploadsViewModel(original: Supplier_Supplier_CurrentCredits_SupplierUploadsViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Path !== undefined) this.Path = original.Path;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Supplier_Supplier_CurrentCredits_SupplierUploadsViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Supplier_Supplier_CurrentCredits_SupplierUploadsViewModel {
        var reduced = Supplier_Supplier_CurrentCredits_SupplierUploadsViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Id:
    any;
public Path:
    any;
    public _versionTimestamp?: string;
}

export class Supplier_Supplier_FactoringAgreements_SupplierUploadsViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Id:
true,Path:
                true
            }
        } else {
            this._members["Id"] = true;
            this._members["Path"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Supplier_Supplier_FactoringAgreements_SupplierUploadsViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Supplier_Supplier_FactoringAgreements_SupplierUploadsViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Supplier_Supplier_FactoringAgreements_SupplierUploadsViewModel = new Supplier_Supplier_FactoringAgreements_SupplierUploadsViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateSupplier_Supplier_FactoringAgreements_SupplierUploadsViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateSupplier_Supplier_FactoringAgreements_SupplierUploadsViewModel(original: Supplier_Supplier_FactoringAgreements_SupplierUploadsViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Path !== undefined) this.Path = original.Path;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Supplier_Supplier_FactoringAgreements_SupplierUploadsViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Supplier_Supplier_FactoringAgreements_SupplierUploadsViewModel {
        var reduced = Supplier_Supplier_FactoringAgreements_SupplierUploadsViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Id:
    any;
public Path:
    any;
    public _versionTimestamp?: string;
}

export class Supplier_Supplier_CustomerAgreements_SupplierUploadsViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Id:
true,Path:
                true
            }
        } else {
            this._members["Id"] = true;
            this._members["Path"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Supplier_Supplier_CustomerAgreements_SupplierUploadsViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Supplier_Supplier_CustomerAgreements_SupplierUploadsViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Supplier_Supplier_CustomerAgreements_SupplierUploadsViewModel = new Supplier_Supplier_CustomerAgreements_SupplierUploadsViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateSupplier_Supplier_CustomerAgreements_SupplierUploadsViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateSupplier_Supplier_CustomerAgreements_SupplierUploadsViewModel(original: Supplier_Supplier_CustomerAgreements_SupplierUploadsViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Path !== undefined) this.Path = original.Path;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Supplier_Supplier_CustomerAgreements_SupplierUploadsViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Supplier_Supplier_CustomerAgreements_SupplierUploadsViewModel {
        var reduced = Supplier_Supplier_CustomerAgreements_SupplierUploadsViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Id:
    any;
public Path:
    any;
    public _versionTimestamp?: string;
}

export class Supplier_Supplier_GeneralConstractuals_SupplierUploadsViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Id:
true,Path:
                true
            }
        } else {
            this._members["Id"] = true;
            this._members["Path"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Supplier_Supplier_GeneralConstractuals_SupplierUploadsViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Supplier_Supplier_GeneralConstractuals_SupplierUploadsViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Supplier_Supplier_GeneralConstractuals_SupplierUploadsViewModel = new Supplier_Supplier_GeneralConstractuals_SupplierUploadsViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateSupplier_Supplier_GeneralConstractuals_SupplierUploadsViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateSupplier_Supplier_GeneralConstractuals_SupplierUploadsViewModel(original: Supplier_Supplier_GeneralConstractuals_SupplierUploadsViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Path !== undefined) this.Path = original.Path;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Supplier_Supplier_GeneralConstractuals_SupplierUploadsViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Supplier_Supplier_GeneralConstractuals_SupplierUploadsViewModel {
        var reduced = Supplier_Supplier_GeneralConstractuals_SupplierUploadsViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Id:
    any;
public Path:
    any;
    public _versionTimestamp?: string;
}

export class Supplier_Supplier_OrganizationalCharts_SupplierUploadsViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Id:
true,Path:
                true
            }
        } else {
            this._members["Id"] = true;
            this._members["Path"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Supplier_Supplier_OrganizationalCharts_SupplierUploadsViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Supplier_Supplier_OrganizationalCharts_SupplierUploadsViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Supplier_Supplier_OrganizationalCharts_SupplierUploadsViewModel = new Supplier_Supplier_OrganizationalCharts_SupplierUploadsViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateSupplier_Supplier_OrganizationalCharts_SupplierUploadsViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateSupplier_Supplier_OrganizationalCharts_SupplierUploadsViewModel(original: Supplier_Supplier_OrganizationalCharts_SupplierUploadsViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Path !== undefined) this.Path = original.Path;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Supplier_Supplier_OrganizationalCharts_SupplierUploadsViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Supplier_Supplier_OrganizationalCharts_SupplierUploadsViewModel {
        var reduced = Supplier_Supplier_OrganizationalCharts_SupplierUploadsViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Id:
    any;
public Path:
    any;
    public _versionTimestamp?: string;
}

export class Supplier_Supplier_InvoicesForms_SupplierUploadsViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Id:
true,Path:
                true
            }
        } else {
            this._members["Id"] = true;
            this._members["Path"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Supplier_Supplier_InvoicesForms_SupplierUploadsViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Supplier_Supplier_InvoicesForms_SupplierUploadsViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Supplier_Supplier_InvoicesForms_SupplierUploadsViewModel = new Supplier_Supplier_InvoicesForms_SupplierUploadsViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateSupplier_Supplier_InvoicesForms_SupplierUploadsViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateSupplier_Supplier_InvoicesForms_SupplierUploadsViewModel(original: Supplier_Supplier_InvoicesForms_SupplierUploadsViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Path !== undefined) this.Path = original.Path;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Supplier_Supplier_InvoicesForms_SupplierUploadsViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Supplier_Supplier_InvoicesForms_SupplierUploadsViewModel {
        var reduced = Supplier_Supplier_InvoicesForms_SupplierUploadsViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Id:
    any;
public Path:
    any;
    public _versionTimestamp?: string;
}

export class Supplier_Supplier_Declarations_SupplierUploadsViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Id:
true,Path:
                true
            }
        } else {
            this._members["Id"] = true;
            this._members["Path"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Supplier_Supplier_Declarations_SupplierUploadsViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Supplier_Supplier_Declarations_SupplierUploadsViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Supplier_Supplier_Declarations_SupplierUploadsViewModel = new Supplier_Supplier_Declarations_SupplierUploadsViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateSupplier_Supplier_Declarations_SupplierUploadsViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateSupplier_Supplier_Declarations_SupplierUploadsViewModel(original: Supplier_Supplier_Declarations_SupplierUploadsViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Path !== undefined) this.Path = original.Path;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Supplier_Supplier_Declarations_SupplierUploadsViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Supplier_Supplier_Declarations_SupplierUploadsViewModel {
        var reduced = Supplier_Supplier_Declarations_SupplierUploadsViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Id:
    any;
public Path:
    any;
    public _versionTimestamp?: string;
}

export class Supplier_Supplier_SupplierEvaluation_SupplierEvaluationViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Average:
true,AverageInvoiceValue:
true,ContractualPaymentTerms:
true,Environment:
true,EquityRatio:
true,Id:
                true
            }
        } else {
            this._members["Average"] = true;
            this._members["AverageInvoiceValue"] = true;
            this._members["ContractualPaymentTerms"] = true;
            this._members["Environment"] = true;
            this._members["EquityRatio"] = true;
            this._members["Id"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Supplier_Supplier_SupplierEvaluation_SupplierEvaluationViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Supplier_Supplier_SupplierEvaluation_SupplierEvaluationViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Supplier_Supplier_SupplierEvaluation_SupplierEvaluationViewModel = new Supplier_Supplier_SupplierEvaluation_SupplierEvaluationViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateSupplier_Supplier_SupplierEvaluation_SupplierEvaluationViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateSupplier_Supplier_SupplierEvaluation_SupplierEvaluationViewModel(original: Supplier_Supplier_SupplierEvaluation_SupplierEvaluationViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Average !== undefined) this.Average = original.Average;
        if(original.AverageInvoiceValue !== undefined) this.AverageInvoiceValue = original.AverageInvoiceValue;
        if(original.ContractualPaymentTerms !== undefined) this.ContractualPaymentTerms = original.ContractualPaymentTerms;
        if(original.Environment !== undefined) this.Environment = original.Environment;
        if(original.EquityRatio !== undefined) this.EquityRatio = original.EquityRatio;
        if(original.Id !== undefined) this.Id = original.Id;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Supplier_Supplier_SupplierEvaluation_SupplierEvaluationViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Supplier_Supplier_SupplierEvaluation_SupplierEvaluationViewModel {
        var reduced = Supplier_Supplier_SupplierEvaluation_SupplierEvaluationViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Average:
    any;
public AverageInvoiceValue:
    any;
public ContractualPaymentTerms:
    any;
public Environment:
    any;
public EquityRatio:
    any;
public Id:
    any;
    public _versionTimestamp?: string;
}

export class Supplier_Supplier_Agreements_AgreementViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Id:
true,Investor:
                true
            }
        } else {
            this._members["Id"] = true;
            this._members["Investor"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.Investor != null)
            instance.Investor = Supplier_Supplier_Agreements_Agreement_Investor_InvestorViewModel._lightCast(instance.Investor);
        return instance;
    }

    public static _initializeFrom(original: Supplier_Supplier_Agreements_AgreementViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Supplier_Supplier_Agreements_AgreementViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Supplier_Supplier_Agreements_AgreementViewModel = new Supplier_Supplier_Agreements_AgreementViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateSupplier_Supplier_Agreements_AgreementViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateSupplier_Supplier_Agreements_AgreementViewModel(original: Supplier_Supplier_Agreements_AgreementViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;

        if(original.Investor !== undefined) this.Investor = Supplier_Supplier_Agreements_Agreement_Investor_InvestorViewModel._initializeFrom(original.Investor, ignoreReadOnlyProperties, context);

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Supplier_Supplier_Agreements_AgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Supplier_Supplier_Agreements_AgreementViewModel {
        var reduced = Supplier_Supplier_Agreements_AgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Id:
    any;
public Investor:
    any;
    public _versionTimestamp?: string;
}

export class Supplier_Supplier_Agreements_Agreement_Investor_InvestorViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
UserName:
                true
            }
        } else {
            this._members["UserName"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Supplier_Supplier_Agreements_Agreement_Investor_InvestorViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Supplier_Supplier_Agreements_Agreement_Investor_InvestorViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Supplier_Supplier_Agreements_Agreement_Investor_InvestorViewModel = new Supplier_Supplier_Agreements_Agreement_Investor_InvestorViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateSupplier_Supplier_Agreements_Agreement_Investor_InvestorViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateSupplier_Supplier_Agreements_Agreement_Investor_InvestorViewModel(original: Supplier_Supplier_Agreements_Agreement_Investor_InvestorViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if(original.UserName !== undefined) this.UserName = original.UserName;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Supplier_Supplier_Agreements_Agreement_Investor_InvestorViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Supplier_Supplier_Agreements_Agreement_Investor_InvestorViewModel {
        var reduced = Supplier_Supplier_Agreements_Agreement_Investor_InvestorViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public UserName:
    any;
}

export class Agreements_AgreementViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Id:
                true
            }
        } else {
            this._members["Id"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Agreements_AgreementViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Agreements_AgreementViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Agreements_AgreementViewModel = new Agreements_AgreementViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateAgreements_AgreementViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateAgreements_AgreementViewModel(original: Agreements_AgreementViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Agreements_AgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Agreements_AgreementViewModel {
        var reduced = Agreements_AgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Id:
    any;
    public _versionTimestamp?: string;
}

export class Investor_InvestorViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
UserName:
                true
            }
        } else {
            this._members["UserName"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Investor_InvestorViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Investor_InvestorViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Investor_InvestorViewModel = new Investor_InvestorViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateInvestor_InvestorViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateInvestor_InvestorViewModel(original: Investor_InvestorViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if(original.UserName !== undefined) this.UserName = original.UserName;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Investor_InvestorViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Investor_InvestorViewModel {
        var reduced = Investor_InvestorViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public UserName:
    any;
}

}
