var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).
var DSS5_SupplyChainFinancialsOptimisation;
(function (DSS5_SupplyChainFinancialsOptimisation) {
    var ViewModels;
    (function (ViewModels) {
        var BuyerPaymentForm;
        (function (BuyerPaymentForm) {
            var BuyerPaymentFormViewModel = (function (_super) {
                __extends(BuyerPaymentFormViewModel, _super);
                function BuyerPaymentFormViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Transactions: true, Agreement: true, PaymentAmount: true, PaymentDate: true, Searched: true
                        };
                    }
                    else {
                        _this._members["Transactions"] = true;
                        _this._members["Agreement"] = true;
                        _this._members["PaymentAmount"] = true;
                        _this._members["PaymentDate"] = true;
                        _this._members["Searched"] = true;
                    }
                    _this.Transactions = new Array();
                    return _this;
                }
                BuyerPaymentFormViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.Transactions != null) {
                        for (var i = 0; i < instance.Transactions.length; i++) {
                            instance.Transactions[i] = Transactions_TransactionViewModel._lightCast(instance.Transactions[i]);
                        }
                    }
                    if (instance.Agreement != null)
                        instance.Agreement = Agreement_AgreementViewModel._lightCast(instance.Agreement);
                    if (instance.PaymentDate != null)
                        instance.PaymentDate = new Date(instance.PaymentDate);
                    return instance;
                };
                BuyerPaymentFormViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new BuyerPaymentFormViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateBuyerPaymentFormViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                BuyerPaymentFormViewModel.prototype._hydrateBuyerPaymentFormViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    this._hydrateMasterPageViewModel(original, ignoreReadOnlyProperties, context);
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.Transactions != null) {
                        for (var i = 0; i < original.Transactions.length; i++) {
                            this.Transactions.push(Transactions_TransactionViewModel._initializeFrom(original.Transactions[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.Agreement !== undefined)
                        this.Agreement = Agreement_AgreementViewModel._initializeFrom(original.Agreement, ignoreReadOnlyProperties, context);
                    if (original.PaymentAmount !== undefined)
                        this.PaymentAmount = original.PaymentAmount;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.PaymentDate))
                        this.PaymentDate = new Date(original.PaymentDate);
                    if (original.Searched !== undefined)
                        this.Searched = original.Searched;
                    this.PickListSelectedItemKeys = original.PickListSelectedItemKeys;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = BuyerPaymentFormViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        BuyerPaymentFormViewModel._deleteDropDownInitialValues(reduced);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                BuyerPaymentFormViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = BuyerPaymentFormViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    BuyerPaymentFormViewModel._deleteDropDownInitialValues(reduced);
                    return reduced;
                };
                BuyerPaymentFormViewModel._deleteDropDownInitialValues = function (reduced) {
                    if (reduced == null)
                        return;
                    DSS5_SupplyChainFinancialsOptimisation.ViewModels.MasterPage.MasterPageViewModel._deleteDropDownInitialValues(reduced);
                };
                BuyerPaymentFormViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return BuyerPaymentFormViewModel;
            }(DSS5_SupplyChainFinancialsOptimisation.ViewModels.MasterPage.MasterPageViewModel));
            BuyerPaymentForm.BuyerPaymentFormViewModel = BuyerPaymentFormViewModel;
            var Transactions_TransactionViewModel = (function (_super) {
                __extends(Transactions_TransactionViewModel, _super);
                function Transactions_TransactionViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true, InvoicedDate: true, PaidByBuyer: true, PaymentDate: true, PaymentStatus: true, ToBePaidAmount: true, TransactionValue: true, Invoices: true, TransactionStatus: true, ImportedBuyer: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                        _this._members["InvoicedDate"] = true;
                        _this._members["PaidByBuyer"] = true;
                        _this._members["PaymentDate"] = true;
                        _this._members["PaymentStatus"] = true;
                        _this._members["ToBePaidAmount"] = true;
                        _this._members["TransactionValue"] = true;
                        _this._members["Invoices"] = true;
                        _this._members["TransactionStatus"] = true;
                        _this._members["ImportedBuyer"] = true;
                    }
                    _this.Invoices = new Array();
                    return _this;
                }
                Transactions_TransactionViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.InvoicedDate != null)
                        instance.InvoicedDate = new Date(instance.InvoicedDate);
                    if (instance.PaymentDate != null)
                        instance.PaymentDate = new Date(instance.PaymentDate);
                    if (instance.Invoices != null) {
                        for (var i = 0; i < instance.Invoices.length; i++) {
                            instance.Invoices[i] = Transactions_Transaction_Invoices_InvoiceViewModel._lightCast(instance.Invoices[i]);
                        }
                    }
                    if (instance.TransactionStatus != null)
                        instance.TransactionStatus = Transactions_Transaction_TransactionStatus_TransactionStatusViewModel._lightCast(instance.TransactionStatus);
                    if (instance.ImportedBuyer != null)
                        instance.ImportedBuyer = Transactions_Transaction_ImportedBuyer_ImportedBuyerViewModel._lightCast(instance.ImportedBuyer);
                    return instance;
                };
                Transactions_TransactionViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Transactions_TransactionViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateTransactions_TransactionViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Transactions_TransactionViewModel.prototype._hydrateTransactions_TransactionViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.InvoicedDate))
                        this.InvoicedDate = new Date(original.InvoicedDate);
                    if (original.PaidByBuyer !== undefined)
                        this.PaidByBuyer = original.PaidByBuyer;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.PaymentDate))
                        this.PaymentDate = new Date(original.PaymentDate);
                    if (original.PaymentStatus !== undefined)
                        this.PaymentStatus = original.PaymentStatus;
                    if (original.ToBePaidAmount !== undefined)
                        this.ToBePaidAmount = original.ToBePaidAmount;
                    if (original.TransactionValue !== undefined)
                        this.TransactionValue = original.TransactionValue;
                    if (original.Invoices != null) {
                        for (var i = 0; i < original.Invoices.length; i++) {
                            this.Invoices.push(Transactions_Transaction_Invoices_InvoiceViewModel._initializeFrom(original.Invoices[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.TransactionStatus !== undefined)
                        this.TransactionStatus = Transactions_Transaction_TransactionStatus_TransactionStatusViewModel._initializeFrom(original.TransactionStatus, ignoreReadOnlyProperties, context);
                    if (original.ImportedBuyer !== undefined)
                        this.ImportedBuyer = Transactions_Transaction_ImportedBuyer_ImportedBuyerViewModel._initializeFrom(original.ImportedBuyer, ignoreReadOnlyProperties, context);
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Transactions_TransactionViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Transactions_TransactionViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Transactions_TransactionViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Transactions_TransactionViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Transactions_TransactionViewModel;
            }(BaseClass.ViewModel));
            BuyerPaymentForm.Transactions_TransactionViewModel = Transactions_TransactionViewModel;
            var Transactions_Transaction_Invoices_InvoiceViewModel = (function (_super) {
                __extends(Transactions_Transaction_Invoices_InvoiceViewModel, _super);
                function Transactions_Transaction_Invoices_InvoiceViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                    }
                    return _this;
                }
                Transactions_Transaction_Invoices_InvoiceViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Transactions_Transaction_Invoices_InvoiceViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Transactions_Transaction_Invoices_InvoiceViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateTransactions_Transaction_Invoices_InvoiceViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Transactions_Transaction_Invoices_InvoiceViewModel.prototype._hydrateTransactions_Transaction_Invoices_InvoiceViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Transactions_Transaction_Invoices_InvoiceViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Transactions_Transaction_Invoices_InvoiceViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Transactions_Transaction_Invoices_InvoiceViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Transactions_Transaction_Invoices_InvoiceViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Transactions_Transaction_Invoices_InvoiceViewModel;
            }(BaseClass.ViewModel));
            BuyerPaymentForm.Transactions_Transaction_Invoices_InvoiceViewModel = Transactions_Transaction_Invoices_InvoiceViewModel;
            var Transactions_Transaction_TransactionStatus_TransactionStatusViewModel = (function (_super) {
                __extends(Transactions_Transaction_TransactionStatus_TransactionStatusViewModel, _super);
                function Transactions_Transaction_TransactionStatus_TransactionStatusViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true, PaymentStatus: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                        _this._members["PaymentStatus"] = true;
                    }
                    return _this;
                }
                Transactions_Transaction_TransactionStatus_TransactionStatusViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Transactions_Transaction_TransactionStatus_TransactionStatusViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Transactions_Transaction_TransactionStatus_TransactionStatusViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateTransactions_Transaction_TransactionStatus_TransactionStatusViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Transactions_Transaction_TransactionStatus_TransactionStatusViewModel.prototype._hydrateTransactions_Transaction_TransactionStatus_TransactionStatusViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.PaymentStatus !== undefined)
                        this.PaymentStatus = original.PaymentStatus;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Transactions_Transaction_TransactionStatus_TransactionStatusViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Transactions_Transaction_TransactionStatus_TransactionStatusViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Transactions_Transaction_TransactionStatus_TransactionStatusViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Transactions_Transaction_TransactionStatus_TransactionStatusViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Transactions_Transaction_TransactionStatus_TransactionStatusViewModel;
            }(BaseClass.ViewModel));
            BuyerPaymentForm.Transactions_Transaction_TransactionStatus_TransactionStatusViewModel = Transactions_Transaction_TransactionStatus_TransactionStatusViewModel;
            var Transactions_Transaction_ImportedBuyer_ImportedBuyerViewModel = (function (_super) {
                __extends(Transactions_Transaction_ImportedBuyer_ImportedBuyerViewModel, _super);
                function Transactions_Transaction_ImportedBuyer_ImportedBuyerViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Company: true, Id: true
                        };
                    }
                    else {
                        _this._members["Company"] = true;
                        _this._members["Id"] = true;
                    }
                    return _this;
                }
                Transactions_Transaction_ImportedBuyer_ImportedBuyerViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Transactions_Transaction_ImportedBuyer_ImportedBuyerViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Transactions_Transaction_ImportedBuyer_ImportedBuyerViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateTransactions_Transaction_ImportedBuyer_ImportedBuyerViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Transactions_Transaction_ImportedBuyer_ImportedBuyerViewModel.prototype._hydrateTransactions_Transaction_ImportedBuyer_ImportedBuyerViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Company !== undefined)
                        this.Company = original.Company;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Transactions_Transaction_ImportedBuyer_ImportedBuyerViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Transactions_Transaction_ImportedBuyer_ImportedBuyerViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Transactions_Transaction_ImportedBuyer_ImportedBuyerViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Transactions_Transaction_ImportedBuyer_ImportedBuyerViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Transactions_Transaction_ImportedBuyer_ImportedBuyerViewModel;
            }(BaseClass.ViewModel));
            BuyerPaymentForm.Transactions_Transaction_ImportedBuyer_ImportedBuyerViewModel = Transactions_Transaction_ImportedBuyer_ImportedBuyerViewModel;
            var Agreement_AgreementViewModel = (function (_super) {
                __extends(Agreement_AgreementViewModel, _super);
                function Agreement_AgreementViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            EndDate: true, FundedRate: true, Id: true, InterestRate: true, StartDate: true, Supplier: true, CommercialAgreements: true
                        };
                    }
                    else {
                        _this._members["EndDate"] = true;
                        _this._members["FundedRate"] = true;
                        _this._members["Id"] = true;
                        _this._members["InterestRate"] = true;
                        _this._members["StartDate"] = true;
                        _this._members["Supplier"] = true;
                        _this._members["CommercialAgreements"] = true;
                    }
                    _this.CommercialAgreements = new Array();
                    return _this;
                }
                Agreement_AgreementViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.EndDate != null)
                        instance.EndDate = new Date(instance.EndDate);
                    if (instance.StartDate != null)
                        instance.StartDate = new Date(instance.StartDate);
                    if (instance.Supplier != null)
                        instance.Supplier = Agreement_Agreement_Supplier_SupplierViewModel._lightCast(instance.Supplier);
                    if (instance.CommercialAgreements != null) {
                        for (var i = 0; i < instance.CommercialAgreements.length; i++) {
                            instance.CommercialAgreements[i] = Agreement_Agreement_CommercialAgreements_CommercialAgreementViewModel._lightCast(instance.CommercialAgreements[i]);
                        }
                    }
                    return instance;
                };
                Agreement_AgreementViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Agreement_AgreementViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateAgreement_AgreementViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Agreement_AgreementViewModel.prototype._hydrateAgreement_AgreementViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.EndDate))
                        this.EndDate = new Date(original.EndDate);
                    if (original.FundedRate !== undefined)
                        this.FundedRate = original.FundedRate;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.InterestRate !== undefined)
                        this.InterestRate = original.InterestRate;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.StartDate))
                        this.StartDate = new Date(original.StartDate);
                    if (original.Supplier !== undefined)
                        this.Supplier = Agreement_Agreement_Supplier_SupplierViewModel._initializeFrom(original.Supplier, ignoreReadOnlyProperties, context);
                    if (original.CommercialAgreements != null) {
                        for (var i = 0; i < original.CommercialAgreements.length; i++) {
                            this.CommercialAgreements.push(Agreement_Agreement_CommercialAgreements_CommercialAgreementViewModel._initializeFrom(original.CommercialAgreements[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Agreement_AgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Agreement_AgreementViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Agreement_AgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Agreement_AgreementViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Agreement_AgreementViewModel;
            }(BaseClass.ViewModel));
            BuyerPaymentForm.Agreement_AgreementViewModel = Agreement_AgreementViewModel;
            var Agreement_Agreement_Supplier_SupplierViewModel = (function (_super) {
                __extends(Agreement_Agreement_Supplier_SupplierViewModel, _super);
                function Agreement_Agreement_Supplier_SupplierViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Company: true, UserName: true
                        };
                    }
                    else {
                        _this._members["Company"] = true;
                        _this._members["UserName"] = true;
                    }
                    return _this;
                }
                Agreement_Agreement_Supplier_SupplierViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Agreement_Agreement_Supplier_SupplierViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Agreement_Agreement_Supplier_SupplierViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateAgreement_Agreement_Supplier_SupplierViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Agreement_Agreement_Supplier_SupplierViewModel.prototype._hydrateAgreement_Agreement_Supplier_SupplierViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.Company !== undefined)
                        this.Company = original.Company;
                    if (original.UserName !== undefined)
                        this.UserName = original.UserName;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Agreement_Agreement_Supplier_SupplierViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Agreement_Agreement_Supplier_SupplierViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Agreement_Agreement_Supplier_SupplierViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Agreement_Agreement_Supplier_SupplierViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Agreement_Agreement_Supplier_SupplierViewModel;
            }(BaseClass.ViewModel));
            BuyerPaymentForm.Agreement_Agreement_Supplier_SupplierViewModel = Agreement_Agreement_Supplier_SupplierViewModel;
            var Agreement_Agreement_CommercialAgreements_CommercialAgreementViewModel = (function (_super) {
                __extends(Agreement_Agreement_CommercialAgreements_CommercialAgreementViewModel, _super);
                function Agreement_Agreement_CommercialAgreements_CommercialAgreementViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true, Transactions: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                        _this._members["Transactions"] = true;
                    }
                    _this.Transactions = new Array();
                    return _this;
                }
                Agreement_Agreement_CommercialAgreements_CommercialAgreementViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.Transactions != null) {
                        for (var i = 0; i < instance.Transactions.length; i++) {
                            instance.Transactions[i] = Agreement_Agreement_CommercialAgreements_CommercialAgreement_Transactions_TransactionViewModel._lightCast(instance.Transactions[i]);
                        }
                    }
                    return instance;
                };
                Agreement_Agreement_CommercialAgreements_CommercialAgreementViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Agreement_Agreement_CommercialAgreements_CommercialAgreementViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateAgreement_Agreement_CommercialAgreements_CommercialAgreementViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Agreement_Agreement_CommercialAgreements_CommercialAgreementViewModel.prototype._hydrateAgreement_Agreement_CommercialAgreements_CommercialAgreementViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.Transactions != null) {
                        for (var i = 0; i < original.Transactions.length; i++) {
                            this.Transactions.push(Agreement_Agreement_CommercialAgreements_CommercialAgreement_Transactions_TransactionViewModel._initializeFrom(original.Transactions[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Agreement_Agreement_CommercialAgreements_CommercialAgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Agreement_Agreement_CommercialAgreements_CommercialAgreementViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Agreement_Agreement_CommercialAgreements_CommercialAgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Agreement_Agreement_CommercialAgreements_CommercialAgreementViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Agreement_Agreement_CommercialAgreements_CommercialAgreementViewModel;
            }(BaseClass.ViewModel));
            BuyerPaymentForm.Agreement_Agreement_CommercialAgreements_CommercialAgreementViewModel = Agreement_Agreement_CommercialAgreements_CommercialAgreementViewModel;
            var Agreement_Agreement_CommercialAgreements_CommercialAgreement_Transactions_TransactionViewModel = (function (_super) {
                __extends(Agreement_Agreement_CommercialAgreements_CommercialAgreement_Transactions_TransactionViewModel, _super);
                function Agreement_Agreement_CommercialAgreements_CommercialAgreement_Transactions_TransactionViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true, PaymentStatus: true, TransactionValue: true, Invoices: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                        _this._members["PaymentStatus"] = true;
                        _this._members["TransactionValue"] = true;
                        _this._members["Invoices"] = true;
                    }
                    _this.Invoices = new Array();
                    return _this;
                }
                Agreement_Agreement_CommercialAgreements_CommercialAgreement_Transactions_TransactionViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.Invoices != null) {
                        for (var i = 0; i < instance.Invoices.length; i++) {
                            instance.Invoices[i] = Agreement_Agreement_CommercialAgreements_CommercialAgreement_Transactions_Transaction_Invoices_InvoiceViewModel._lightCast(instance.Invoices[i]);
                        }
                    }
                    return instance;
                };
                Agreement_Agreement_CommercialAgreements_CommercialAgreement_Transactions_TransactionViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Agreement_Agreement_CommercialAgreements_CommercialAgreement_Transactions_TransactionViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateAgreement_Agreement_CommercialAgreements_CommercialAgreement_Transactions_TransactionViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Agreement_Agreement_CommercialAgreements_CommercialAgreement_Transactions_TransactionViewModel.prototype._hydrateAgreement_Agreement_CommercialAgreements_CommercialAgreement_Transactions_TransactionViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.PaymentStatus !== undefined)
                        this.PaymentStatus = original.PaymentStatus;
                    if (original.TransactionValue !== undefined)
                        this.TransactionValue = original.TransactionValue;
                    if (original.Invoices != null) {
                        for (var i = 0; i < original.Invoices.length; i++) {
                            this.Invoices.push(Agreement_Agreement_CommercialAgreements_CommercialAgreement_Transactions_Transaction_Invoices_InvoiceViewModel._initializeFrom(original.Invoices[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Agreement_Agreement_CommercialAgreements_CommercialAgreement_Transactions_TransactionViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Agreement_Agreement_CommercialAgreements_CommercialAgreement_Transactions_TransactionViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Agreement_Agreement_CommercialAgreements_CommercialAgreement_Transactions_TransactionViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Agreement_Agreement_CommercialAgreements_CommercialAgreement_Transactions_TransactionViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Agreement_Agreement_CommercialAgreements_CommercialAgreement_Transactions_TransactionViewModel;
            }(BaseClass.ViewModel));
            BuyerPaymentForm.Agreement_Agreement_CommercialAgreements_CommercialAgreement_Transactions_TransactionViewModel = Agreement_Agreement_CommercialAgreements_CommercialAgreement_Transactions_TransactionViewModel;
            var Agreement_Agreement_CommercialAgreements_CommercialAgreement_Transactions_Transaction_Invoices_InvoiceViewModel = (function (_super) {
                __extends(Agreement_Agreement_CommercialAgreements_CommercialAgreement_Transactions_Transaction_Invoices_InvoiceViewModel, _super);
                function Agreement_Agreement_CommercialAgreements_CommercialAgreement_Transactions_Transaction_Invoices_InvoiceViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                    }
                    return _this;
                }
                Agreement_Agreement_CommercialAgreements_CommercialAgreement_Transactions_Transaction_Invoices_InvoiceViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Agreement_Agreement_CommercialAgreements_CommercialAgreement_Transactions_Transaction_Invoices_InvoiceViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Agreement_Agreement_CommercialAgreements_CommercialAgreement_Transactions_Transaction_Invoices_InvoiceViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateAgreement_Agreement_CommercialAgreements_CommercialAgreement_Transactions_Transaction_Invoices_InvoiceViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Agreement_Agreement_CommercialAgreements_CommercialAgreement_Transactions_Transaction_Invoices_InvoiceViewModel.prototype._hydrateAgreement_Agreement_CommercialAgreements_CommercialAgreement_Transactions_Transaction_Invoices_InvoiceViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Agreement_Agreement_CommercialAgreements_CommercialAgreement_Transactions_Transaction_Invoices_InvoiceViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Agreement_Agreement_CommercialAgreements_CommercialAgreement_Transactions_Transaction_Invoices_InvoiceViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Agreement_Agreement_CommercialAgreements_CommercialAgreement_Transactions_Transaction_Invoices_InvoiceViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Agreement_Agreement_CommercialAgreements_CommercialAgreement_Transactions_Transaction_Invoices_InvoiceViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Agreement_Agreement_CommercialAgreements_CommercialAgreement_Transactions_Transaction_Invoices_InvoiceViewModel;
            }(BaseClass.ViewModel));
            BuyerPaymentForm.Agreement_Agreement_CommercialAgreements_CommercialAgreement_Transactions_Transaction_Invoices_InvoiceViewModel = Agreement_Agreement_CommercialAgreements_CommercialAgreement_Transactions_Transaction_Invoices_InvoiceViewModel;
        })(BuyerPaymentForm = ViewModels.BuyerPaymentForm || (ViewModels.BuyerPaymentForm = {}));
    })(ViewModels = DSS5_SupplyChainFinancialsOptimisation.ViewModels || (DSS5_SupplyChainFinancialsOptimisation.ViewModels = {}));
})(DSS5_SupplyChainFinancialsOptimisation || (DSS5_SupplyChainFinancialsOptimisation = {}));
