// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).
namespace DSS5_SupplyChainFinancialsOptimisation.ViewModels.SlideIntermidiary {
export class SlideIntermidiaryViewModel extends DSS5_SupplyChainFinancialsOptimisation.ViewModels.MasterPageForSlide.MasterPageForSlideViewModel {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
ChosenIntermediaryType:
true,Description:
true,EMail:
true,Company:
                true
            }
        } else {
            this._members["ChosenIntermediaryType"] = true;
            this._members["Description"] = true;
            this._members["EMail"] = true;
            this._members["Company"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: SlideIntermidiaryViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): SlideIntermidiaryViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        SlideIntermidiaryViewModel = new SlideIntermidiaryViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateSlideIntermidiaryViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateSlideIntermidiaryViewModel(original: SlideIntermidiaryViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;

        this._hydrateMasterPageForSlideViewModel(original, ignoreReadOnlyProperties, context);

        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if(original.ChosenIntermediaryType !== undefined) this.ChosenIntermediaryType = original.ChosenIntermediaryType;
        if(original.Description !== undefined) this.Description = original.Description;
        if(original.EMail !== undefined) this.EMail = original.EMail;
        if(original.Company !== undefined) this.Company = original.Company;
        this.DropdownBoxSelectedItemKeys = original.DropdownBoxSelectedItemKeys;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = SlideIntermidiaryViewModel._initializeFrom(this, ignoreReadOnlyProperties);
            SlideIntermidiaryViewModel._deleteDropDownInitialValues(reduced);
            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): SlideIntermidiaryViewModel {
        var reduced = SlideIntermidiaryViewModel._initializeFrom(this, ignoreReadOnlyProperties);
        SlideIntermidiaryViewModel._deleteDropDownInitialValues(reduced);
        return reduced;
    }

    public static _deleteDropDownInitialValues(reduced: SlideIntermidiaryViewModel) {
        if (reduced == null) return;


        DSS5_SupplyChainFinancialsOptimisation.ViewModels.MasterPageForSlide.MasterPageForSlideViewModel._deleteDropDownInitialValues(reduced);
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public ChosenIntermediaryType:
    any;
public Description:
    any;
public EMail:
    any;
public Company:
    any;
public DropdownBoxSelectedItemKeys:
    any[];
}

}
