var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).
var DSS5_SupplyChainFinancialsOptimisation;
(function (DSS5_SupplyChainFinancialsOptimisation) {
    var ViewModels;
    (function (ViewModels) {
        var TransactionForm;
        (function (TransactionForm) {
            var TransactionFormViewModel = (function (_super) {
                __extends(TransactionFormViewModel, _super);
                function TransactionFormViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Transaction: true, CodeText: true, IsSupplier: true
                        };
                    }
                    else {
                        _this._members["Transaction"] = true;
                        _this._members["CodeText"] = true;
                        _this._members["IsSupplier"] = true;
                    }
                    return _this;
                }
                TransactionFormViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.Transaction != null)
                        instance.Transaction = Transaction_TransactionViewModel._lightCast(instance.Transaction);
                    return instance;
                };
                TransactionFormViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new TransactionFormViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateTransactionFormViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                TransactionFormViewModel.prototype._hydrateTransactionFormViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    this._hydrateMasterPageViewModel(original, ignoreReadOnlyProperties, context);
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.Transaction !== undefined)
                        this.Transaction = Transaction_TransactionViewModel._initializeFrom(original.Transaction, ignoreReadOnlyProperties, context);
                    if (original.CodeText !== undefined)
                        this.CodeText = original.CodeText;
                    if (original.IsSupplier !== undefined)
                        this.IsSupplier = original.IsSupplier;
                    this.btnSelectCommercialAgreementSelectedItemKeys = original.btnSelectCommercialAgreementSelectedItemKeys;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = TransactionFormViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        TransactionFormViewModel._deleteDropDownInitialValues(reduced);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                TransactionFormViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = TransactionFormViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    TransactionFormViewModel._deleteDropDownInitialValues(reduced);
                    return reduced;
                };
                TransactionFormViewModel._deleteDropDownInitialValues = function (reduced) {
                    if (reduced == null)
                        return;
                    DSS5_SupplyChainFinancialsOptimisation.ViewModels.MasterPage.MasterPageViewModel._deleteDropDownInitialValues(reduced);
                };
                TransactionFormViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return TransactionFormViewModel;
            }(DSS5_SupplyChainFinancialsOptimisation.ViewModels.MasterPage.MasterPageViewModel));
            TransactionForm.TransactionFormViewModel = TransactionFormViewModel;
            var Transaction_TransactionViewModel = (function (_super) {
                __extends(Transaction_TransactionViewModel, _super);
                function Transaction_TransactionViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            FundedAmount: true, Id: true, PaidByBuyer: true, PaymentStatus: true, RestPaymentAmount: true, ToBePaidAmount: true, TransactionDateOccured: true, TransactionValue: true, CommercialAgreement: true, Orders: true, CreditNotes: true, DeliveryNotes: true, Invoices: true, ProofOfDeliveries: true, TransactionStatus: true, ImportedBuyer: true, Supplier: true, LetterOfCredits: true, BillOfLandings: true, CustomsClearingDocumentations: true, PartialProofOfDeliveries: true, TransactionOverview: true
                        };
                    }
                    else {
                        _this._members["FundedAmount"] = true;
                        _this._members["Id"] = true;
                        _this._members["PaidByBuyer"] = true;
                        _this._members["PaymentStatus"] = true;
                        _this._members["RestPaymentAmount"] = true;
                        _this._members["ToBePaidAmount"] = true;
                        _this._members["TransactionDateOccured"] = true;
                        _this._members["TransactionValue"] = true;
                        _this._members["CommercialAgreement"] = true;
                        _this._members["Orders"] = true;
                        _this._members["CreditNotes"] = true;
                        _this._members["DeliveryNotes"] = true;
                        _this._members["Invoices"] = true;
                        _this._members["ProofOfDeliveries"] = true;
                        _this._members["TransactionStatus"] = true;
                        _this._members["ImportedBuyer"] = true;
                        _this._members["Supplier"] = true;
                        _this._members["LetterOfCredits"] = true;
                        _this._members["BillOfLandings"] = true;
                        _this._members["CustomsClearingDocumentations"] = true;
                        _this._members["PartialProofOfDeliveries"] = true;
                        _this._members["TransactionOverview"] = true;
                    }
                    _this.Orders = new Array();
                    _this.CreditNotes = new Array();
                    _this.DeliveryNotes = new Array();
                    _this.Invoices = new Array();
                    _this.ProofOfDeliveries = new Array();
                    _this.LetterOfCredits = new Array();
                    _this.BillOfLandings = new Array();
                    _this.CustomsClearingDocumentations = new Array();
                    _this.PartialProofOfDeliveries = new Array();
                    return _this;
                }
                Transaction_TransactionViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.TransactionDateOccured != null)
                        instance.TransactionDateOccured = new Date(instance.TransactionDateOccured);
                    if (instance.CommercialAgreement != null)
                        instance.CommercialAgreement = Transaction_Transaction_CommercialAgreement_CommercialAgreementViewModel._lightCast(instance.CommercialAgreement);
                    if (instance.Orders != null) {
                        for (var i = 0; i < instance.Orders.length; i++) {
                            instance.Orders[i] = Transaction_Transaction_Orders_OrderViewModel._lightCast(instance.Orders[i]);
                        }
                    }
                    if (instance.CreditNotes != null) {
                        for (var i = 0; i < instance.CreditNotes.length; i++) {
                            instance.CreditNotes[i] = Transaction_Transaction_CreditNotes_CreditNoteViewModel._lightCast(instance.CreditNotes[i]);
                        }
                    }
                    if (instance.DeliveryNotes != null) {
                        for (var i = 0; i < instance.DeliveryNotes.length; i++) {
                            instance.DeliveryNotes[i] = Transaction_Transaction_DeliveryNotes_DeliveryNoteViewModel._lightCast(instance.DeliveryNotes[i]);
                        }
                    }
                    if (instance.Invoices != null) {
                        for (var i = 0; i < instance.Invoices.length; i++) {
                            instance.Invoices[i] = Transaction_Transaction_Invoices_InvoiceViewModel._lightCast(instance.Invoices[i]);
                        }
                    }
                    if (instance.ProofOfDeliveries != null) {
                        for (var i = 0; i < instance.ProofOfDeliveries.length; i++) {
                            instance.ProofOfDeliveries[i] = Transaction_Transaction_ProofOfDeliveries_ProofOfDeliveryViewModel._lightCast(instance.ProofOfDeliveries[i]);
                        }
                    }
                    if (instance.TransactionStatus != null)
                        instance.TransactionStatus = Transaction_Transaction_TransactionStatus_TransactionStatusViewModel._lightCast(instance.TransactionStatus);
                    if (instance.ImportedBuyer != null)
                        instance.ImportedBuyer = Transaction_Transaction_ImportedBuyer_ImportedBuyerViewModel._lightCast(instance.ImportedBuyer);
                    if (instance.Supplier != null)
                        instance.Supplier = Transaction_Transaction_Supplier_SupplierViewModel._lightCast(instance.Supplier);
                    if (instance.LetterOfCredits != null) {
                        for (var i = 0; i < instance.LetterOfCredits.length; i++) {
                            instance.LetterOfCredits[i] = Transaction_Transaction_LetterOfCredits_LetterOfCreditViewModel._lightCast(instance.LetterOfCredits[i]);
                        }
                    }
                    if (instance.BillOfLandings != null) {
                        for (var i = 0; i < instance.BillOfLandings.length; i++) {
                            instance.BillOfLandings[i] = Transaction_Transaction_BillOfLandings_BillOfLandingViewModel._lightCast(instance.BillOfLandings[i]);
                        }
                    }
                    if (instance.CustomsClearingDocumentations != null) {
                        for (var i = 0; i < instance.CustomsClearingDocumentations.length; i++) {
                            instance.CustomsClearingDocumentations[i] = Transaction_Transaction_CustomsClearingDocumentations_CustomsClearingDocumentationViewModel._lightCast(instance.CustomsClearingDocumentations[i]);
                        }
                    }
                    if (instance.PartialProofOfDeliveries != null) {
                        for (var i = 0; i < instance.PartialProofOfDeliveries.length; i++) {
                            instance.PartialProofOfDeliveries[i] = Transaction_Transaction_PartialProofOfDeliveries_PartialProofOfDeliveryViewModel._lightCast(instance.PartialProofOfDeliveries[i]);
                        }
                    }
                    if (instance.TransactionOverview != null)
                        instance.TransactionOverview = Transaction_Transaction_TransactionOverview_TransactionOverviewViewModel._lightCast(instance.TransactionOverview);
                    return instance;
                };
                Transaction_TransactionViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Transaction_TransactionViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateTransaction_TransactionViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Transaction_TransactionViewModel.prototype._hydrateTransaction_TransactionViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.FundedAmount !== undefined)
                        this.FundedAmount = original.FundedAmount;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.PaidByBuyer !== undefined)
                        this.PaidByBuyer = original.PaidByBuyer;
                    if (original.PaymentStatus !== undefined)
                        this.PaymentStatus = original.PaymentStatus;
                    if (original.RestPaymentAmount !== undefined)
                        this.RestPaymentAmount = original.RestPaymentAmount;
                    if (original.ToBePaidAmount !== undefined)
                        this.ToBePaidAmount = original.ToBePaidAmount;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.TransactionDateOccured))
                        this.TransactionDateOccured = new Date(original.TransactionDateOccured);
                    if (original.TransactionValue !== undefined)
                        this.TransactionValue = original.TransactionValue;
                    if (original.CommercialAgreement !== undefined)
                        this.CommercialAgreement = Transaction_Transaction_CommercialAgreement_CommercialAgreementViewModel._initializeFrom(original.CommercialAgreement, ignoreReadOnlyProperties, context);
                    if (original.Orders != null) {
                        for (var i = 0; i < original.Orders.length; i++) {
                            this.Orders.push(Transaction_Transaction_Orders_OrderViewModel._initializeFrom(original.Orders[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.CreditNotes != null) {
                        for (var i = 0; i < original.CreditNotes.length; i++) {
                            this.CreditNotes.push(Transaction_Transaction_CreditNotes_CreditNoteViewModel._initializeFrom(original.CreditNotes[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.DeliveryNotes != null) {
                        for (var i = 0; i < original.DeliveryNotes.length; i++) {
                            this.DeliveryNotes.push(Transaction_Transaction_DeliveryNotes_DeliveryNoteViewModel._initializeFrom(original.DeliveryNotes[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.Invoices != null) {
                        for (var i = 0; i < original.Invoices.length; i++) {
                            this.Invoices.push(Transaction_Transaction_Invoices_InvoiceViewModel._initializeFrom(original.Invoices[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.ProofOfDeliveries != null) {
                        for (var i = 0; i < original.ProofOfDeliveries.length; i++) {
                            this.ProofOfDeliveries.push(Transaction_Transaction_ProofOfDeliveries_ProofOfDeliveryViewModel._initializeFrom(original.ProofOfDeliveries[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.TransactionStatus !== undefined)
                        this.TransactionStatus = Transaction_Transaction_TransactionStatus_TransactionStatusViewModel._initializeFrom(original.TransactionStatus, ignoreReadOnlyProperties, context);
                    if (original.ImportedBuyer !== undefined)
                        this.ImportedBuyer = Transaction_Transaction_ImportedBuyer_ImportedBuyerViewModel._initializeFrom(original.ImportedBuyer, ignoreReadOnlyProperties, context);
                    if (original.Supplier !== undefined)
                        this.Supplier = Transaction_Transaction_Supplier_SupplierViewModel._initializeFrom(original.Supplier, ignoreReadOnlyProperties, context);
                    if (original.LetterOfCredits != null) {
                        for (var i = 0; i < original.LetterOfCredits.length; i++) {
                            this.LetterOfCredits.push(Transaction_Transaction_LetterOfCredits_LetterOfCreditViewModel._initializeFrom(original.LetterOfCredits[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.BillOfLandings != null) {
                        for (var i = 0; i < original.BillOfLandings.length; i++) {
                            this.BillOfLandings.push(Transaction_Transaction_BillOfLandings_BillOfLandingViewModel._initializeFrom(original.BillOfLandings[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.CustomsClearingDocumentations != null) {
                        for (var i = 0; i < original.CustomsClearingDocumentations.length; i++) {
                            this.CustomsClearingDocumentations.push(Transaction_Transaction_CustomsClearingDocumentations_CustomsClearingDocumentationViewModel._initializeFrom(original.CustomsClearingDocumentations[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.PartialProofOfDeliveries != null) {
                        for (var i = 0; i < original.PartialProofOfDeliveries.length; i++) {
                            this.PartialProofOfDeliveries.push(Transaction_Transaction_PartialProofOfDeliveries_PartialProofOfDeliveryViewModel._initializeFrom(original.PartialProofOfDeliveries[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.TransactionOverview !== undefined)
                        this.TransactionOverview = Transaction_Transaction_TransactionOverview_TransactionOverviewViewModel._initializeFrom(original.TransactionOverview, ignoreReadOnlyProperties, context);
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Transaction_TransactionViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Transaction_TransactionViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Transaction_TransactionViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Transaction_TransactionViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Transaction_TransactionViewModel;
            }(BaseClass.ViewModel));
            TransactionForm.Transaction_TransactionViewModel = Transaction_TransactionViewModel;
            var Transaction_Transaction_CommercialAgreement_CommercialAgreementViewModel = (function (_super) {
                __extends(Transaction_Transaction_CommercialAgreement_CommercialAgreementViewModel, _super);
                function Transaction_Transaction_CommercialAgreement_CommercialAgreementViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true, PaymentTerms: true, ImportedBuyer: true, Agreement: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                        _this._members["PaymentTerms"] = true;
                        _this._members["ImportedBuyer"] = true;
                        _this._members["Agreement"] = true;
                    }
                    return _this;
                }
                Transaction_Transaction_CommercialAgreement_CommercialAgreementViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.ImportedBuyer != null)
                        instance.ImportedBuyer = Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel._lightCast(instance.ImportedBuyer);
                    if (instance.Agreement != null)
                        instance.Agreement = Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_AgreementViewModel._lightCast(instance.Agreement);
                    return instance;
                };
                Transaction_Transaction_CommercialAgreement_CommercialAgreementViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Transaction_Transaction_CommercialAgreement_CommercialAgreementViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateTransaction_Transaction_CommercialAgreement_CommercialAgreementViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Transaction_Transaction_CommercialAgreement_CommercialAgreementViewModel.prototype._hydrateTransaction_Transaction_CommercialAgreement_CommercialAgreementViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.PaymentTerms !== undefined)
                        this.PaymentTerms = original.PaymentTerms;
                    if (original.ImportedBuyer !== undefined)
                        this.ImportedBuyer = Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel._initializeFrom(original.ImportedBuyer, ignoreReadOnlyProperties, context);
                    if (original.Agreement !== undefined)
                        this.Agreement = Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_AgreementViewModel._initializeFrom(original.Agreement, ignoreReadOnlyProperties, context);
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Transaction_Transaction_CommercialAgreement_CommercialAgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Transaction_Transaction_CommercialAgreement_CommercialAgreementViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Transaction_Transaction_CommercialAgreement_CommercialAgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Transaction_Transaction_CommercialAgreement_CommercialAgreementViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Transaction_Transaction_CommercialAgreement_CommercialAgreementViewModel;
            }(BaseClass.ViewModel));
            TransactionForm.Transaction_Transaction_CommercialAgreement_CommercialAgreementViewModel = Transaction_Transaction_CommercialAgreement_CommercialAgreementViewModel;
            var Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel = (function (_super) {
                __extends(Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel, _super);
                function Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Code: true, Company: true, Id: true
                        };
                    }
                    else {
                        _this._members["Code"] = true;
                        _this._members["Company"] = true;
                        _this._members["Id"] = true;
                    }
                    return _this;
                }
                Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateTransaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel.prototype._hydrateTransaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Code !== undefined)
                        this.Code = original.Code;
                    if (original.Company !== undefined)
                        this.Company = original.Company;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel;
            }(BaseClass.ViewModel));
            TransactionForm.Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel = Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel;
            var Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_AgreementViewModel = (function (_super) {
                __extends(Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_AgreementViewModel, _super);
                function Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_AgreementViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            FundedRate: true, Id: true, InterestRate: true, Investor: true
                        };
                    }
                    else {
                        _this._members["FundedRate"] = true;
                        _this._members["Id"] = true;
                        _this._members["InterestRate"] = true;
                        _this._members["Investor"] = true;
                    }
                    return _this;
                }
                Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_AgreementViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.Investor != null)
                        instance.Investor = Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_Agreement_Investor_InvestorViewModel._lightCast(instance.Investor);
                    return instance;
                };
                Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_AgreementViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_AgreementViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateTransaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_AgreementViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_AgreementViewModel.prototype._hydrateTransaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_AgreementViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.FundedRate !== undefined)
                        this.FundedRate = original.FundedRate;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.InterestRate !== undefined)
                        this.InterestRate = original.InterestRate;
                    if (original.Investor !== undefined)
                        this.Investor = Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_Agreement_Investor_InvestorViewModel._initializeFrom(original.Investor, ignoreReadOnlyProperties, context);
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_AgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_AgreementViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_AgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_AgreementViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_AgreementViewModel;
            }(BaseClass.ViewModel));
            TransactionForm.Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_AgreementViewModel = Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_AgreementViewModel;
            var Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_Agreement_Investor_InvestorViewModel = (function (_super) {
                __extends(Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_Agreement_Investor_InvestorViewModel, _super);
                function Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_Agreement_Investor_InvestorViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Name: true, UserName: true
                        };
                    }
                    else {
                        _this._members["Name"] = true;
                        _this._members["UserName"] = true;
                    }
                    return _this;
                }
                Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_Agreement_Investor_InvestorViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_Agreement_Investor_InvestorViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_Agreement_Investor_InvestorViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateTransaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_Agreement_Investor_InvestorViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_Agreement_Investor_InvestorViewModel.prototype._hydrateTransaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_Agreement_Investor_InvestorViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.Name !== undefined)
                        this.Name = original.Name;
                    if (original.UserName !== undefined)
                        this.UserName = original.UserName;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_Agreement_Investor_InvestorViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_Agreement_Investor_InvestorViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_Agreement_Investor_InvestorViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_Agreement_Investor_InvestorViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_Agreement_Investor_InvestorViewModel;
            }(BaseClass.ViewModel));
            TransactionForm.Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_Agreement_Investor_InvestorViewModel = Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_Agreement_Investor_InvestorViewModel;
            var Transaction_Transaction_Orders_OrderViewModel = (function (_super) {
                __extends(Transaction_Transaction_Orders_OrderViewModel, _super);
                function Transaction_Transaction_Orders_OrderViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            DateOfOrder: true, DeliveryTo: true, From: true, Id: true, OrderNumber: true
                        };
                    }
                    else {
                        _this._members["DateOfOrder"] = true;
                        _this._members["DeliveryTo"] = true;
                        _this._members["From"] = true;
                        _this._members["Id"] = true;
                        _this._members["OrderNumber"] = true;
                    }
                    return _this;
                }
                Transaction_Transaction_Orders_OrderViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.DateOfOrder != null)
                        instance.DateOfOrder = new Date(instance.DateOfOrder);
                    return instance;
                };
                Transaction_Transaction_Orders_OrderViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Transaction_Transaction_Orders_OrderViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateTransaction_Transaction_Orders_OrderViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Transaction_Transaction_Orders_OrderViewModel.prototype._hydrateTransaction_Transaction_Orders_OrderViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.DateOfOrder))
                        this.DateOfOrder = new Date(original.DateOfOrder);
                    if (original.DeliveryTo !== undefined)
                        this.DeliveryTo = original.DeliveryTo;
                    if (original.From !== undefined)
                        this.From = original.From;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.OrderNumber !== undefined)
                        this.OrderNumber = original.OrderNumber;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Transaction_Transaction_Orders_OrderViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Transaction_Transaction_Orders_OrderViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Transaction_Transaction_Orders_OrderViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Transaction_Transaction_Orders_OrderViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Transaction_Transaction_Orders_OrderViewModel;
            }(BaseClass.ViewModel));
            TransactionForm.Transaction_Transaction_Orders_OrderViewModel = Transaction_Transaction_Orders_OrderViewModel;
            var Transaction_Transaction_CreditNotes_CreditNoteViewModel = (function (_super) {
                __extends(Transaction_Transaction_CreditNotes_CreditNoteViewModel, _super);
                function Transaction_Transaction_CreditNotes_CreditNoteViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Amount: true, CreditNoteNumber: true, DateIssued: true, Description: true, Id: true, TotalPrice: true
                        };
                    }
                    else {
                        _this._members["Amount"] = true;
                        _this._members["CreditNoteNumber"] = true;
                        _this._members["DateIssued"] = true;
                        _this._members["Description"] = true;
                        _this._members["Id"] = true;
                        _this._members["TotalPrice"] = true;
                    }
                    return _this;
                }
                Transaction_Transaction_CreditNotes_CreditNoteViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.DateIssued != null)
                        instance.DateIssued = new Date(instance.DateIssued);
                    return instance;
                };
                Transaction_Transaction_CreditNotes_CreditNoteViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Transaction_Transaction_CreditNotes_CreditNoteViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateTransaction_Transaction_CreditNotes_CreditNoteViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Transaction_Transaction_CreditNotes_CreditNoteViewModel.prototype._hydrateTransaction_Transaction_CreditNotes_CreditNoteViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Amount !== undefined)
                        this.Amount = original.Amount;
                    if (original.CreditNoteNumber !== undefined)
                        this.CreditNoteNumber = original.CreditNoteNumber;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.DateIssued))
                        this.DateIssued = new Date(original.DateIssued);
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.TotalPrice !== undefined)
                        this.TotalPrice = original.TotalPrice;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Transaction_Transaction_CreditNotes_CreditNoteViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Transaction_Transaction_CreditNotes_CreditNoteViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Transaction_Transaction_CreditNotes_CreditNoteViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Transaction_Transaction_CreditNotes_CreditNoteViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Transaction_Transaction_CreditNotes_CreditNoteViewModel;
            }(BaseClass.ViewModel));
            TransactionForm.Transaction_Transaction_CreditNotes_CreditNoteViewModel = Transaction_Transaction_CreditNotes_CreditNoteViewModel;
            var Transaction_Transaction_DeliveryNotes_DeliveryNoteViewModel = (function (_super) {
                __extends(Transaction_Transaction_DeliveryNotes_DeliveryNoteViewModel, _super);
                function Transaction_Transaction_DeliveryNotes_DeliveryNoteViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Amount: true, DateIssued: true, DeliveryNoteNumber: true, Id: true, TotalPrice: true
                        };
                    }
                    else {
                        _this._members["Amount"] = true;
                        _this._members["DateIssued"] = true;
                        _this._members["DeliveryNoteNumber"] = true;
                        _this._members["Id"] = true;
                        _this._members["TotalPrice"] = true;
                    }
                    return _this;
                }
                Transaction_Transaction_DeliveryNotes_DeliveryNoteViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.DateIssued != null)
                        instance.DateIssued = new Date(instance.DateIssued);
                    return instance;
                };
                Transaction_Transaction_DeliveryNotes_DeliveryNoteViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Transaction_Transaction_DeliveryNotes_DeliveryNoteViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateTransaction_Transaction_DeliveryNotes_DeliveryNoteViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Transaction_Transaction_DeliveryNotes_DeliveryNoteViewModel.prototype._hydrateTransaction_Transaction_DeliveryNotes_DeliveryNoteViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Amount !== undefined)
                        this.Amount = original.Amount;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.DateIssued))
                        this.DateIssued = new Date(original.DateIssued);
                    if (original.DeliveryNoteNumber !== undefined)
                        this.DeliveryNoteNumber = original.DeliveryNoteNumber;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.TotalPrice !== undefined)
                        this.TotalPrice = original.TotalPrice;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Transaction_Transaction_DeliveryNotes_DeliveryNoteViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Transaction_Transaction_DeliveryNotes_DeliveryNoteViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Transaction_Transaction_DeliveryNotes_DeliveryNoteViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Transaction_Transaction_DeliveryNotes_DeliveryNoteViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Transaction_Transaction_DeliveryNotes_DeliveryNoteViewModel;
            }(BaseClass.ViewModel));
            TransactionForm.Transaction_Transaction_DeliveryNotes_DeliveryNoteViewModel = Transaction_Transaction_DeliveryNotes_DeliveryNoteViewModel;
            var Transaction_Transaction_Invoices_InvoiceViewModel = (function (_super) {
                __extends(Transaction_Transaction_Invoices_InvoiceViewModel, _super);
                function Transaction_Transaction_Invoices_InvoiceViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Amount: true, DateIssued: true, Id: true, InvoiceNumber: true, TotalPrice: true
                        };
                    }
                    else {
                        _this._members["Amount"] = true;
                        _this._members["DateIssued"] = true;
                        _this._members["Id"] = true;
                        _this._members["InvoiceNumber"] = true;
                        _this._members["TotalPrice"] = true;
                    }
                    return _this;
                }
                Transaction_Transaction_Invoices_InvoiceViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.DateIssued != null)
                        instance.DateIssued = new Date(instance.DateIssued);
                    return instance;
                };
                Transaction_Transaction_Invoices_InvoiceViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Transaction_Transaction_Invoices_InvoiceViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateTransaction_Transaction_Invoices_InvoiceViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Transaction_Transaction_Invoices_InvoiceViewModel.prototype._hydrateTransaction_Transaction_Invoices_InvoiceViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Amount !== undefined)
                        this.Amount = original.Amount;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.DateIssued))
                        this.DateIssued = new Date(original.DateIssued);
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.InvoiceNumber !== undefined)
                        this.InvoiceNumber = original.InvoiceNumber;
                    if (original.TotalPrice !== undefined)
                        this.TotalPrice = original.TotalPrice;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Transaction_Transaction_Invoices_InvoiceViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Transaction_Transaction_Invoices_InvoiceViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Transaction_Transaction_Invoices_InvoiceViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Transaction_Transaction_Invoices_InvoiceViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Transaction_Transaction_Invoices_InvoiceViewModel;
            }(BaseClass.ViewModel));
            TransactionForm.Transaction_Transaction_Invoices_InvoiceViewModel = Transaction_Transaction_Invoices_InvoiceViewModel;
            var Transaction_Transaction_ProofOfDeliveries_ProofOfDeliveryViewModel = (function (_super) {
                __extends(Transaction_Transaction_ProofOfDeliveries_ProofOfDeliveryViewModel, _super);
                function Transaction_Transaction_ProofOfDeliveries_ProofOfDeliveryViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            DateIssued: true, DeliveryStatus: true, Id: true, PODNumber: true, QualityStatus: true, QuantityStatus: true
                        };
                    }
                    else {
                        _this._members["DateIssued"] = true;
                        _this._members["DeliveryStatus"] = true;
                        _this._members["Id"] = true;
                        _this._members["PODNumber"] = true;
                        _this._members["QualityStatus"] = true;
                        _this._members["QuantityStatus"] = true;
                    }
                    return _this;
                }
                Transaction_Transaction_ProofOfDeliveries_ProofOfDeliveryViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.DateIssued != null)
                        instance.DateIssued = new Date(instance.DateIssued);
                    return instance;
                };
                Transaction_Transaction_ProofOfDeliveries_ProofOfDeliveryViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Transaction_Transaction_ProofOfDeliveries_ProofOfDeliveryViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateTransaction_Transaction_ProofOfDeliveries_ProofOfDeliveryViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Transaction_Transaction_ProofOfDeliveries_ProofOfDeliveryViewModel.prototype._hydrateTransaction_Transaction_ProofOfDeliveries_ProofOfDeliveryViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.DateIssued))
                        this.DateIssued = new Date(original.DateIssued);
                    if (original.DeliveryStatus !== undefined)
                        this.DeliveryStatus = original.DeliveryStatus;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.PODNumber !== undefined)
                        this.PODNumber = original.PODNumber;
                    if (original.QualityStatus !== undefined)
                        this.QualityStatus = original.QualityStatus;
                    if (original.QuantityStatus !== undefined)
                        this.QuantityStatus = original.QuantityStatus;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Transaction_Transaction_ProofOfDeliveries_ProofOfDeliveryViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Transaction_Transaction_ProofOfDeliveries_ProofOfDeliveryViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Transaction_Transaction_ProofOfDeliveries_ProofOfDeliveryViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Transaction_Transaction_ProofOfDeliveries_ProofOfDeliveryViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Transaction_Transaction_ProofOfDeliveries_ProofOfDeliveryViewModel;
            }(BaseClass.ViewModel));
            TransactionForm.Transaction_Transaction_ProofOfDeliveries_ProofOfDeliveryViewModel = Transaction_Transaction_ProofOfDeliveries_ProofOfDeliveryViewModel;
            var Transaction_Transaction_TransactionStatus_TransactionStatusViewModel = (function (_super) {
                __extends(Transaction_Transaction_TransactionStatus_TransactionStatusViewModel, _super);
                function Transaction_Transaction_TransactionStatus_TransactionStatusViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Cancelled: true, Delivered: true, Id: true, InitialOrderDate: true, InTransit: true, Invoiced: true, InvoicedDateOccured: true, Ordered: true, Picked: true, Shipped: true, ShippedDateOccured: true
                        };
                    }
                    else {
                        _this._members["Cancelled"] = true;
                        _this._members["Delivered"] = true;
                        _this._members["Id"] = true;
                        _this._members["InitialOrderDate"] = true;
                        _this._members["InTransit"] = true;
                        _this._members["Invoiced"] = true;
                        _this._members["InvoicedDateOccured"] = true;
                        _this._members["Ordered"] = true;
                        _this._members["Picked"] = true;
                        _this._members["Shipped"] = true;
                        _this._members["ShippedDateOccured"] = true;
                    }
                    return _this;
                }
                Transaction_Transaction_TransactionStatus_TransactionStatusViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.InitialOrderDate != null)
                        instance.InitialOrderDate = new Date(instance.InitialOrderDate);
                    if (instance.InvoicedDateOccured != null)
                        instance.InvoicedDateOccured = new Date(instance.InvoicedDateOccured);
                    if (instance.ShippedDateOccured != null)
                        instance.ShippedDateOccured = new Date(instance.ShippedDateOccured);
                    return instance;
                };
                Transaction_Transaction_TransactionStatus_TransactionStatusViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Transaction_Transaction_TransactionStatus_TransactionStatusViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateTransaction_Transaction_TransactionStatus_TransactionStatusViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Transaction_Transaction_TransactionStatus_TransactionStatusViewModel.prototype._hydrateTransaction_Transaction_TransactionStatus_TransactionStatusViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Cancelled !== undefined)
                        this.Cancelled = original.Cancelled;
                    if (original.Delivered !== undefined)
                        this.Delivered = original.Delivered;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.InitialOrderDate))
                        this.InitialOrderDate = new Date(original.InitialOrderDate);
                    if (original.InTransit !== undefined)
                        this.InTransit = original.InTransit;
                    if (original.Invoiced !== undefined)
                        this.Invoiced = original.Invoiced;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.InvoicedDateOccured))
                        this.InvoicedDateOccured = new Date(original.InvoicedDateOccured);
                    if (original.Ordered !== undefined)
                        this.Ordered = original.Ordered;
                    if (original.Picked !== undefined)
                        this.Picked = original.Picked;
                    if (original.Shipped !== undefined)
                        this.Shipped = original.Shipped;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.ShippedDateOccured))
                        this.ShippedDateOccured = new Date(original.ShippedDateOccured);
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Transaction_Transaction_TransactionStatus_TransactionStatusViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Transaction_Transaction_TransactionStatus_TransactionStatusViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Transaction_Transaction_TransactionStatus_TransactionStatusViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Transaction_Transaction_TransactionStatus_TransactionStatusViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Transaction_Transaction_TransactionStatus_TransactionStatusViewModel;
            }(BaseClass.ViewModel));
            TransactionForm.Transaction_Transaction_TransactionStatus_TransactionStatusViewModel = Transaction_Transaction_TransactionStatus_TransactionStatusViewModel;
            var Transaction_Transaction_ImportedBuyer_ImportedBuyerViewModel = (function (_super) {
                __extends(Transaction_Transaction_ImportedBuyer_ImportedBuyerViewModel, _super);
                function Transaction_Transaction_ImportedBuyer_ImportedBuyerViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                    }
                    return _this;
                }
                Transaction_Transaction_ImportedBuyer_ImportedBuyerViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Transaction_Transaction_ImportedBuyer_ImportedBuyerViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Transaction_Transaction_ImportedBuyer_ImportedBuyerViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateTransaction_Transaction_ImportedBuyer_ImportedBuyerViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Transaction_Transaction_ImportedBuyer_ImportedBuyerViewModel.prototype._hydrateTransaction_Transaction_ImportedBuyer_ImportedBuyerViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Transaction_Transaction_ImportedBuyer_ImportedBuyerViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Transaction_Transaction_ImportedBuyer_ImportedBuyerViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Transaction_Transaction_ImportedBuyer_ImportedBuyerViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Transaction_Transaction_ImportedBuyer_ImportedBuyerViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Transaction_Transaction_ImportedBuyer_ImportedBuyerViewModel;
            }(BaseClass.ViewModel));
            TransactionForm.Transaction_Transaction_ImportedBuyer_ImportedBuyerViewModel = Transaction_Transaction_ImportedBuyer_ImportedBuyerViewModel;
            var Transaction_Transaction_Supplier_SupplierViewModel = (function (_super) {
                __extends(Transaction_Transaction_Supplier_SupplierViewModel, _super);
                function Transaction_Transaction_Supplier_SupplierViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            UserName: true
                        };
                    }
                    else {
                        _this._members["UserName"] = true;
                    }
                    return _this;
                }
                Transaction_Transaction_Supplier_SupplierViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Transaction_Transaction_Supplier_SupplierViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Transaction_Transaction_Supplier_SupplierViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateTransaction_Transaction_Supplier_SupplierViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Transaction_Transaction_Supplier_SupplierViewModel.prototype._hydrateTransaction_Transaction_Supplier_SupplierViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.UserName !== undefined)
                        this.UserName = original.UserName;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Transaction_Transaction_Supplier_SupplierViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Transaction_Transaction_Supplier_SupplierViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Transaction_Transaction_Supplier_SupplierViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Transaction_Transaction_Supplier_SupplierViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Transaction_Transaction_Supplier_SupplierViewModel;
            }(BaseClass.ViewModel));
            TransactionForm.Transaction_Transaction_Supplier_SupplierViewModel = Transaction_Transaction_Supplier_SupplierViewModel;
            var Transaction_Transaction_LetterOfCredits_LetterOfCreditViewModel = (function (_super) {
                __extends(Transaction_Transaction_LetterOfCredits_LetterOfCreditViewModel, _super);
                function Transaction_Transaction_LetterOfCredits_LetterOfCreditViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            DateOfExpiry: true, DateOfValidity: true, Detail: true, Id: true, IssuingBank: true, ValueOfLoC: true
                        };
                    }
                    else {
                        _this._members["DateOfExpiry"] = true;
                        _this._members["DateOfValidity"] = true;
                        _this._members["Detail"] = true;
                        _this._members["Id"] = true;
                        _this._members["IssuingBank"] = true;
                        _this._members["ValueOfLoC"] = true;
                    }
                    return _this;
                }
                Transaction_Transaction_LetterOfCredits_LetterOfCreditViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.DateOfExpiry != null)
                        instance.DateOfExpiry = new Date(instance.DateOfExpiry);
                    if (instance.DateOfValidity != null)
                        instance.DateOfValidity = new Date(instance.DateOfValidity);
                    return instance;
                };
                Transaction_Transaction_LetterOfCredits_LetterOfCreditViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Transaction_Transaction_LetterOfCredits_LetterOfCreditViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateTransaction_Transaction_LetterOfCredits_LetterOfCreditViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Transaction_Transaction_LetterOfCredits_LetterOfCreditViewModel.prototype._hydrateTransaction_Transaction_LetterOfCredits_LetterOfCreditViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.DateOfExpiry))
                        this.DateOfExpiry = new Date(original.DateOfExpiry);
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.DateOfValidity))
                        this.DateOfValidity = new Date(original.DateOfValidity);
                    if (original.Detail !== undefined)
                        this.Detail = original.Detail;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.IssuingBank !== undefined)
                        this.IssuingBank = original.IssuingBank;
                    if (original.ValueOfLoC !== undefined)
                        this.ValueOfLoC = original.ValueOfLoC;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Transaction_Transaction_LetterOfCredits_LetterOfCreditViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Transaction_Transaction_LetterOfCredits_LetterOfCreditViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Transaction_Transaction_LetterOfCredits_LetterOfCreditViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Transaction_Transaction_LetterOfCredits_LetterOfCreditViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Transaction_Transaction_LetterOfCredits_LetterOfCreditViewModel;
            }(BaseClass.ViewModel));
            TransactionForm.Transaction_Transaction_LetterOfCredits_LetterOfCreditViewModel = Transaction_Transaction_LetterOfCredits_LetterOfCreditViewModel;
            var Transaction_Transaction_BillOfLandings_BillOfLandingViewModel = (function (_super) {
                __extends(Transaction_Transaction_BillOfLandings_BillOfLandingViewModel, _super);
                function Transaction_Transaction_BillOfLandings_BillOfLandingViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            DeliveryDate: true, DeliveryPlace: true, Id: true, LandingDate: true, LandingPlace: true
                        };
                    }
                    else {
                        _this._members["DeliveryDate"] = true;
                        _this._members["DeliveryPlace"] = true;
                        _this._members["Id"] = true;
                        _this._members["LandingDate"] = true;
                        _this._members["LandingPlace"] = true;
                    }
                    return _this;
                }
                Transaction_Transaction_BillOfLandings_BillOfLandingViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.DeliveryDate != null)
                        instance.DeliveryDate = new Date(instance.DeliveryDate);
                    if (instance.LandingDate != null)
                        instance.LandingDate = new Date(instance.LandingDate);
                    return instance;
                };
                Transaction_Transaction_BillOfLandings_BillOfLandingViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Transaction_Transaction_BillOfLandings_BillOfLandingViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateTransaction_Transaction_BillOfLandings_BillOfLandingViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Transaction_Transaction_BillOfLandings_BillOfLandingViewModel.prototype._hydrateTransaction_Transaction_BillOfLandings_BillOfLandingViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.DeliveryDate))
                        this.DeliveryDate = new Date(original.DeliveryDate);
                    if (original.DeliveryPlace !== undefined)
                        this.DeliveryPlace = original.DeliveryPlace;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.LandingDate))
                        this.LandingDate = new Date(original.LandingDate);
                    if (original.LandingPlace !== undefined)
                        this.LandingPlace = original.LandingPlace;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Transaction_Transaction_BillOfLandings_BillOfLandingViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Transaction_Transaction_BillOfLandings_BillOfLandingViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Transaction_Transaction_BillOfLandings_BillOfLandingViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Transaction_Transaction_BillOfLandings_BillOfLandingViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Transaction_Transaction_BillOfLandings_BillOfLandingViewModel;
            }(BaseClass.ViewModel));
            TransactionForm.Transaction_Transaction_BillOfLandings_BillOfLandingViewModel = Transaction_Transaction_BillOfLandings_BillOfLandingViewModel;
            var Transaction_Transaction_CustomsClearingDocumentations_CustomsClearingDocumentationViewModel = (function (_super) {
                __extends(Transaction_Transaction_CustomsClearingDocumentations_CustomsClearingDocumentationViewModel, _super);
                function Transaction_Transaction_CustomsClearingDocumentations_CustomsClearingDocumentationViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            BuyerName: true, CustomsClearingDate: true, ExportingCountry: true, Id: true, ImportingCountry: true
                        };
                    }
                    else {
                        _this._members["BuyerName"] = true;
                        _this._members["CustomsClearingDate"] = true;
                        _this._members["ExportingCountry"] = true;
                        _this._members["Id"] = true;
                        _this._members["ImportingCountry"] = true;
                    }
                    return _this;
                }
                Transaction_Transaction_CustomsClearingDocumentations_CustomsClearingDocumentationViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.CustomsClearingDate != null)
                        instance.CustomsClearingDate = new Date(instance.CustomsClearingDate);
                    return instance;
                };
                Transaction_Transaction_CustomsClearingDocumentations_CustomsClearingDocumentationViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Transaction_Transaction_CustomsClearingDocumentations_CustomsClearingDocumentationViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateTransaction_Transaction_CustomsClearingDocumentations_CustomsClearingDocumentationViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Transaction_Transaction_CustomsClearingDocumentations_CustomsClearingDocumentationViewModel.prototype._hydrateTransaction_Transaction_CustomsClearingDocumentations_CustomsClearingDocumentationViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.BuyerName !== undefined)
                        this.BuyerName = original.BuyerName;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.CustomsClearingDate))
                        this.CustomsClearingDate = new Date(original.CustomsClearingDate);
                    if (original.ExportingCountry !== undefined)
                        this.ExportingCountry = original.ExportingCountry;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.ImportingCountry !== undefined)
                        this.ImportingCountry = original.ImportingCountry;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Transaction_Transaction_CustomsClearingDocumentations_CustomsClearingDocumentationViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Transaction_Transaction_CustomsClearingDocumentations_CustomsClearingDocumentationViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Transaction_Transaction_CustomsClearingDocumentations_CustomsClearingDocumentationViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Transaction_Transaction_CustomsClearingDocumentations_CustomsClearingDocumentationViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Transaction_Transaction_CustomsClearingDocumentations_CustomsClearingDocumentationViewModel;
            }(BaseClass.ViewModel));
            TransactionForm.Transaction_Transaction_CustomsClearingDocumentations_CustomsClearingDocumentationViewModel = Transaction_Transaction_CustomsClearingDocumentations_CustomsClearingDocumentationViewModel;
            var Transaction_Transaction_PartialProofOfDeliveries_PartialProofOfDeliveryViewModel = (function (_super) {
                __extends(Transaction_Transaction_PartialProofOfDeliveries_PartialProofOfDeliveryViewModel, _super);
                function Transaction_Transaction_PartialProofOfDeliveries_PartialProofOfDeliveryViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            DateIssued: true, DeliveryStatus: true, Id: true, PODNumber: true, QualityStatus: true, QuantityStatus: true
                        };
                    }
                    else {
                        _this._members["DateIssued"] = true;
                        _this._members["DeliveryStatus"] = true;
                        _this._members["Id"] = true;
                        _this._members["PODNumber"] = true;
                        _this._members["QualityStatus"] = true;
                        _this._members["QuantityStatus"] = true;
                    }
                    return _this;
                }
                Transaction_Transaction_PartialProofOfDeliveries_PartialProofOfDeliveryViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.DateIssued != null)
                        instance.DateIssued = new Date(instance.DateIssued);
                    return instance;
                };
                Transaction_Transaction_PartialProofOfDeliveries_PartialProofOfDeliveryViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Transaction_Transaction_PartialProofOfDeliveries_PartialProofOfDeliveryViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateTransaction_Transaction_PartialProofOfDeliveries_PartialProofOfDeliveryViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Transaction_Transaction_PartialProofOfDeliveries_PartialProofOfDeliveryViewModel.prototype._hydrateTransaction_Transaction_PartialProofOfDeliveries_PartialProofOfDeliveryViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.DateIssued))
                        this.DateIssued = new Date(original.DateIssued);
                    if (original.DeliveryStatus !== undefined)
                        this.DeliveryStatus = original.DeliveryStatus;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.PODNumber !== undefined)
                        this.PODNumber = original.PODNumber;
                    if (original.QualityStatus !== undefined)
                        this.QualityStatus = original.QualityStatus;
                    if (original.QuantityStatus !== undefined)
                        this.QuantityStatus = original.QuantityStatus;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Transaction_Transaction_PartialProofOfDeliveries_PartialProofOfDeliveryViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Transaction_Transaction_PartialProofOfDeliveries_PartialProofOfDeliveryViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Transaction_Transaction_PartialProofOfDeliveries_PartialProofOfDeliveryViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Transaction_Transaction_PartialProofOfDeliveries_PartialProofOfDeliveryViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Transaction_Transaction_PartialProofOfDeliveries_PartialProofOfDeliveryViewModel;
            }(BaseClass.ViewModel));
            TransactionForm.Transaction_Transaction_PartialProofOfDeliveries_PartialProofOfDeliveryViewModel = Transaction_Transaction_PartialProofOfDeliveries_PartialProofOfDeliveryViewModel;
            var Transaction_Transaction_TransactionOverview_TransactionOverviewViewModel = (function (_super) {
                __extends(Transaction_Transaction_TransactionOverview_TransactionOverviewViewModel, _super);
                function Transaction_Transaction_TransactionOverview_TransactionOverviewViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            CreditNoteNumber: true, DeliveryDate: true, FundedRate: true, Id: true, InterestRate: true, InvoiceDate: true, InvoiceId: true, OrderDate: true, OrderQuantity: true, PayementDate: true, PaymentId: true
                        };
                    }
                    else {
                        _this._members["CreditNoteNumber"] = true;
                        _this._members["DeliveryDate"] = true;
                        _this._members["FundedRate"] = true;
                        _this._members["Id"] = true;
                        _this._members["InterestRate"] = true;
                        _this._members["InvoiceDate"] = true;
                        _this._members["InvoiceId"] = true;
                        _this._members["OrderDate"] = true;
                        _this._members["OrderQuantity"] = true;
                        _this._members["PayementDate"] = true;
                        _this._members["PaymentId"] = true;
                    }
                    return _this;
                }
                Transaction_Transaction_TransactionOverview_TransactionOverviewViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.DeliveryDate != null)
                        instance.DeliveryDate = new Date(instance.DeliveryDate);
                    if (instance.InvoiceDate != null)
                        instance.InvoiceDate = new Date(instance.InvoiceDate);
                    if (instance.OrderDate != null)
                        instance.OrderDate = new Date(instance.OrderDate);
                    if (instance.PayementDate != null)
                        instance.PayementDate = new Date(instance.PayementDate);
                    return instance;
                };
                Transaction_Transaction_TransactionOverview_TransactionOverviewViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Transaction_Transaction_TransactionOverview_TransactionOverviewViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateTransaction_Transaction_TransactionOverview_TransactionOverviewViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Transaction_Transaction_TransactionOverview_TransactionOverviewViewModel.prototype._hydrateTransaction_Transaction_TransactionOverview_TransactionOverviewViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.CreditNoteNumber !== undefined)
                        this.CreditNoteNumber = original.CreditNoteNumber;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.DeliveryDate))
                        this.DeliveryDate = new Date(original.DeliveryDate);
                    if (original.FundedRate !== undefined)
                        this.FundedRate = original.FundedRate;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.InterestRate !== undefined)
                        this.InterestRate = original.InterestRate;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.InvoiceDate))
                        this.InvoiceDate = new Date(original.InvoiceDate);
                    if (original.InvoiceId !== undefined)
                        this.InvoiceId = original.InvoiceId;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.OrderDate))
                        this.OrderDate = new Date(original.OrderDate);
                    if (original.OrderQuantity !== undefined)
                        this.OrderQuantity = original.OrderQuantity;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.PayementDate))
                        this.PayementDate = new Date(original.PayementDate);
                    if (original.PaymentId !== undefined)
                        this.PaymentId = original.PaymentId;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Transaction_Transaction_TransactionOverview_TransactionOverviewViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Transaction_Transaction_TransactionOverview_TransactionOverviewViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Transaction_Transaction_TransactionOverview_TransactionOverviewViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Transaction_Transaction_TransactionOverview_TransactionOverviewViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Transaction_Transaction_TransactionOverview_TransactionOverviewViewModel;
            }(BaseClass.ViewModel));
            TransactionForm.Transaction_Transaction_TransactionOverview_TransactionOverviewViewModel = Transaction_Transaction_TransactionOverview_TransactionOverviewViewModel;
        })(TransactionForm = ViewModels.TransactionForm || (ViewModels.TransactionForm = {}));
    })(ViewModels = DSS5_SupplyChainFinancialsOptimisation.ViewModels || (DSS5_SupplyChainFinancialsOptimisation.ViewModels = {}));
})(DSS5_SupplyChainFinancialsOptimisation || (DSS5_SupplyChainFinancialsOptimisation = {}));
