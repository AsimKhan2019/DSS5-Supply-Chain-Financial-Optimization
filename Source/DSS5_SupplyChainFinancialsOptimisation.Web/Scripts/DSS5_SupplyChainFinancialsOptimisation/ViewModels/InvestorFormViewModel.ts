// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).
namespace DSS5_SupplyChainFinancialsOptimisation.ViewModels.InvestorForm {
export class InvestorFormViewModel extends DSS5_SupplyChainFinancialsOptimisation.ViewModels.MasterPage.MasterPageViewModel {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Investor:
true,DomainFocus:
                true
            }
        } else {
            this._members["Investor"] = true;
            this._members["DomainFocus"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.Investor != null)
            instance.Investor = Investor_InvestorViewModel._lightCast(instance.Investor);
        return instance;
    }

    public static _initializeFrom(original: InvestorFormViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): InvestorFormViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        InvestorFormViewModel = new InvestorFormViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateInvestorFormViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateInvestorFormViewModel(original: InvestorFormViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;

        this._hydrateMasterPageViewModel(original, ignoreReadOnlyProperties, context);

        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;


        if(original.Investor !== undefined) this.Investor = Investor_InvestorViewModel._initializeFrom(original.Investor, ignoreReadOnlyProperties, context);
        if(original.DomainFocus !== undefined) this.DomainFocus = original.DomainFocus;
        this.txtDomainFocusSelectedItemKeys = original.txtDomainFocusSelectedItemKeys;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = InvestorFormViewModel._initializeFrom(this, ignoreReadOnlyProperties);
            InvestorFormViewModel._deleteDropDownInitialValues(reduced);
            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): InvestorFormViewModel {
        var reduced = InvestorFormViewModel._initializeFrom(this, ignoreReadOnlyProperties);
        InvestorFormViewModel._deleteDropDownInitialValues(reduced);
        return reduced;
    }

    public static _deleteDropDownInitialValues(reduced: InvestorFormViewModel) {
        if (reduced == null) return;


        DSS5_SupplyChainFinancialsOptimisation.ViewModels.MasterPage.MasterPageViewModel._deleteDropDownInitialValues(reduced);
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Investor:
    any;
public DomainFocus:
    any;
public txtDomainFocusSelectedItemKeys:
    any[];
}

export class Investor_InvestorViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
AddressOne:
true,AddressTwo:
true,CommercialRegNo:
true,Company:
true,ContactPerson:
true,CRR:
true,CustomerSizeFrom:
true,CustomerSizeTo:
true,DomainFocus:
true,Email:
true,IAFC:
true,InvestorStatus:
true,LocalJurisdiction:
true,ManagingDirector:
true,OtherDomainFocus:
true,OtherMemberships:
true,OtherMinRequirements:
true,PrimaryPhone:
true,RegistrationNo:
true,TargetMarket:
true,UploadCompliance:
true,UserName:
true,VatNumber:
true,Agreements:
true,AnnualTransactionVolumes:
                true
            }
        } else {
            this._members["AddressOne"] = true;
            this._members["AddressTwo"] = true;
            this._members["CommercialRegNo"] = true;
            this._members["Company"] = true;
            this._members["ContactPerson"] = true;
            this._members["CRR"] = true;
            this._members["CustomerSizeFrom"] = true;
            this._members["CustomerSizeTo"] = true;
            this._members["DomainFocus"] = true;
            this._members["Email"] = true;
            this._members["IAFC"] = true;
            this._members["InvestorStatus"] = true;
            this._members["LocalJurisdiction"] = true;
            this._members["ManagingDirector"] = true;
            this._members["OtherDomainFocus"] = true;
            this._members["OtherMemberships"] = true;
            this._members["OtherMinRequirements"] = true;
            this._members["PrimaryPhone"] = true;
            this._members["RegistrationNo"] = true;
            this._members["TargetMarket"] = true;
            this._members["UploadCompliance"] = true;
            this._members["UserName"] = true;
            this._members["VatNumber"] = true;
            this._members["Agreements"] = true;
            this._members["AnnualTransactionVolumes"] = true;
        }

        this.Agreements = new Array<any>();
        this.AnnualTransactionVolumes = new Array<any>();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;


        if(instance.Agreements != null) {
            for(let i = 0; i < instance.Agreements.length; i++) {
                instance.Agreements[i] = Investor_Investor_Agreements_AgreementViewModel._lightCast(instance.Agreements[i]);

            }
        }

        if(instance.AnnualTransactionVolumes != null) {
            for(let i = 0; i < instance.AnnualTransactionVolumes.length; i++) {
                instance.AnnualTransactionVolumes[i] = Investor_Investor_AnnualTransactionVolumes_AnnualTransactionVolumeViewModel._lightCast(instance.AnnualTransactionVolumes[i]);

            }
        }
        return instance;
    }

    public static _initializeFrom(original: Investor_InvestorViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Investor_InvestorViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Investor_InvestorViewModel = new Investor_InvestorViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateInvestor_InvestorViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateInvestor_InvestorViewModel(original: Investor_InvestorViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if(original.AddressOne !== undefined) this.AddressOne = original.AddressOne;
        if(original.AddressTwo !== undefined) this.AddressTwo = original.AddressTwo;
        if(original.CommercialRegNo !== undefined) this.CommercialRegNo = original.CommercialRegNo;
        if(original.Company !== undefined) this.Company = original.Company;
        if(original.ContactPerson !== undefined) this.ContactPerson = original.ContactPerson;
        if(original.CRR !== undefined) this.CRR = original.CRR;
        if(original.CustomerSizeFrom !== undefined) this.CustomerSizeFrom = original.CustomerSizeFrom;
        if(original.CustomerSizeTo !== undefined) this.CustomerSizeTo = original.CustomerSizeTo;
        if(original.DomainFocus !== undefined) this.DomainFocus = original.DomainFocus;
        if(original.Email !== undefined) this.Email = original.Email;
        if(original.IAFC !== undefined) this.IAFC = original.IAFC;
        if(original.InvestorStatus !== undefined) this.InvestorStatus = original.InvestorStatus;
        if(original.LocalJurisdiction !== undefined) this.LocalJurisdiction = original.LocalJurisdiction;
        if(original.ManagingDirector !== undefined) this.ManagingDirector = original.ManagingDirector;
        if(original.OtherDomainFocus !== undefined) this.OtherDomainFocus = original.OtherDomainFocus;
        if(original.OtherMemberships !== undefined) this.OtherMemberships = original.OtherMemberships;
        if(original.OtherMinRequirements !== undefined) this.OtherMinRequirements = original.OtherMinRequirements;
        if(original.PrimaryPhone !== undefined) this.PrimaryPhone = original.PrimaryPhone;
        if(original.RegistrationNo !== undefined) this.RegistrationNo = original.RegistrationNo;
        if(original.TargetMarket !== undefined) this.TargetMarket = original.TargetMarket;
        if(original.UploadCompliance !== undefined) this.UploadCompliance = original.UploadCompliance;
        if(original.UserName !== undefined) this.UserName = original.UserName;
        if(original.VatNumber !== undefined) this.VatNumber = original.VatNumber;

        if(original.Agreements != null) {
            for(let i = 0; i < original.Agreements.length; i++) {
                this.Agreements.push(Investor_Investor_Agreements_AgreementViewModel._initializeFrom(original.Agreements[i], ignoreReadOnlyProperties, context));
            }
        }

        if(original.AnnualTransactionVolumes != null) {
            for(let i = 0; i < original.AnnualTransactionVolumes.length; i++) {
                this.AnnualTransactionVolumes.push(Investor_Investor_AnnualTransactionVolumes_AnnualTransactionVolumeViewModel._initializeFrom(original.AnnualTransactionVolumes[i], ignoreReadOnlyProperties, context));
            }
        }

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Investor_InvestorViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Investor_InvestorViewModel {
        var reduced = Investor_InvestorViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public AddressOne:
    any;
public AddressTwo:
    any;
public CommercialRegNo:
    any;
public Company:
    any;
public ContactPerson:
    any;
public CRR:
    any;
public CustomerSizeFrom:
    any;
public CustomerSizeTo:
    any;
public DomainFocus:
    any;
public Email:
    any;
public IAFC:
    any;
public InvestorStatus:
    any;
public LocalJurisdiction:
    any;
public ManagingDirector:
    any;
public OtherDomainFocus:
    any;
public OtherMemberships:
    any;
public OtherMinRequirements:
    any;
public PrimaryPhone:
    any;
public RegistrationNo:
    any;
public TargetMarket:
    any;
public UploadCompliance:
    any;
public UserName:
    any;
public VatNumber:
    any;
public Agreements:
    Array<any>;
public AnnualTransactionVolumes:
    Array<any>;
}

export class Investor_Investor_Agreements_AgreementViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Id:
true,Supplier:
                true
            }
        } else {
            this._members["Id"] = true;
            this._members["Supplier"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.Supplier != null)
            instance.Supplier = Investor_Investor_Agreements_Agreement_Supplier_SupplierViewModel._lightCast(instance.Supplier);
        return instance;
    }

    public static _initializeFrom(original: Investor_Investor_Agreements_AgreementViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Investor_Investor_Agreements_AgreementViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Investor_Investor_Agreements_AgreementViewModel = new Investor_Investor_Agreements_AgreementViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateInvestor_Investor_Agreements_AgreementViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateInvestor_Investor_Agreements_AgreementViewModel(original: Investor_Investor_Agreements_AgreementViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;

        if(original.Supplier !== undefined) this.Supplier = Investor_Investor_Agreements_Agreement_Supplier_SupplierViewModel._initializeFrom(original.Supplier, ignoreReadOnlyProperties, context);

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Investor_Investor_Agreements_AgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Investor_Investor_Agreements_AgreementViewModel {
        var reduced = Investor_Investor_Agreements_AgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Id:
    any;
public Supplier:
    any;
    public _versionTimestamp?: string;
}

export class Investor_Investor_Agreements_Agreement_Supplier_SupplierViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
UserName:
                true
            }
        } else {
            this._members["UserName"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Investor_Investor_Agreements_Agreement_Supplier_SupplierViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Investor_Investor_Agreements_Agreement_Supplier_SupplierViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Investor_Investor_Agreements_Agreement_Supplier_SupplierViewModel = new Investor_Investor_Agreements_Agreement_Supplier_SupplierViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateInvestor_Investor_Agreements_Agreement_Supplier_SupplierViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateInvestor_Investor_Agreements_Agreement_Supplier_SupplierViewModel(original: Investor_Investor_Agreements_Agreement_Supplier_SupplierViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if(original.UserName !== undefined) this.UserName = original.UserName;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Investor_Investor_Agreements_Agreement_Supplier_SupplierViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Investor_Investor_Agreements_Agreement_Supplier_SupplierViewModel {
        var reduced = Investor_Investor_Agreements_Agreement_Supplier_SupplierViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public UserName:
    any;
}

export class Investor_Investor_AnnualTransactionVolumes_AnnualTransactionVolumeViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Id:
true,Volume:
true,Year:
                true
            }
        } else {
            this._members["Id"] = true;
            this._members["Volume"] = true;
            this._members["Year"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Investor_Investor_AnnualTransactionVolumes_AnnualTransactionVolumeViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Investor_Investor_AnnualTransactionVolumes_AnnualTransactionVolumeViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Investor_Investor_AnnualTransactionVolumes_AnnualTransactionVolumeViewModel = new Investor_Investor_AnnualTransactionVolumes_AnnualTransactionVolumeViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateInvestor_Investor_AnnualTransactionVolumes_AnnualTransactionVolumeViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateInvestor_Investor_AnnualTransactionVolumes_AnnualTransactionVolumeViewModel(original: Investor_Investor_AnnualTransactionVolumes_AnnualTransactionVolumeViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Volume !== undefined) this.Volume = original.Volume;
        if(original.Year !== undefined) this.Year = original.Year;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Investor_Investor_AnnualTransactionVolumes_AnnualTransactionVolumeViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Investor_Investor_AnnualTransactionVolumes_AnnualTransactionVolumeViewModel {
        var reduced = Investor_Investor_AnnualTransactionVolumes_AnnualTransactionVolumeViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Id:
    any;
public Volume:
    any;
public Year:
    any;
    public _versionTimestamp?: string;
}

}
