// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).
namespace DSS5_SupplyChainFinancialsOptimisation.ViewModels.DashboardNew {
export class DashboardNewViewModel extends DSS5_SupplyChainFinancialsOptimisation.ViewModels.MasterPage.MasterPageViewModel {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
TotalOnTime:
true,TotalAsOrdered:
true,TotalInFull:
true,TotalImpeachments:
true,Top5Sellers:
                true
            }
        } else {
            this._members["TotalOnTime"] = true;
            this._members["TotalAsOrdered"] = true;
            this._members["TotalInFull"] = true;
            this._members["TotalImpeachments"] = true;
            this._members["Top5Sellers"] = true;
        }

        this.Top5Sellers = new Array<any>();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;


        if(instance.Top5Sellers != null) {
            for(let i = 0; i < instance.Top5Sellers.length; i++) {
                instance.Top5Sellers[i] = Top5Sellers_SupplierStatisticViewModel._lightCast(instance.Top5Sellers[i]);

            }
        }
        return instance;
    }

    public static _initializeFrom(original: DashboardNewViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): DashboardNewViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        DashboardNewViewModel = new DashboardNewViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateDashboardNewViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateDashboardNewViewModel(original: DashboardNewViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;

        this._hydrateMasterPageViewModel(original, ignoreReadOnlyProperties, context);

        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if(original.TotalOnTime !== undefined) this.TotalOnTime = original.TotalOnTime;
        if(original.TotalAsOrdered !== undefined) this.TotalAsOrdered = original.TotalAsOrdered;
        if(original.TotalInFull !== undefined) this.TotalInFull = original.TotalInFull;
        if(original.TotalImpeachments !== undefined) this.TotalImpeachments = original.TotalImpeachments;

        if(original.Top5Sellers != null) {
            for(let i = 0; i < original.Top5Sellers.length; i++) {
                this.Top5Sellers.push(Top5Sellers_SupplierStatisticViewModel._initializeFrom(original.Top5Sellers[i], ignoreReadOnlyProperties, context));
            }
        }
        this.Chart1SelectedItemKeys = original.Chart1SelectedItemKeys;
        this.Chart11SelectedItemKeys = original.Chart11SelectedItemKeys;
        this.Chart1112SelectedItemKeys = original.Chart1112SelectedItemKeys;
        this.Chart1111SelectedItemKeys = original.Chart1111SelectedItemKeys;
        this.Chart2SelectedItemKeys = original.Chart2SelectedItemKeys;
        this.Chart3SelectedItemKeys = original.Chart3SelectedItemKeys;
        this.ChartSelectedItemKeys = original.ChartSelectedItemKeys;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = DashboardNewViewModel._initializeFrom(this, ignoreReadOnlyProperties);
            DashboardNewViewModel._deleteDropDownInitialValues(reduced);
            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): DashboardNewViewModel {
        var reduced = DashboardNewViewModel._initializeFrom(this, ignoreReadOnlyProperties);
        DashboardNewViewModel._deleteDropDownInitialValues(reduced);
        return reduced;
    }

    public static _deleteDropDownInitialValues(reduced: DashboardNewViewModel) {
        if (reduced == null) return;


        DSS5_SupplyChainFinancialsOptimisation.ViewModels.MasterPage.MasterPageViewModel._deleteDropDownInitialValues(reduced);
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public TotalOnTime:
    any;
public TotalAsOrdered:
    any;
public TotalInFull:
    any;
public TotalImpeachments:
    any;
public Top5Sellers:
    Array<any>;
public Chart1SelectedItemKeys:
    any[];
public Chart11SelectedItemKeys:
    any[];
public Chart1112SelectedItemKeys:
    any[];
public Chart1111SelectedItemKeys:
    any[];
public Chart2SelectedItemKeys:
    any[];
public Chart3SelectedItemKeys:
    any[];
public ChartSelectedItemKeys:
    any[];
}

export class Top5Sellers_SupplierStatisticViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
CurrentTurnover:
true,Id:
true,Supplier:
                true
            }
        } else {
            this._members["CurrentTurnover"] = true;
            this._members["Id"] = true;
            this._members["Supplier"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.Supplier != null)
            instance.Supplier = Top5Sellers_SupplierStatistic_Supplier_SupplierViewModel._lightCast(instance.Supplier);
        return instance;
    }

    public static _initializeFrom(original: Top5Sellers_SupplierStatisticViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Top5Sellers_SupplierStatisticViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Top5Sellers_SupplierStatisticViewModel = new Top5Sellers_SupplierStatisticViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateTop5Sellers_SupplierStatisticViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateTop5Sellers_SupplierStatisticViewModel(original: Top5Sellers_SupplierStatisticViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.CurrentTurnover !== undefined) this.CurrentTurnover = original.CurrentTurnover;
        if(original.Id !== undefined) this.Id = original.Id;

        if(original.Supplier !== undefined) this.Supplier = Top5Sellers_SupplierStatistic_Supplier_SupplierViewModel._initializeFrom(original.Supplier, ignoreReadOnlyProperties, context);

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Top5Sellers_SupplierStatisticViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Top5Sellers_SupplierStatisticViewModel {
        var reduced = Top5Sellers_SupplierStatisticViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public CurrentTurnover:
    any;
public Id:
    any;
public Supplier:
    any;
    public _versionTimestamp?: string;
}

export class Top5Sellers_SupplierStatistic_Supplier_SupplierViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Company:
true,UserName:
true,SupplierContactInformation:
                true
            }
        } else {
            this._members["Company"] = true;
            this._members["UserName"] = true;
            this._members["SupplierContactInformation"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.SupplierContactInformation != null)
            instance.SupplierContactInformation = Top5Sellers_SupplierStatistic_Supplier_Supplier_SupplierContactInformation_SupplierContactInformationViewModel._lightCast(instance.SupplierContactInformation);
        return instance;
    }

    public static _initializeFrom(original: Top5Sellers_SupplierStatistic_Supplier_SupplierViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Top5Sellers_SupplierStatistic_Supplier_SupplierViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Top5Sellers_SupplierStatistic_Supplier_SupplierViewModel = new Top5Sellers_SupplierStatistic_Supplier_SupplierViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateTop5Sellers_SupplierStatistic_Supplier_SupplierViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateTop5Sellers_SupplierStatistic_Supplier_SupplierViewModel(original: Top5Sellers_SupplierStatistic_Supplier_SupplierViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if(original.Company !== undefined) this.Company = original.Company;
        if(original.UserName !== undefined) this.UserName = original.UserName;

        if(original.SupplierContactInformation !== undefined) this.SupplierContactInformation = Top5Sellers_SupplierStatistic_Supplier_Supplier_SupplierContactInformation_SupplierContactInformationViewModel._initializeFrom(original.SupplierContactInformation, ignoreReadOnlyProperties, context);

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Top5Sellers_SupplierStatistic_Supplier_SupplierViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Top5Sellers_SupplierStatistic_Supplier_SupplierViewModel {
        var reduced = Top5Sellers_SupplierStatistic_Supplier_SupplierViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Company:
    any;
public UserName:
    any;
public SupplierContactInformation:
    any;
}

export class Top5Sellers_SupplierStatistic_Supplier_Supplier_SupplierContactInformation_SupplierContactInformationViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Id:
true,ManagingDirector:
true,Telephone:
                true
            }
        } else {
            this._members["Id"] = true;
            this._members["ManagingDirector"] = true;
            this._members["Telephone"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Top5Sellers_SupplierStatistic_Supplier_Supplier_SupplierContactInformation_SupplierContactInformationViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Top5Sellers_SupplierStatistic_Supplier_Supplier_SupplierContactInformation_SupplierContactInformationViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Top5Sellers_SupplierStatistic_Supplier_Supplier_SupplierContactInformation_SupplierContactInformationViewModel = new Top5Sellers_SupplierStatistic_Supplier_Supplier_SupplierContactInformation_SupplierContactInformationViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateTop5Sellers_SupplierStatistic_Supplier_Supplier_SupplierContactInformation_SupplierContactInformationViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateTop5Sellers_SupplierStatistic_Supplier_Supplier_SupplierContactInformation_SupplierContactInformationViewModel(original: Top5Sellers_SupplierStatistic_Supplier_Supplier_SupplierContactInformation_SupplierContactInformationViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.ManagingDirector !== undefined) this.ManagingDirector = original.ManagingDirector;
        if(original.Telephone !== undefined) this.Telephone = original.Telephone;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Top5Sellers_SupplierStatistic_Supplier_Supplier_SupplierContactInformation_SupplierContactInformationViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Top5Sellers_SupplierStatistic_Supplier_Supplier_SupplierContactInformation_SupplierContactInformationViewModel {
        var reduced = Top5Sellers_SupplierStatistic_Supplier_Supplier_SupplierContactInformation_SupplierContactInformationViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Id:
    any;
public ManagingDirector:
    any;
public Telephone:
    any;
    public _versionTimestamp?: string;
}

}
