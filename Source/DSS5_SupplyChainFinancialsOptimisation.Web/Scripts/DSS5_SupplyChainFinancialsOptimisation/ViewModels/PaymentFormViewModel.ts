// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).
namespace DSS5_SupplyChainFinancialsOptimisation.ViewModels.PaymentForm {
export class PaymentFormViewModel extends DSS5_SupplyChainFinancialsOptimisation.ViewModels.MasterPage.MasterPageViewModel {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Payment:
                true
            }
        } else {
            this._members["Payment"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.Payment != null)
            instance.Payment = Payment_PaymentViewModel._lightCast(instance.Payment);
        return instance;
    }

    public static _initializeFrom(original: PaymentFormViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): PaymentFormViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        PaymentFormViewModel = new PaymentFormViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydratePaymentFormViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydratePaymentFormViewModel(original: PaymentFormViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;

        this._hydrateMasterPageViewModel(original, ignoreReadOnlyProperties, context);

        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;


        if(original.Payment !== undefined) this.Payment = Payment_PaymentViewModel._initializeFrom(original.Payment, ignoreReadOnlyProperties, context);
        this.txtPaymentMethod0SelectedItemKeys = original.txtPaymentMethod0SelectedItemKeys;
        this.txtExpirationMonth4SelectedItemKeys = original.txtExpirationMonth4SelectedItemKeys;
        this.txtExpirationYear5SelectedItemKeys = original.txtExpirationYear5SelectedItemKeys;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = PaymentFormViewModel._initializeFrom(this, ignoreReadOnlyProperties);
            PaymentFormViewModel._deleteDropDownInitialValues(reduced);
            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): PaymentFormViewModel {
        var reduced = PaymentFormViewModel._initializeFrom(this, ignoreReadOnlyProperties);
        PaymentFormViewModel._deleteDropDownInitialValues(reduced);
        return reduced;
    }

    public static _deleteDropDownInitialValues(reduced: PaymentFormViewModel) {
        if (reduced == null) return;


        DSS5_SupplyChainFinancialsOptimisation.ViewModels.MasterPage.MasterPageViewModel._deleteDropDownInitialValues(reduced);
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Payment:
    any;
public txtPaymentMethod0SelectedItemKeys:
    any[];
public txtExpirationMonth4SelectedItemKeys:
    any[];
public txtExpirationYear5SelectedItemKeys:
    any[];
}

export class Payment_PaymentViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
BankName:
true,CardholderName:
true,CardNumber:
true,CCV:
true,ExpirationMonth:
true,ExpirationYear:
true,IBANNumber:
true,Id:
true,PaymentMethod:
                true
            }
        } else {
            this._members["BankName"] = true;
            this._members["CardholderName"] = true;
            this._members["CardNumber"] = true;
            this._members["CCV"] = true;
            this._members["ExpirationMonth"] = true;
            this._members["ExpirationYear"] = true;
            this._members["IBANNumber"] = true;
            this._members["Id"] = true;
            this._members["PaymentMethod"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Payment_PaymentViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Payment_PaymentViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Payment_PaymentViewModel = new Payment_PaymentViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydratePayment_PaymentViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydratePayment_PaymentViewModel(original: Payment_PaymentViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.BankName !== undefined) this.BankName = original.BankName;
        if(original.CardholderName !== undefined) this.CardholderName = original.CardholderName;
        if(original.CardNumber !== undefined) this.CardNumber = original.CardNumber;
        if(original.CCV !== undefined) this.CCV = original.CCV;
        if(original.ExpirationMonth !== undefined) this.ExpirationMonth = original.ExpirationMonth;
        if(original.ExpirationYear !== undefined) this.ExpirationYear = original.ExpirationYear;
        if(original.IBANNumber !== undefined) this.IBANNumber = original.IBANNumber;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.PaymentMethod !== undefined) this.PaymentMethod = original.PaymentMethod;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Payment_PaymentViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Payment_PaymentViewModel {
        var reduced = Payment_PaymentViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public BankName:
    any;
public CardholderName:
    any;
public CardNumber:
    any;
public CCV:
    any;
public ExpirationMonth:
    any;
public ExpirationYear:
    any;
public IBANNumber:
    any;
public Id:
    any;
public PaymentMethod:
    any;
    public _versionTimestamp?: string;
}

}
