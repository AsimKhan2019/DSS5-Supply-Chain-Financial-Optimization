// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).
namespace DSS5_SupplyChainFinancialsOptimisation.ViewModels.DeliveryNoteForm {
export class DeliveryNoteFormViewModel extends DSS5_SupplyChainFinancialsOptimisation.ViewModels.MasterPage.MasterPageViewModel {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
DeliveryNote:
true,SupplierProducts:
true,CSVPath:
true,TotalPrice:
true,DeliveryNoteStandardPath:
true,DeliveryNoteStandardPhoto:
true,UploadConfirmed:
true,IsSupplier:
                true
            }
        } else {
            this._members["DeliveryNote"] = true;
            this._members["SupplierProducts"] = true;
            this._members["CSVPath"] = true;
            this._members["TotalPrice"] = true;
            this._members["DeliveryNoteStandardPath"] = true;
            this._members["DeliveryNoteStandardPhoto"] = true;
            this._members["UploadConfirmed"] = true;
            this._members["IsSupplier"] = true;
        }

        this.SupplierProducts = new Array<any>();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.DeliveryNote != null)
            instance.DeliveryNote = DeliveryNote_DeliveryNoteViewModel._lightCast(instance.DeliveryNote);

        if(instance.SupplierProducts != null) {
            for(let i = 0; i < instance.SupplierProducts.length; i++) {
                instance.SupplierProducts[i] = SupplierProducts_SupplierProductViewModel._lightCast(instance.SupplierProducts[i]);

            }
        }
        return instance;
    }

    public static _initializeFrom(original: DeliveryNoteFormViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): DeliveryNoteFormViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        DeliveryNoteFormViewModel = new DeliveryNoteFormViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateDeliveryNoteFormViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateDeliveryNoteFormViewModel(original: DeliveryNoteFormViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;

        this._hydrateMasterPageViewModel(original, ignoreReadOnlyProperties, context);

        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;


        if(original.DeliveryNote !== undefined) this.DeliveryNote = DeliveryNote_DeliveryNoteViewModel._initializeFrom(original.DeliveryNote, ignoreReadOnlyProperties, context);

        if(original.SupplierProducts != null) {
            for(let i = 0; i < original.SupplierProducts.length; i++) {
                this.SupplierProducts.push(SupplierProducts_SupplierProductViewModel._initializeFrom(original.SupplierProducts[i], ignoreReadOnlyProperties, context));
            }
        }
        if(original.CSVPath !== undefined) this.CSVPath = original.CSVPath;
        if(original.TotalPrice !== undefined) this.TotalPrice = original.TotalPrice;
        if(original.DeliveryNoteStandardPath !== undefined) this.DeliveryNoteStandardPath = original.DeliveryNoteStandardPath;
        if(original.DeliveryNoteStandardPhoto !== undefined) this.DeliveryNoteStandardPhoto = original.DeliveryNoteStandardPhoto;
        if(original.UploadConfirmed !== undefined) this.UploadConfirmed = original.UploadConfirmed;
        if(original.IsSupplier !== undefined) this.IsSupplier = original.IsSupplier;
        this.SelectOrderSelectedItemKeys = original.SelectOrderSelectedItemKeys;
        this.PickListSelectedItemKeys = original.PickListSelectedItemKeys;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = DeliveryNoteFormViewModel._initializeFrom(this, ignoreReadOnlyProperties);
            DeliveryNoteFormViewModel._deleteDropDownInitialValues(reduced);
            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): DeliveryNoteFormViewModel {
        var reduced = DeliveryNoteFormViewModel._initializeFrom(this, ignoreReadOnlyProperties);
        DeliveryNoteFormViewModel._deleteDropDownInitialValues(reduced);
        return reduced;
    }

    public static _deleteDropDownInitialValues(reduced: DeliveryNoteFormViewModel) {
        if (reduced == null) return;


        DSS5_SupplyChainFinancialsOptimisation.ViewModels.MasterPage.MasterPageViewModel._deleteDropDownInitialValues(reduced);
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public DeliveryNote:
    any;
public SupplierProducts:
    Array<any>;
public CSVPath:
    any;
public TotalPrice:
    any;
public DeliveryNoteStandardPath:
    any;
public DeliveryNoteStandardPhoto:
    any;
public UploadConfirmed:
    any;
public IsSupplier:
    any;
public SelectOrderSelectedItemKeys:
    any[];
public PickListSelectedItemKeys:
    any[];
}

export class DeliveryNote_DeliveryNoteViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Amount:
true,DateIssued:
true,DeliveryNoteNumber:
true,Description:
true,DNoteAttachment:
true,Id:
true,Status:
true,TotalPrice:
true,Transaction:
true,Orders:
true,DeliveryNoteProducts:
                true
            }
        } else {
            this._members["Amount"] = true;
            this._members["DateIssued"] = true;
            this._members["DeliveryNoteNumber"] = true;
            this._members["Description"] = true;
            this._members["DNoteAttachment"] = true;
            this._members["Id"] = true;
            this._members["Status"] = true;
            this._members["TotalPrice"] = true;
            this._members["Transaction"] = true;
            this._members["Orders"] = true;
            this._members["DeliveryNoteProducts"] = true;
        }

        this.Orders = new Array<any>();
        this.DeliveryNoteProducts = new Array<any>();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.DateIssued != null) instance.DateIssued = new Date(instance.DateIssued);
        if(instance.Transaction != null)
            instance.Transaction = DeliveryNote_DeliveryNote_Transaction_TransactionViewModel._lightCast(instance.Transaction);

        if(instance.Orders != null) {
            for(let i = 0; i < instance.Orders.length; i++) {
                instance.Orders[i] = DeliveryNote_DeliveryNote_Orders_OrderViewModel._lightCast(instance.Orders[i]);

            }
        }

        if(instance.DeliveryNoteProducts != null) {
            for(let i = 0; i < instance.DeliveryNoteProducts.length; i++) {
                instance.DeliveryNoteProducts[i] = DeliveryNote_DeliveryNote_DeliveryNoteProducts_DeliveryNoteProductViewModel._lightCast(instance.DeliveryNoteProducts[i]);

            }
        }
        return instance;
    }

    public static _initializeFrom(original: DeliveryNote_DeliveryNoteViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): DeliveryNote_DeliveryNoteViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        DeliveryNote_DeliveryNoteViewModel = new DeliveryNote_DeliveryNoteViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateDeliveryNote_DeliveryNoteViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateDeliveryNote_DeliveryNoteViewModel(original: DeliveryNote_DeliveryNoteViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Amount !== undefined) this.Amount = original.Amount;
        if(!CLMS.Framework.String.IsNullOrEmpty(original.DateIssued)) this.DateIssued = new Date(original.DateIssued);
        if(original.DeliveryNoteNumber !== undefined) this.DeliveryNoteNumber = original.DeliveryNoteNumber;
        if(original.Description !== undefined) this.Description = original.Description;
        if(original.DNoteAttachment !== undefined) this.DNoteAttachment = original.DNoteAttachment;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Status !== undefined) this.Status = original.Status;
        if(original.TotalPrice !== undefined) this.TotalPrice = original.TotalPrice;

        if(original.Transaction !== undefined) this.Transaction = DeliveryNote_DeliveryNote_Transaction_TransactionViewModel._initializeFrom(original.Transaction, ignoreReadOnlyProperties, context);

        if(original.Orders != null) {
            for(let i = 0; i < original.Orders.length; i++) {
                this.Orders.push(DeliveryNote_DeliveryNote_Orders_OrderViewModel._initializeFrom(original.Orders[i], ignoreReadOnlyProperties, context));
            }
        }

        if(original.DeliveryNoteProducts != null) {
            for(let i = 0; i < original.DeliveryNoteProducts.length; i++) {
                this.DeliveryNoteProducts.push(DeliveryNote_DeliveryNote_DeliveryNoteProducts_DeliveryNoteProductViewModel._initializeFrom(original.DeliveryNoteProducts[i], ignoreReadOnlyProperties, context));
            }
        }

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = DeliveryNote_DeliveryNoteViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): DeliveryNote_DeliveryNoteViewModel {
        var reduced = DeliveryNote_DeliveryNoteViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Amount:
    any;
public DateIssued:
    any;
public DeliveryNoteNumber:
    any;
public Description:
    any;
public DNoteAttachment:
    any;
public Id:
    any;
public Status:
    any;
public TotalPrice:
    any;
public Transaction:
    any;
public Orders:
    Array<any>;
public DeliveryNoteProducts:
    Array<any>;
    public _versionTimestamp?: string;
}

export enum $Status {
    Initial
}
export class DeliveryNote_DeliveryNote_Transaction_TransactionViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
FundedAmount:
true,Id:
true,TransactionDateOccured:
true,TransactionValue:
true,CommercialAgreement:
                true
            }
        } else {
            this._members["FundedAmount"] = true;
            this._members["Id"] = true;
            this._members["TransactionDateOccured"] = true;
            this._members["TransactionValue"] = true;
            this._members["CommercialAgreement"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.TransactionDateOccured != null) instance.TransactionDateOccured = new Date(instance.TransactionDateOccured);
        if(instance.CommercialAgreement != null)
            instance.CommercialAgreement = DeliveryNote_DeliveryNote_Transaction_Transaction_CommercialAgreement_CommercialAgreementViewModel._lightCast(instance.CommercialAgreement);
        return instance;
    }

    public static _initializeFrom(original: DeliveryNote_DeliveryNote_Transaction_TransactionViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): DeliveryNote_DeliveryNote_Transaction_TransactionViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        DeliveryNote_DeliveryNote_Transaction_TransactionViewModel = new DeliveryNote_DeliveryNote_Transaction_TransactionViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateDeliveryNote_DeliveryNote_Transaction_TransactionViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateDeliveryNote_DeliveryNote_Transaction_TransactionViewModel(original: DeliveryNote_DeliveryNote_Transaction_TransactionViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.FundedAmount !== undefined) this.FundedAmount = original.FundedAmount;
        if(original.Id !== undefined) this.Id = original.Id;
        if(!CLMS.Framework.String.IsNullOrEmpty(original.TransactionDateOccured)) this.TransactionDateOccured = new Date(original.TransactionDateOccured);
        if(original.TransactionValue !== undefined) this.TransactionValue = original.TransactionValue;

        if(original.CommercialAgreement !== undefined) this.CommercialAgreement = DeliveryNote_DeliveryNote_Transaction_Transaction_CommercialAgreement_CommercialAgreementViewModel._initializeFrom(original.CommercialAgreement, ignoreReadOnlyProperties, context);

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = DeliveryNote_DeliveryNote_Transaction_TransactionViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): DeliveryNote_DeliveryNote_Transaction_TransactionViewModel {
        var reduced = DeliveryNote_DeliveryNote_Transaction_TransactionViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public FundedAmount:
    any;
public Id:
    any;
public TransactionDateOccured:
    any;
public TransactionValue:
    any;
public CommercialAgreement:
    any;
    public _versionTimestamp?: string;
}

export class DeliveryNote_DeliveryNote_Transaction_Transaction_CommercialAgreement_CommercialAgreementViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Id:
true,PaymentTerms:
true,ProductCategory:
true,ImportedBuyer:
                true
            }
        } else {
            this._members["Id"] = true;
            this._members["PaymentTerms"] = true;
            this._members["ProductCategory"] = true;
            this._members["ImportedBuyer"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.ImportedBuyer != null)
            instance.ImportedBuyer = DeliveryNote_DeliveryNote_Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel._lightCast(instance.ImportedBuyer);
        return instance;
    }

    public static _initializeFrom(original: DeliveryNote_DeliveryNote_Transaction_Transaction_CommercialAgreement_CommercialAgreementViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): DeliveryNote_DeliveryNote_Transaction_Transaction_CommercialAgreement_CommercialAgreementViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        DeliveryNote_DeliveryNote_Transaction_Transaction_CommercialAgreement_CommercialAgreementViewModel = new DeliveryNote_DeliveryNote_Transaction_Transaction_CommercialAgreement_CommercialAgreementViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateDeliveryNote_DeliveryNote_Transaction_Transaction_CommercialAgreement_CommercialAgreementViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateDeliveryNote_DeliveryNote_Transaction_Transaction_CommercialAgreement_CommercialAgreementViewModel(original: DeliveryNote_DeliveryNote_Transaction_Transaction_CommercialAgreement_CommercialAgreementViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.PaymentTerms !== undefined) this.PaymentTerms = original.PaymentTerms;
        if(original.ProductCategory !== undefined) this.ProductCategory = original.ProductCategory;

        if(original.ImportedBuyer !== undefined) this.ImportedBuyer = DeliveryNote_DeliveryNote_Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel._initializeFrom(original.ImportedBuyer, ignoreReadOnlyProperties, context);

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = DeliveryNote_DeliveryNote_Transaction_Transaction_CommercialAgreement_CommercialAgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): DeliveryNote_DeliveryNote_Transaction_Transaction_CommercialAgreement_CommercialAgreementViewModel {
        var reduced = DeliveryNote_DeliveryNote_Transaction_Transaction_CommercialAgreement_CommercialAgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Id:
    any;
public PaymentTerms:
    any;
public ProductCategory:
    any;
public ImportedBuyer:
    any;
    public _versionTimestamp?: string;
}

export class DeliveryNote_DeliveryNote_Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
AddressOne:
true,AddressTwo:
true,Code:
true,Company:
true,Id:
true,Phone:
true,VATNumber:
                true
            }
        } else {
            this._members["AddressOne"] = true;
            this._members["AddressTwo"] = true;
            this._members["Code"] = true;
            this._members["Company"] = true;
            this._members["Id"] = true;
            this._members["Phone"] = true;
            this._members["VATNumber"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: DeliveryNote_DeliveryNote_Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): DeliveryNote_DeliveryNote_Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        DeliveryNote_DeliveryNote_Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel = new DeliveryNote_DeliveryNote_Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateDeliveryNote_DeliveryNote_Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateDeliveryNote_DeliveryNote_Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel(original: DeliveryNote_DeliveryNote_Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.AddressOne !== undefined) this.AddressOne = original.AddressOne;
        if(original.AddressTwo !== undefined) this.AddressTwo = original.AddressTwo;
        if(original.Code !== undefined) this.Code = original.Code;
        if(original.Company !== undefined) this.Company = original.Company;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Phone !== undefined) this.Phone = original.Phone;
        if(original.VATNumber !== undefined) this.VATNumber = original.VATNumber;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = DeliveryNote_DeliveryNote_Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): DeliveryNote_DeliveryNote_Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel {
        var reduced = DeliveryNote_DeliveryNote_Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public AddressOne:
    any;
public AddressTwo:
    any;
public Code:
    any;
public Company:
    any;
public Id:
    any;
public Phone:
    any;
public VATNumber:
    any;
    public _versionTimestamp?: string;
}

export class DeliveryNote_DeliveryNote_Orders_OrderViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
DateOfOrder:
true,DeliveryTo:
true,EstimatedDateOfDelivery:
true,From:
true,Id:
true,IntermediateParty:
true,IsCancelled:
true,OrderAmount:
true,OrderAttachment:
true,OrderNumber:
true,PaymentTerms:
true,Status:
true,TotalPrice:
                true
            }
        } else {
            this._members["DateOfOrder"] = true;
            this._members["DeliveryTo"] = true;
            this._members["EstimatedDateOfDelivery"] = true;
            this._members["From"] = true;
            this._members["Id"] = true;
            this._members["IntermediateParty"] = true;
            this._members["IsCancelled"] = true;
            this._members["OrderAmount"] = true;
            this._members["OrderAttachment"] = true;
            this._members["OrderNumber"] = true;
            this._members["PaymentTerms"] = true;
            this._members["Status"] = true;
            this._members["TotalPrice"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.DateOfOrder != null) instance.DateOfOrder = new Date(instance.DateOfOrder);
        if(instance.EstimatedDateOfDelivery != null) instance.EstimatedDateOfDelivery = new Date(instance.EstimatedDateOfDelivery);
        return instance;
    }

    public static _initializeFrom(original: DeliveryNote_DeliveryNote_Orders_OrderViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): DeliveryNote_DeliveryNote_Orders_OrderViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        DeliveryNote_DeliveryNote_Orders_OrderViewModel = new DeliveryNote_DeliveryNote_Orders_OrderViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateDeliveryNote_DeliveryNote_Orders_OrderViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateDeliveryNote_DeliveryNote_Orders_OrderViewModel(original: DeliveryNote_DeliveryNote_Orders_OrderViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(!CLMS.Framework.String.IsNullOrEmpty(original.DateOfOrder)) this.DateOfOrder = new Date(original.DateOfOrder);
        if(original.DeliveryTo !== undefined) this.DeliveryTo = original.DeliveryTo;
        if(!CLMS.Framework.String.IsNullOrEmpty(original.EstimatedDateOfDelivery)) this.EstimatedDateOfDelivery = new Date(original.EstimatedDateOfDelivery);
        if(original.From !== undefined) this.From = original.From;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.IntermediateParty !== undefined) this.IntermediateParty = original.IntermediateParty;
        if(original.IsCancelled !== undefined) this.IsCancelled = original.IsCancelled;
        if(original.OrderAmount !== undefined) this.OrderAmount = original.OrderAmount;
        if(original.OrderAttachment !== undefined) this.OrderAttachment = original.OrderAttachment;
        if(original.OrderNumber !== undefined) this.OrderNumber = original.OrderNumber;
        if(original.PaymentTerms !== undefined) this.PaymentTerms = original.PaymentTerms;
        if(original.Status !== undefined) this.Status = original.Status;
        if(original.TotalPrice !== undefined) this.TotalPrice = original.TotalPrice;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = DeliveryNote_DeliveryNote_Orders_OrderViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): DeliveryNote_DeliveryNote_Orders_OrderViewModel {
        var reduced = DeliveryNote_DeliveryNote_Orders_OrderViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public DateOfOrder:
    any;
public DeliveryTo:
    any;
public EstimatedDateOfDelivery:
    any;
public From:
    any;
public Id:
    any;
public IntermediateParty:
    any;
public IsCancelled:
    any;
public OrderAmount:
    any;
public OrderAttachment:
    any;
public OrderNumber:
    any;
public PaymentTerms:
    any;
public Status:
    any;
public TotalPrice:
    any;
    public _versionTimestamp?: string;
}

export class DeliveryNote_DeliveryNote_DeliveryNoteProducts_DeliveryNoteProductViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Code:
true,Description:
true,Id:
true,LineTotalPrice:
true,MeasurementUnit:
true,Price:
true,Quantity:
true,UnitValue:
                true
            }
        } else {
            this._members["Code"] = true;
            this._members["Description"] = true;
            this._members["Id"] = true;
            this._members["LineTotalPrice"] = true;
            this._members["MeasurementUnit"] = true;
            this._members["Price"] = true;
            this._members["Quantity"] = true;
            this._members["UnitValue"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: DeliveryNote_DeliveryNote_DeliveryNoteProducts_DeliveryNoteProductViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): DeliveryNote_DeliveryNote_DeliveryNoteProducts_DeliveryNoteProductViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        DeliveryNote_DeliveryNote_DeliveryNoteProducts_DeliveryNoteProductViewModel = new DeliveryNote_DeliveryNote_DeliveryNoteProducts_DeliveryNoteProductViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateDeliveryNote_DeliveryNote_DeliveryNoteProducts_DeliveryNoteProductViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateDeliveryNote_DeliveryNote_DeliveryNoteProducts_DeliveryNoteProductViewModel(original: DeliveryNote_DeliveryNote_DeliveryNoteProducts_DeliveryNoteProductViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Code !== undefined) this.Code = original.Code;
        if(original.Description !== undefined) this.Description = original.Description;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.LineTotalPrice !== undefined) this.LineTotalPrice = original.LineTotalPrice;
        if(original.MeasurementUnit !== undefined) this.MeasurementUnit = original.MeasurementUnit;
        if(original.Price !== undefined) this.Price = original.Price;
        if(original.Quantity !== undefined) this.Quantity = original.Quantity;
        if(original.UnitValue !== undefined) this.UnitValue = original.UnitValue;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = DeliveryNote_DeliveryNote_DeliveryNoteProducts_DeliveryNoteProductViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): DeliveryNote_DeliveryNote_DeliveryNoteProducts_DeliveryNoteProductViewModel {
        var reduced = DeliveryNote_DeliveryNote_DeliveryNoteProducts_DeliveryNoteProductViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Code:
    any;
public Description:
    any;
public Id:
    any;
public LineTotalPrice:
    any;
public MeasurementUnit:
    any;
public Price:
    any;
public Quantity:
    any;
public UnitValue:
    any;
    public _versionTimestamp?: string;
}

export class SupplierProducts_SupplierProductViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Code:
true,Description:
true,Id:
true,MeasurementUnit:
true,Price:
true,UnitValue:
                true
            }
        } else {
            this._members["Code"] = true;
            this._members["Description"] = true;
            this._members["Id"] = true;
            this._members["MeasurementUnit"] = true;
            this._members["Price"] = true;
            this._members["UnitValue"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: SupplierProducts_SupplierProductViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): SupplierProducts_SupplierProductViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        SupplierProducts_SupplierProductViewModel = new SupplierProducts_SupplierProductViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateSupplierProducts_SupplierProductViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateSupplierProducts_SupplierProductViewModel(original: SupplierProducts_SupplierProductViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Code !== undefined) this.Code = original.Code;
        if(original.Description !== undefined) this.Description = original.Description;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.MeasurementUnit !== undefined) this.MeasurementUnit = original.MeasurementUnit;
        if(original.Price !== undefined) this.Price = original.Price;
        if(original.UnitValue !== undefined) this.UnitValue = original.UnitValue;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = SupplierProducts_SupplierProductViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): SupplierProducts_SupplierProductViewModel {
        var reduced = SupplierProducts_SupplierProductViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Code:
    any;
public Description:
    any;
public Id:
    any;
public MeasurementUnit:
    any;
public Price:
    any;
public UnitValue:
    any;
    public _versionTimestamp?: string;
}

}
