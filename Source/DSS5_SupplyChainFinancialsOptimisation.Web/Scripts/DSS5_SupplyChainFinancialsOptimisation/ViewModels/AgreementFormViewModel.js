var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).
var DSS5_SupplyChainFinancialsOptimisation;
(function (DSS5_SupplyChainFinancialsOptimisation) {
    var ViewModels;
    (function (ViewModels) {
        var AgreementForm;
        (function (AgreementForm) {
            var AgreementFormViewModel = (function (_super) {
                __extends(AgreementFormViewModel, _super);
                function AgreementFormViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Agreement: true, ApprovedBy: true, IsSupplier: true, ApprovedByEverybody: true
                        };
                    }
                    else {
                        _this._members["Agreement"] = true;
                        _this._members["ApprovedBy"] = true;
                        _this._members["IsSupplier"] = true;
                        _this._members["ApprovedByEverybody"] = true;
                    }
                    return _this;
                }
                AgreementFormViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.Agreement != null)
                        instance.Agreement = Agreement_AgreementViewModel._lightCast(instance.Agreement);
                    return instance;
                };
                AgreementFormViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new AgreementFormViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateAgreementFormViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                AgreementFormViewModel.prototype._hydrateAgreementFormViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    this._hydrateMasterPageViewModel(original, ignoreReadOnlyProperties, context);
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.Agreement !== undefined)
                        this.Agreement = Agreement_AgreementViewModel._initializeFrom(original.Agreement, ignoreReadOnlyProperties, context);
                    if (original.ApprovedBy !== undefined)
                        this.ApprovedBy = original.ApprovedBy;
                    if (original.IsSupplier !== undefined)
                        this.IsSupplier = original.IsSupplier;
                    if (original.ApprovedByEverybody !== undefined)
                        this.ApprovedByEverybody = original.ApprovedByEverybody;
                    this.PickListSelectedItemKeys = original.PickListSelectedItemKeys;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = AgreementFormViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        AgreementFormViewModel._deleteDropDownInitialValues(reduced);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                AgreementFormViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = AgreementFormViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    AgreementFormViewModel._deleteDropDownInitialValues(reduced);
                    return reduced;
                };
                AgreementFormViewModel._deleteDropDownInitialValues = function (reduced) {
                    if (reduced == null)
                        return;
                    DSS5_SupplyChainFinancialsOptimisation.ViewModels.MasterPage.MasterPageViewModel._deleteDropDownInitialValues(reduced);
                };
                AgreementFormViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return AgreementFormViewModel;
            }(DSS5_SupplyChainFinancialsOptimisation.ViewModels.MasterPage.MasterPageViewModel));
            AgreementForm.AgreementFormViewModel = AgreementFormViewModel;
            var Agreement_AgreementViewModel = (function (_super) {
                __extends(Agreement_AgreementViewModel, _super);
                function Agreement_AgreementViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            CurrentAgreementStatus: true, EndDate: true, FundedRate: true, Id: true, InterestRate: true, StartDate: true, Investor: true, Supplier: true, AgreementStatus: true, DocumentAgreement: true, CommercialAgreements: true
                        };
                    }
                    else {
                        _this._members["CurrentAgreementStatus"] = true;
                        _this._members["EndDate"] = true;
                        _this._members["FundedRate"] = true;
                        _this._members["Id"] = true;
                        _this._members["InterestRate"] = true;
                        _this._members["StartDate"] = true;
                        _this._members["Investor"] = true;
                        _this._members["Supplier"] = true;
                        _this._members["AgreementStatus"] = true;
                        _this._members["DocumentAgreement"] = true;
                        _this._members["CommercialAgreements"] = true;
                    }
                    _this.AgreementStatus = new Array();
                    _this.CommercialAgreements = new Array();
                    return _this;
                }
                Agreement_AgreementViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.EndDate != null)
                        instance.EndDate = new Date(instance.EndDate);
                    if (instance.StartDate != null)
                        instance.StartDate = new Date(instance.StartDate);
                    if (instance.Investor != null)
                        instance.Investor = Agreement_Agreement_Investor_InvestorViewModel._lightCast(instance.Investor);
                    if (instance.Supplier != null)
                        instance.Supplier = Agreement_Agreement_Supplier_SupplierViewModel._lightCast(instance.Supplier);
                    if (instance.AgreementStatus != null) {
                        for (var i = 0; i < instance.AgreementStatus.length; i++) {
                            instance.AgreementStatus[i] = Agreement_Agreement_AgreementStatus_AgreementStatusViewModel._lightCast(instance.AgreementStatus[i]);
                        }
                    }
                    if (instance.DocumentAgreement != null)
                        instance.DocumentAgreement = Agreement_Agreement_DocumentAgreement_DocumentAgreementViewModel._lightCast(instance.DocumentAgreement);
                    if (instance.CommercialAgreements != null) {
                        for (var i = 0; i < instance.CommercialAgreements.length; i++) {
                            instance.CommercialAgreements[i] = Agreement_Agreement_CommercialAgreements_CommercialAgreementViewModel._lightCast(instance.CommercialAgreements[i]);
                        }
                    }
                    return instance;
                };
                Agreement_AgreementViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Agreement_AgreementViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateAgreement_AgreementViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Agreement_AgreementViewModel.prototype._hydrateAgreement_AgreementViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.CurrentAgreementStatus !== undefined)
                        this.CurrentAgreementStatus = original.CurrentAgreementStatus;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.EndDate))
                        this.EndDate = new Date(original.EndDate);
                    if (original.FundedRate !== undefined)
                        this.FundedRate = original.FundedRate;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.InterestRate !== undefined)
                        this.InterestRate = original.InterestRate;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.StartDate))
                        this.StartDate = new Date(original.StartDate);
                    if (original.Investor !== undefined)
                        this.Investor = Agreement_Agreement_Investor_InvestorViewModel._initializeFrom(original.Investor, ignoreReadOnlyProperties, context);
                    if (original.Supplier !== undefined)
                        this.Supplier = Agreement_Agreement_Supplier_SupplierViewModel._initializeFrom(original.Supplier, ignoreReadOnlyProperties, context);
                    if (original.AgreementStatus != null) {
                        for (var i = 0; i < original.AgreementStatus.length; i++) {
                            this.AgreementStatus.push(Agreement_Agreement_AgreementStatus_AgreementStatusViewModel._initializeFrom(original.AgreementStatus[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.DocumentAgreement !== undefined)
                        this.DocumentAgreement = Agreement_Agreement_DocumentAgreement_DocumentAgreementViewModel._initializeFrom(original.DocumentAgreement, ignoreReadOnlyProperties, context);
                    if (original.CommercialAgreements != null) {
                        for (var i = 0; i < original.CommercialAgreements.length; i++) {
                            this.CommercialAgreements.push(Agreement_Agreement_CommercialAgreements_CommercialAgreementViewModel._initializeFrom(original.CommercialAgreements[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Agreement_AgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Agreement_AgreementViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Agreement_AgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Agreement_AgreementViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Agreement_AgreementViewModel;
            }(BaseClass.ViewModel));
            AgreementForm.Agreement_AgreementViewModel = Agreement_AgreementViewModel;
            var Agreement_Agreement_Investor_InvestorViewModel = (function (_super) {
                __extends(Agreement_Agreement_Investor_InvestorViewModel, _super);
                function Agreement_Agreement_Investor_InvestorViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Company: true, UserName: true
                        };
                    }
                    else {
                        _this._members["Company"] = true;
                        _this._members["UserName"] = true;
                    }
                    return _this;
                }
                Agreement_Agreement_Investor_InvestorViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Agreement_Agreement_Investor_InvestorViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Agreement_Agreement_Investor_InvestorViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateAgreement_Agreement_Investor_InvestorViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Agreement_Agreement_Investor_InvestorViewModel.prototype._hydrateAgreement_Agreement_Investor_InvestorViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.Company !== undefined)
                        this.Company = original.Company;
                    if (original.UserName !== undefined)
                        this.UserName = original.UserName;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Agreement_Agreement_Investor_InvestorViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Agreement_Agreement_Investor_InvestorViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Agreement_Agreement_Investor_InvestorViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Agreement_Agreement_Investor_InvestorViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Agreement_Agreement_Investor_InvestorViewModel;
            }(BaseClass.ViewModel));
            AgreementForm.Agreement_Agreement_Investor_InvestorViewModel = Agreement_Agreement_Investor_InvestorViewModel;
            var Agreement_Agreement_Supplier_SupplierViewModel = (function (_super) {
                __extends(Agreement_Agreement_Supplier_SupplierViewModel, _super);
                function Agreement_Agreement_Supplier_SupplierViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            AdditionalComments: true, AdditionalCommentsStep2: true, AdditionalCommentsStep3: true, Company: true, MarketSegment: true, UserName: true, VATNumber: true
                        };
                    }
                    else {
                        _this._members["AdditionalComments"] = true;
                        _this._members["AdditionalCommentsStep2"] = true;
                        _this._members["AdditionalCommentsStep3"] = true;
                        _this._members["Company"] = true;
                        _this._members["MarketSegment"] = true;
                        _this._members["UserName"] = true;
                        _this._members["VATNumber"] = true;
                    }
                    return _this;
                }
                Agreement_Agreement_Supplier_SupplierViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Agreement_Agreement_Supplier_SupplierViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Agreement_Agreement_Supplier_SupplierViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateAgreement_Agreement_Supplier_SupplierViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Agreement_Agreement_Supplier_SupplierViewModel.prototype._hydrateAgreement_Agreement_Supplier_SupplierViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.AdditionalComments !== undefined)
                        this.AdditionalComments = original.AdditionalComments;
                    if (original.AdditionalCommentsStep2 !== undefined)
                        this.AdditionalCommentsStep2 = original.AdditionalCommentsStep2;
                    if (original.AdditionalCommentsStep3 !== undefined)
                        this.AdditionalCommentsStep3 = original.AdditionalCommentsStep3;
                    if (original.Company !== undefined)
                        this.Company = original.Company;
                    if (original.MarketSegment !== undefined)
                        this.MarketSegment = original.MarketSegment;
                    if (original.UserName !== undefined)
                        this.UserName = original.UserName;
                    if (original.VATNumber !== undefined)
                        this.VATNumber = original.VATNumber;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Agreement_Agreement_Supplier_SupplierViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Agreement_Agreement_Supplier_SupplierViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Agreement_Agreement_Supplier_SupplierViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Agreement_Agreement_Supplier_SupplierViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Agreement_Agreement_Supplier_SupplierViewModel;
            }(BaseClass.ViewModel));
            AgreementForm.Agreement_Agreement_Supplier_SupplierViewModel = Agreement_Agreement_Supplier_SupplierViewModel;
            var Agreement_Agreement_AgreementStatus_AgreementStatusViewModel = (function (_super) {
                __extends(Agreement_Agreement_AgreementStatus_AgreementStatusViewModel, _super);
                function Agreement_Agreement_AgreementStatus_AgreementStatusViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            DateOccured: true, Id: true, ProvidedBy: true, Status: true
                        };
                    }
                    else {
                        _this._members["DateOccured"] = true;
                        _this._members["Id"] = true;
                        _this._members["ProvidedBy"] = true;
                        _this._members["Status"] = true;
                    }
                    return _this;
                }
                Agreement_Agreement_AgreementStatus_AgreementStatusViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.DateOccured != null)
                        instance.DateOccured = new Date(instance.DateOccured);
                    return instance;
                };
                Agreement_Agreement_AgreementStatus_AgreementStatusViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Agreement_Agreement_AgreementStatus_AgreementStatusViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateAgreement_Agreement_AgreementStatus_AgreementStatusViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Agreement_Agreement_AgreementStatus_AgreementStatusViewModel.prototype._hydrateAgreement_Agreement_AgreementStatus_AgreementStatusViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.DateOccured))
                        this.DateOccured = new Date(original.DateOccured);
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.ProvidedBy !== undefined)
                        this.ProvidedBy = original.ProvidedBy;
                    if (original.Status !== undefined)
                        this.Status = original.Status;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Agreement_Agreement_AgreementStatus_AgreementStatusViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Agreement_Agreement_AgreementStatus_AgreementStatusViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Agreement_Agreement_AgreementStatus_AgreementStatusViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Agreement_Agreement_AgreementStatus_AgreementStatusViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Agreement_Agreement_AgreementStatus_AgreementStatusViewModel;
            }(BaseClass.ViewModel));
            AgreementForm.Agreement_Agreement_AgreementStatus_AgreementStatusViewModel = Agreement_Agreement_AgreementStatus_AgreementStatusViewModel;
            var Agreement_Agreement_DocumentAgreement_DocumentAgreementViewModel = (function (_super) {
                __extends(Agreement_Agreement_DocumentAgreement_DocumentAgreementViewModel, _super);
                function Agreement_Agreement_DocumentAgreement_DocumentAgreementViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            AdminDocument: true, Id: true, InvestorDocument: true, SupplierDocument: true
                        };
                    }
                    else {
                        _this._members["AdminDocument"] = true;
                        _this._members["Id"] = true;
                        _this._members["InvestorDocument"] = true;
                        _this._members["SupplierDocument"] = true;
                    }
                    return _this;
                }
                Agreement_Agreement_DocumentAgreement_DocumentAgreementViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Agreement_Agreement_DocumentAgreement_DocumentAgreementViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Agreement_Agreement_DocumentAgreement_DocumentAgreementViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateAgreement_Agreement_DocumentAgreement_DocumentAgreementViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Agreement_Agreement_DocumentAgreement_DocumentAgreementViewModel.prototype._hydrateAgreement_Agreement_DocumentAgreement_DocumentAgreementViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.AdminDocument !== undefined)
                        this.AdminDocument = original.AdminDocument;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.InvestorDocument !== undefined)
                        this.InvestorDocument = original.InvestorDocument;
                    if (original.SupplierDocument !== undefined)
                        this.SupplierDocument = original.SupplierDocument;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Agreement_Agreement_DocumentAgreement_DocumentAgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Agreement_Agreement_DocumentAgreement_DocumentAgreementViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Agreement_Agreement_DocumentAgreement_DocumentAgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Agreement_Agreement_DocumentAgreement_DocumentAgreementViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Agreement_Agreement_DocumentAgreement_DocumentAgreementViewModel;
            }(BaseClass.ViewModel));
            AgreementForm.Agreement_Agreement_DocumentAgreement_DocumentAgreementViewModel = Agreement_Agreement_DocumentAgreement_DocumentAgreementViewModel;
            var Agreement_Agreement_CommercialAgreements_CommercialAgreementViewModel = (function (_super) {
                __extends(Agreement_Agreement_CommercialAgreements_CommercialAgreementViewModel, _super);
                function Agreement_Agreement_CommercialAgreements_CommercialAgreementViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true, PaymentTerms: true, ImportedBuyer: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                        _this._members["PaymentTerms"] = true;
                        _this._members["ImportedBuyer"] = true;
                    }
                    return _this;
                }
                Agreement_Agreement_CommercialAgreements_CommercialAgreementViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.ImportedBuyer != null)
                        instance.ImportedBuyer = Agreement_Agreement_CommercialAgreements_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel._lightCast(instance.ImportedBuyer);
                    return instance;
                };
                Agreement_Agreement_CommercialAgreements_CommercialAgreementViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Agreement_Agreement_CommercialAgreements_CommercialAgreementViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateAgreement_Agreement_CommercialAgreements_CommercialAgreementViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Agreement_Agreement_CommercialAgreements_CommercialAgreementViewModel.prototype._hydrateAgreement_Agreement_CommercialAgreements_CommercialAgreementViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.PaymentTerms !== undefined)
                        this.PaymentTerms = original.PaymentTerms;
                    if (original.ImportedBuyer !== undefined)
                        this.ImportedBuyer = Agreement_Agreement_CommercialAgreements_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel._initializeFrom(original.ImportedBuyer, ignoreReadOnlyProperties, context);
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Agreement_Agreement_CommercialAgreements_CommercialAgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Agreement_Agreement_CommercialAgreements_CommercialAgreementViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Agreement_Agreement_CommercialAgreements_CommercialAgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Agreement_Agreement_CommercialAgreements_CommercialAgreementViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Agreement_Agreement_CommercialAgreements_CommercialAgreementViewModel;
            }(BaseClass.ViewModel));
            AgreementForm.Agreement_Agreement_CommercialAgreements_CommercialAgreementViewModel = Agreement_Agreement_CommercialAgreements_CommercialAgreementViewModel;
            var Agreement_Agreement_CommercialAgreements_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel = (function (_super) {
                __extends(Agreement_Agreement_CommercialAgreements_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel, _super);
                function Agreement_Agreement_CommercialAgreements_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Company: true, Id: true
                        };
                    }
                    else {
                        _this._members["Company"] = true;
                        _this._members["Id"] = true;
                    }
                    return _this;
                }
                Agreement_Agreement_CommercialAgreements_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Agreement_Agreement_CommercialAgreements_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Agreement_Agreement_CommercialAgreements_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateAgreement_Agreement_CommercialAgreements_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Agreement_Agreement_CommercialAgreements_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel.prototype._hydrateAgreement_Agreement_CommercialAgreements_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Company !== undefined)
                        this.Company = original.Company;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Agreement_Agreement_CommercialAgreements_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Agreement_Agreement_CommercialAgreements_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Agreement_Agreement_CommercialAgreements_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Agreement_Agreement_CommercialAgreements_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Agreement_Agreement_CommercialAgreements_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel;
            }(BaseClass.ViewModel));
            AgreementForm.Agreement_Agreement_CommercialAgreements_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel = Agreement_Agreement_CommercialAgreements_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel;
        })(AgreementForm = ViewModels.AgreementForm || (ViewModels.AgreementForm = {}));
    })(ViewModels = DSS5_SupplyChainFinancialsOptimisation.ViewModels || (DSS5_SupplyChainFinancialsOptimisation.ViewModels = {}));
})(DSS5_SupplyChainFinancialsOptimisation || (DSS5_SupplyChainFinancialsOptimisation = {}));
