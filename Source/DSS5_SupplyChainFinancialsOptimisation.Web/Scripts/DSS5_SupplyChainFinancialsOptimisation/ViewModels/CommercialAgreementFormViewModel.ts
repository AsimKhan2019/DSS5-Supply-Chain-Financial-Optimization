// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).
namespace DSS5_SupplyChainFinancialsOptimisation.ViewModels.CommercialAgreementForm {
export class CommercialAgreementFormViewModel extends DSS5_SupplyChainFinancialsOptimisation.ViewModels.MasterPage.MasterPageViewModel {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
CommercialAgreement:
true,IsSupplier:
                true
            }
        } else {
            this._members["CommercialAgreement"] = true;
            this._members["IsSupplier"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.CommercialAgreement != null)
            instance.CommercialAgreement = CommercialAgreement_CommercialAgreementViewModel._lightCast(instance.CommercialAgreement);
        return instance;
    }

    public static _initializeFrom(original: CommercialAgreementFormViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): CommercialAgreementFormViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        CommercialAgreementFormViewModel = new CommercialAgreementFormViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateCommercialAgreementFormViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateCommercialAgreementFormViewModel(original: CommercialAgreementFormViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;

        this._hydrateMasterPageViewModel(original, ignoreReadOnlyProperties, context);

        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;


        if(original.CommercialAgreement !== undefined) this.CommercialAgreement = CommercialAgreement_CommercialAgreementViewModel._initializeFrom(original.CommercialAgreement, ignoreReadOnlyProperties, context);
        if(original.IsSupplier !== undefined) this.IsSupplier = original.IsSupplier;
        this.btnSelectImportedBuyersSelectedItemKeys = original.btnSelectImportedBuyersSelectedItemKeys;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = CommercialAgreementFormViewModel._initializeFrom(this, ignoreReadOnlyProperties);
            CommercialAgreementFormViewModel._deleteDropDownInitialValues(reduced);
            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): CommercialAgreementFormViewModel {
        var reduced = CommercialAgreementFormViewModel._initializeFrom(this, ignoreReadOnlyProperties);
        CommercialAgreementFormViewModel._deleteDropDownInitialValues(reduced);
        return reduced;
    }

    public static _deleteDropDownInitialValues(reduced: CommercialAgreementFormViewModel) {
        if (reduced == null) return;


        DSS5_SupplyChainFinancialsOptimisation.ViewModels.MasterPage.MasterPageViewModel._deleteDropDownInitialValues(reduced);
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public CommercialAgreement:
    any;
public IsSupplier:
    any;
public btnSelectImportedBuyersSelectedItemKeys:
    any[];
}

export class CommercialAgreement_CommercialAgreementViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Id:
true,PaymentTerms:
true,ProductCategory:
true,Supplier:
true,ImportedBuyer:
                true
            }
        } else {
            this._members["Id"] = true;
            this._members["PaymentTerms"] = true;
            this._members["ProductCategory"] = true;
            this._members["Supplier"] = true;
            this._members["ImportedBuyer"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.Supplier != null)
            instance.Supplier = CommercialAgreement_CommercialAgreement_Supplier_SupplierViewModel._lightCast(instance.Supplier);
        if(instance.ImportedBuyer != null)
            instance.ImportedBuyer = CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel._lightCast(instance.ImportedBuyer);
        return instance;
    }

    public static _initializeFrom(original: CommercialAgreement_CommercialAgreementViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): CommercialAgreement_CommercialAgreementViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        CommercialAgreement_CommercialAgreementViewModel = new CommercialAgreement_CommercialAgreementViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateCommercialAgreement_CommercialAgreementViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateCommercialAgreement_CommercialAgreementViewModel(original: CommercialAgreement_CommercialAgreementViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.PaymentTerms !== undefined) this.PaymentTerms = original.PaymentTerms;
        if(original.ProductCategory !== undefined) this.ProductCategory = original.ProductCategory;

        if(original.Supplier !== undefined) this.Supplier = CommercialAgreement_CommercialAgreement_Supplier_SupplierViewModel._initializeFrom(original.Supplier, ignoreReadOnlyProperties, context);

        if(original.ImportedBuyer !== undefined) this.ImportedBuyer = CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel._initializeFrom(original.ImportedBuyer, ignoreReadOnlyProperties, context);

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = CommercialAgreement_CommercialAgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): CommercialAgreement_CommercialAgreementViewModel {
        var reduced = CommercialAgreement_CommercialAgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Id:
    any;
public PaymentTerms:
    any;
public ProductCategory:
    any;
public Supplier:
    any;
public ImportedBuyer:
    any;
    public _versionTimestamp?: string;
}

export class CommercialAgreement_CommercialAgreement_Supplier_SupplierViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
UserName:
true,SupplierExtraInformation:
                true
            }
        } else {
            this._members["UserName"] = true;
            this._members["SupplierExtraInformation"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.SupplierExtraInformation != null)
            instance.SupplierExtraInformation = CommercialAgreement_CommercialAgreement_Supplier_Supplier_SupplierExtraInformation_SupplierExtraInformationViewModel._lightCast(instance.SupplierExtraInformation);
        return instance;
    }

    public static _initializeFrom(original: CommercialAgreement_CommercialAgreement_Supplier_SupplierViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): CommercialAgreement_CommercialAgreement_Supplier_SupplierViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        CommercialAgreement_CommercialAgreement_Supplier_SupplierViewModel = new CommercialAgreement_CommercialAgreement_Supplier_SupplierViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateCommercialAgreement_CommercialAgreement_Supplier_SupplierViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateCommercialAgreement_CommercialAgreement_Supplier_SupplierViewModel(original: CommercialAgreement_CommercialAgreement_Supplier_SupplierViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if(original.UserName !== undefined) this.UserName = original.UserName;

        if(original.SupplierExtraInformation !== undefined) this.SupplierExtraInformation = CommercialAgreement_CommercialAgreement_Supplier_Supplier_SupplierExtraInformation_SupplierExtraInformationViewModel._initializeFrom(original.SupplierExtraInformation, ignoreReadOnlyProperties, context);

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = CommercialAgreement_CommercialAgreement_Supplier_SupplierViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): CommercialAgreement_CommercialAgreement_Supplier_SupplierViewModel {
        var reduced = CommercialAgreement_CommercialAgreement_Supplier_SupplierViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public UserName:
    any;
public SupplierExtraInformation:
    any;
}

export class CommercialAgreement_CommercialAgreement_Supplier_Supplier_SupplierExtraInformation_SupplierExtraInformationViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
AreCompanyReceivables:
true,ExistenceCounterClaims:
true,HasCompanyAssigned:
true,Id:
true,OccurenceBadDebts:
                true
            }
        } else {
            this._members["AreCompanyReceivables"] = true;
            this._members["ExistenceCounterClaims"] = true;
            this._members["HasCompanyAssigned"] = true;
            this._members["Id"] = true;
            this._members["OccurenceBadDebts"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: CommercialAgreement_CommercialAgreement_Supplier_Supplier_SupplierExtraInformation_SupplierExtraInformationViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): CommercialAgreement_CommercialAgreement_Supplier_Supplier_SupplierExtraInformation_SupplierExtraInformationViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        CommercialAgreement_CommercialAgreement_Supplier_Supplier_SupplierExtraInformation_SupplierExtraInformationViewModel = new CommercialAgreement_CommercialAgreement_Supplier_Supplier_SupplierExtraInformation_SupplierExtraInformationViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateCommercialAgreement_CommercialAgreement_Supplier_Supplier_SupplierExtraInformation_SupplierExtraInformationViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateCommercialAgreement_CommercialAgreement_Supplier_Supplier_SupplierExtraInformation_SupplierExtraInformationViewModel(original: CommercialAgreement_CommercialAgreement_Supplier_Supplier_SupplierExtraInformation_SupplierExtraInformationViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.AreCompanyReceivables !== undefined) this.AreCompanyReceivables = original.AreCompanyReceivables;
        if(original.ExistenceCounterClaims !== undefined) this.ExistenceCounterClaims = original.ExistenceCounterClaims;
        if(original.HasCompanyAssigned !== undefined) this.HasCompanyAssigned = original.HasCompanyAssigned;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.OccurenceBadDebts !== undefined) this.OccurenceBadDebts = original.OccurenceBadDebts;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = CommercialAgreement_CommercialAgreement_Supplier_Supplier_SupplierExtraInformation_SupplierExtraInformationViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): CommercialAgreement_CommercialAgreement_Supplier_Supplier_SupplierExtraInformation_SupplierExtraInformationViewModel {
        var reduced = CommercialAgreement_CommercialAgreement_Supplier_Supplier_SupplierExtraInformation_SupplierExtraInformationViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public AreCompanyReceivables:
    any;
public ExistenceCounterClaims:
    any;
public HasCompanyAssigned:
    any;
public Id:
    any;
public OccurenceBadDebts:
    any;
    public _versionTimestamp?: string;
}

export class CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
AddressOne:
true,Code:
true,Company:
true,Id:
true,Phone:
true,VATNumber:
                true
            }
        } else {
            this._members["AddressOne"] = true;
            this._members["Code"] = true;
            this._members["Company"] = true;
            this._members["Id"] = true;
            this._members["Phone"] = true;
            this._members["VATNumber"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel = new CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateCommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateCommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel(original: CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.AddressOne !== undefined) this.AddressOne = original.AddressOne;
        if(original.Code !== undefined) this.Code = original.Code;
        if(original.Company !== undefined) this.Company = original.Company;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Phone !== undefined) this.Phone = original.Phone;
        if(original.VATNumber !== undefined) this.VATNumber = original.VATNumber;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel {
        var reduced = CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public AddressOne:
    any;
public Code:
    any;
public Company:
    any;
public Id:
    any;
public Phone:
    any;
public VATNumber:
    any;
    public _versionTimestamp?: string;
}

}
