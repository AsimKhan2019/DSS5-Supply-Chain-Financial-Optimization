// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).
namespace DSS5_SupplyChainFinancialsOptimisation.ViewModels.SignUp {
export class SignUpViewModel extends DSS5_SupplyChainFinancialsOptimisation.ViewModels.MasterPage.MasterPageViewModel {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
RetypePass:
true,UserNameTextBox:
true,PasswordTextBox:
true,ChoosenRole:
true,CompanyName:
true,UserName:
true,Email:
true,Intermediary:
true,IsIntermediary:
                true
            }
        } else {
            this._members["RetypePass"] = true;
            this._members["UserNameTextBox"] = true;
            this._members["PasswordTextBox"] = true;
            this._members["ChoosenRole"] = true;
            this._members["CompanyName"] = true;
            this._members["UserName"] = true;
            this._members["Email"] = true;
            this._members["Intermediary"] = true;
            this._members["IsIntermediary"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.Intermediary != null)
            instance.Intermediary = Intermediary_IntermediaryViewModel._lightCast(instance.Intermediary);
        return instance;
    }

    public static _initializeFrom(original: SignUpViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): SignUpViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        SignUpViewModel = new SignUpViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateSignUpViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateSignUpViewModel(original: SignUpViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;

        this._hydrateMasterPageViewModel(original, ignoreReadOnlyProperties, context);

        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if(original.RetypePass !== undefined) this.RetypePass = original.RetypePass;
        if(original.UserNameTextBox !== undefined) this.UserNameTextBox = original.UserNameTextBox;
        if(original.PasswordTextBox !== undefined) this.PasswordTextBox = original.PasswordTextBox;
        if(original.ChoosenRole !== undefined) this.ChoosenRole = original.ChoosenRole;
        if(original.CompanyName !== undefined) this.CompanyName = original.CompanyName;
        if(original.UserName !== undefined) this.UserName = original.UserName;
        if(original.Email !== undefined) this.Email = original.Email;

        if(original.Intermediary !== undefined) this.Intermediary = Intermediary_IntermediaryViewModel._initializeFrom(original.Intermediary, ignoreReadOnlyProperties, context);
        if(original.IsIntermediary !== undefined) this.IsIntermediary = original.IsIntermediary;
        this.txtChoosenRoleSelectedItemKeys = original.txtChoosenRoleSelectedItemKeys;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = SignUpViewModel._initializeFrom(this, ignoreReadOnlyProperties);
            SignUpViewModel._deleteDropDownInitialValues(reduced);
            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): SignUpViewModel {
        var reduced = SignUpViewModel._initializeFrom(this, ignoreReadOnlyProperties);
        SignUpViewModel._deleteDropDownInitialValues(reduced);
        return reduced;
    }

    public static _deleteDropDownInitialValues(reduced: SignUpViewModel) {
        if (reduced == null) return;


        DSS5_SupplyChainFinancialsOptimisation.ViewModels.MasterPage.MasterPageViewModel._deleteDropDownInitialValues(reduced);
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public RetypePass:
    any;
public UserNameTextBox:
    any;
public PasswordTextBox:
    any;
public ChoosenRole:
    any;
public CompanyName:
    any;
public UserName:
    any;
public Email:
    any;
public Intermediary:
    any;
public IsIntermediary:
    any;
public txtChoosenRoleSelectedItemKeys:
    any[];
}

export class Intermediary_IntermediaryViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Company:
true,EMail:
true,GUID:
true,Id:
true,IntermediaryType:
true,OtherDescription:
                true
            }
        } else {
            this._members["Company"] = true;
            this._members["EMail"] = true;
            this._members["GUID"] = true;
            this._members["Id"] = true;
            this._members["IntermediaryType"] = true;
            this._members["OtherDescription"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Intermediary_IntermediaryViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Intermediary_IntermediaryViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Intermediary_IntermediaryViewModel = new Intermediary_IntermediaryViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateIntermediary_IntermediaryViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateIntermediary_IntermediaryViewModel(original: Intermediary_IntermediaryViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Company !== undefined) this.Company = original.Company;
        if(original.EMail !== undefined) this.EMail = original.EMail;
        if(original.GUID !== undefined) this.GUID = original.GUID;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.IntermediaryType !== undefined) this.IntermediaryType = original.IntermediaryType;
        if(original.OtherDescription !== undefined) this.OtherDescription = original.OtherDescription;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Intermediary_IntermediaryViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Intermediary_IntermediaryViewModel {
        var reduced = Intermediary_IntermediaryViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Company:
    any;
public EMail:
    any;
public GUID:
    any;
public Id:
    any;
public IntermediaryType:
    any;
public OtherDescription:
    any;
    public _versionTimestamp?: string;
}

export enum $IntermediaryType {
    ThirdPartyLogisticsProviders,TransportationCompanies,CustomsAgents,ShippingAgent,Other
}
}
