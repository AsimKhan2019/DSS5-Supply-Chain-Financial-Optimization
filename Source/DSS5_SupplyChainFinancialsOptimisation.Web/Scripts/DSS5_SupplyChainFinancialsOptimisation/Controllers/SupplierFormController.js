var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).
var directiveScopeReadyLimit = 10;
var directiveScopeReadyTimeout = 200;
window.onbeforeunload = function (e) {
    if (window._context.isDirty) {
        var msg = window._resourcesManager.getGlobalResource("RES_WEBFORM_DirtyMessage");
        e.returnValue = msg; // Gecko, Trident, Chrome 34+
        return msg;
    }
};
var DSS5_SupplyChainFinancialsOptimisation;
(function (DSS5_SupplyChainFinancialsOptimisation) {
    var Controllers;
    (function (Controllers) {
        var _this = this;
        var SupplierFormConditionalFormattings = [
            new Joove.JbRule({
                name: "IfGuestConditional",
                type: Joove.RuleTypes.ConditionalFormatting,
                isDataSetRule: false,
                evaluatedAtServer: false,
                contextControlName: null,
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, Joove.Common.nullSafe(function () { return window._context.currentUserRoles.indexOf("GuestSupplier") > -1; }, false) || Joove.Common.nullSafe(function () { return window._context.currentUserRoles.indexOf("PendingRegistered") > -1; }, false)];
                    });
                }); },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange],
                isRelatedToDataValidation: false
            }),
            new Joove.JbRule({
                name: "AcceptedPolicyTermsConditional",
                type: Joove.RuleTypes.ConditionalFormatting,
                isDataSetRule: false,
                evaluatedAtServer: false,
                contextControlName: null,
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.AcceptedPolicyTerms; }, false)];
                    });
                }); },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange],
                isRelatedToDataValidation: false
            }),
            new Joove.JbRule({
                name: "IfAdminConditional",
                type: Joove.RuleTypes.ConditionalFormatting,
                isDataSetRule: false,
                evaluatedAtServer: false,
                contextControlName: null,
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, Joove.Common.nullSafe(function () { return window._context.currentUserRoles.indexOf("Administrator") > -1; }, false)];
                    });
                }); },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange],
                isRelatedToDataValidation: false
            }),
            new Joove.JbRule({
                name: "HideIfNewConditional",
                type: Joove.RuleTypes.ConditionalFormatting,
                isDataSetRule: false,
                evaluatedAtServer: false,
                contextControlName: null,
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, !(Joove.Common.nullSafe(function () { return window._context.currentUserRoles.indexOf("Developer") > -1; }, false))];
                    });
                }); },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange],
                isRelatedToDataValidation: false
            }),
            new Joove.JbRule({
                name: "ShowEvaluationConditional",
                type: Joove.RuleTypes.ConditionalFormatting,
                isDataSetRule: false,
                evaluatedAtServer: false,
                contextControlName: null,
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, true];
                    });
                }); },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange],
                isRelatedToDataValidation: false
            }),
            new Joove.JbRule({
                name: "IfReRunConditional",
                type: Joove.RuleTypes.ConditionalFormatting,
                isDataSetRule: false,
                evaluatedAtServer: false,
                contextControlName: null,
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Rerun; }, false) && Joove.Common.nullSafe(function () { return window._context.currentUserRoles.indexOf("TobeReceivableSeller") > -1; }, false)];
                    });
                }); },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange],
                isRelatedToDataValidation: false
            }),
            new Joove.JbRule({
                name: "AlgorithmGreenConditional",
                type: Joove.RuleTypes.ConditionalFormatting,
                isDataSetRule: false,
                evaluatedAtServer: false,
                contextControlName: null,
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, CLMS.Framework.Number.Equal(function () { return window["scope_SupplierForm"].model.Supplier.EvaluationCountResult; }, function () { return 6; })];
                    });
                }); },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange],
                isRelatedToDataValidation: false
            }),
            new Joove.JbRule({
                name: "AlgorithmBlueConditional",
                type: Joove.RuleTypes.ConditionalFormatting,
                isDataSetRule: false,
                evaluatedAtServer: false,
                contextControlName: null,
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, CLMS.Framework.Number.Equal(function () { return window["scope_SupplierForm"].model.Supplier.EvaluationCountResult; }, function () { return 5; })];
                    });
                }); },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange],
                isRelatedToDataValidation: false
            }),
            new Joove.JbRule({
                name: "AlgorithmYellowConditional",
                type: Joove.RuleTypes.ConditionalFormatting,
                isDataSetRule: false,
                evaluatedAtServer: false,
                contextControlName: null,
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, CLMS.Framework.Number.Equal(function () { return window["scope_SupplierForm"].model.Supplier.EvaluationCountResult; }, function () { return 4; })];
                    });
                }); },
                evaluationTimes: [],
                isRelatedToDataValidation: false
            }),
            new Joove.JbRule({
                name: "AlgorithmOrangeConditional",
                type: Joove.RuleTypes.ConditionalFormatting,
                isDataSetRule: false,
                evaluatedAtServer: false,
                contextControlName: null,
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, CLMS.Framework.Number.Equal(function () { return window["scope_SupplierForm"].model.Supplier.EvaluationCountResult; }, function () { return 3; })];
                    });
                }); },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange],
                isRelatedToDataValidation: false
            }),
            new Joove.JbRule({
                name: "AlgorithmBrownConditional",
                type: Joove.RuleTypes.ConditionalFormatting,
                isDataSetRule: false,
                evaluatedAtServer: false,
                contextControlName: null,
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, CLMS.Framework.Number.Equal(function () { return window["scope_SupplierForm"].model.Supplier.EvaluationCountResult; }, function () { return 2; })];
                    });
                }); },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange],
                isRelatedToDataValidation: false
            }),
            new Joove.JbRule({
                name: "AlgorithmRedConditional",
                type: Joove.RuleTypes.ConditionalFormatting,
                isDataSetRule: false,
                evaluatedAtServer: false,
                contextControlName: null,
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, CLMS.Framework.Number.LessThanOrEqual(function () { return window["scope_SupplierForm"].model.Supplier.EvaluationCountResult; }, function () { return 1; })];
                    });
                }); },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange],
                isRelatedToDataValidation: false
            }),
            new Joove.JbRule({
                name: "EvaluationConditional",
                type: Joove.RuleTypes.ConditionalFormatting,
                isDataSetRule: false,
                evaluatedAtServer: false,
                contextControlName: null,
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, !(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Evaluation; }, false))];
                    });
                }); },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad],
                isRelatedToDataValidation: false
            }),
            new Joove.JbRule({
                name: "RequestValidationConditional",
                type: Joove.RuleTypes.ConditionalFormatting,
                isDataSetRule: false,
                evaluatedAtServer: false,
                contextControlName: null,
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, (Joove.Common.nullSafe(function () { return window._context.currentUserRoles.indexOf("RegisteredSupplier") > -1; }, false) || Joove.Common.nullSafe(function () { return window._context.currentUserRoles.indexOf("PendingValidated") > -1; }, false) || Joove.Common.nullSafe(function () { return window._context.currentUserRoles.indexOf("ValidatedSupplier") > -1; }, false)) && Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.FinishButton; }, false)];
                    });
                }); },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange],
                isRelatedToDataValidation: false
            }),
            new Joove.JbRule({
                name: "ShowIfInvestorConditional",
                type: Joove.RuleTypes.ConditionalFormatting,
                isDataSetRule: false,
                evaluatedAtServer: false,
                contextControlName: null,
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, Joove.Common.nullSafe(function () { return window._context.currentUserRoles.indexOf("Investor") > -1; }, false)];
                    });
                }); },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange],
                isRelatedToDataValidation: false
            }),
            new Joove.JbRule({
                name: "MakeReadOnlyifInvestorFleAttachmentConditional",
                type: Joove.RuleTypes.ConditionalFormatting,
                isDataSetRule: false,
                evaluatedAtServer: false,
                contextControlName: null,
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, (Joove.Common.nullSafe(function () { return window._context.currentUserRoles.indexOf("Investor") > -1; }, false) || Joove.Common.nullSafe(function () { return window._context.currentUserRoles.indexOf("Administrator") > -1; }, false) || Joove.Common.nullSafe(function () { return window._context.currentUserRoles.indexOf("ActiveSupplier") > -1; }, false)) && Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Step2To3; }, false)];
                    });
                }); },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange],
                isRelatedToDataValidation: false
            }),
            new Joove.JbRule({
                name: "MakeReadOnlyifInvestorConditional",
                type: Joove.RuleTypes.ConditionalFormatting,
                isDataSetRule: false,
                evaluatedAtServer: false,
                contextControlName: null,
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, Joove.Common.nullSafe(function () { return window._context.currentUserRoles.indexOf("Investor") > -1; }, false) || Joove.Common.nullSafe(function () { return window._context.currentUserRoles.indexOf("Administrator") > -1; }, false) || Joove.Common.nullSafe(function () { return window._context.currentUserRoles.indexOf("ActiveSupplier") > -1; }, false)];
                    });
                }); },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange],
                isRelatedToDataValidation: false
            }),
            new Joove.JbRule({
                name: "IfInvestorHasAgreementWithSupplierConditional",
                type: Joove.RuleTypes.ConditionalFormatting,
                isDataSetRule: false,
                evaluatedAtServer: false,
                contextControlName: null,
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.Agreements.linq.any(function (a) { return Joove.Common.nullSafe(function () { return a.Investor.UserName; }, "") == Joove.Common.nullSafe(function () { return window._context.currentUsername; }, ""); }); }, false)];
                    });
                }); },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange],
                isRelatedToDataValidation: false
            }),
            new Joove.JbRule({
                name: "CFStep2To1Conditional",
                type: Joove.RuleTypes.ConditionalFormatting,
                isDataSetRule: false,
                evaluatedAtServer: false,
                contextControlName: null,
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Step1; }, false)];
                    });
                }); },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange],
                isRelatedToDataValidation: false
            }),
            new Joove.JbRule({
                name: "CFStep1To2RequiredForSupplierConditional",
                type: Joove.RuleTypes.ConditionalFormatting,
                isDataSetRule: false,
                evaluatedAtServer: false,
                contextControlName: null,
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, false];
                    });
                }); },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange],
                isRelatedToDataValidation: false
            }),
            new Joove.JbRule({
                name: "CFStep1To2Conditional",
                type: Joove.RuleTypes.ConditionalFormatting,
                isDataSetRule: false,
                evaluatedAtServer: false,
                contextControlName: null,
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Step1To2; }, false)];
                    });
                }); },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange],
                isRelatedToDataValidation: false
            }),
            new Joove.JbRule({
                name: "Step1RequiredForSupplierConditional",
                type: Joove.RuleTypes.ConditionalFormatting,
                isDataSetRule: false,
                evaluatedAtServer: false,
                contextControlName: null,
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Step1; }, false) && Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.IsSupplier; }, false)];
                    });
                }); },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange],
                isRelatedToDataValidation: false
            }),
            new Joove.JbRule({
                name: "Step1Conditional",
                type: Joove.RuleTypes.ConditionalFormatting,
                isDataSetRule: false,
                evaluatedAtServer: false,
                contextControlName: null,
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Step1; }, false)];
                    });
                }); },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange],
                isRelatedToDataValidation: false
            }),
            new Joove.JbRule({
                name: "CFStep2To3RequiredForSupplierConditional",
                type: Joove.RuleTypes.ConditionalFormatting,
                isDataSetRule: false,
                evaluatedAtServer: false,
                contextControlName: null,
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, false];
                    });
                }); },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange],
                isRelatedToDataValidation: false
            }),
            new Joove.JbRule({
                name: "CFStep2To3Conditional",
                type: Joove.RuleTypes.ConditionalFormatting,
                isDataSetRule: false,
                evaluatedAtServer: false,
                contextControlName: null,
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Step2To3; }, false)];
                    });
                }); },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange],
                isRelatedToDataValidation: false
            }),
            new Joove.JbRule({
                name: "CFStep3To4Conditional",
                type: Joove.RuleTypes.ConditionalFormatting,
                isDataSetRule: false,
                evaluatedAtServer: false,
                contextControlName: null,
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Step3To4; }, false)];
                    });
                }); },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange],
                isRelatedToDataValidation: false
            }),
            new Joove.JbRule({
                name: "CFStep4To5Conditional",
                type: Joove.RuleTypes.ConditionalFormatting,
                isDataSetRule: false,
                evaluatedAtServer: false,
                contextControlName: null,
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Step4To5; }, false)];
                    });
                }); },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange],
                isRelatedToDataValidation: false
            }),
            new Joove.JbRule({
                name: "FinishedConditional",
                type: Joove.RuleTypes.ConditionalFormatting,
                isDataSetRule: false,
                evaluatedAtServer: false,
                contextControlName: null,
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.FinishButton; }, false) && !((Joove.Common.nullSafe(function () { return window._context.currentUserRoles.indexOf("Investor") > -1; }, false) || Joove.Common.nullSafe(function () { return window._context.currentUserRoles.indexOf("Administrator") > -1; }, false) || Joove.Common.nullSafe(function () { return window._context.currentUserRoles.indexOf("ActiveSupplier") > -1; }, false)))];
                    });
                }); },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange],
                isRelatedToDataValidation: false
            }),
            new Joove.JbRule({
                name: "Step5onlyConditional",
                type: Joove.RuleTypes.ConditionalFormatting,
                isDataSetRule: false,
                evaluatedAtServer: false,
                contextControlName: null,
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Step4To5; }, false)];
                    });
                }); },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange],
                isRelatedToDataValidation: false
            }),
            new Joove.JbRule({
                name: "Step4onlyConditional",
                type: Joove.RuleTypes.ConditionalFormatting,
                isDataSetRule: false,
                evaluatedAtServer: false,
                contextControlName: null,
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Step3To4; }, false)];
                    });
                }); },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange],
                isRelatedToDataValidation: false
            }),
            new Joove.JbRule({
                name: "Step3onlyConditional",
                type: Joove.RuleTypes.ConditionalFormatting,
                isDataSetRule: false,
                evaluatedAtServer: false,
                contextControlName: null,
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Step2To3; }, false)];
                    });
                }); },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange],
                isRelatedToDataValidation: false
            }),
            new Joove.JbRule({
                name: "Step2onlyConditional",
                type: Joove.RuleTypes.ConditionalFormatting,
                isDataSetRule: false,
                evaluatedAtServer: false,
                contextControlName: null,
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Step1To2; }, false)];
                    });
                }); },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange],
                isRelatedToDataValidation: false
            }),
            new Joove.JbRule({
                name: "Step1onlyConditional",
                type: Joove.RuleTypes.ConditionalFormatting,
                isDataSetRule: false,
                evaluatedAtServer: false,
                contextControlName: null,
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Step1; }, false)];
                    });
                }); },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange],
                isRelatedToDataValidation: false
            }),
            new Joove.JbRule({
                name: "Previous5To4Conditional",
                type: Joove.RuleTypes.ConditionalFormatting,
                isDataSetRule: false,
                evaluatedAtServer: false,
                contextControlName: null,
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, !(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Step4To5; }, false)) && Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Step3To4; }, false)];
                    });
                }); },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange],
                isRelatedToDataValidation: false
            }),
            new Joove.JbRule({
                name: "Previous4To3Conditional",
                type: Joove.RuleTypes.ConditionalFormatting,
                isDataSetRule: false,
                evaluatedAtServer: false,
                contextControlName: null,
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, !(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Step3To4; }, false)) && Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Step2To3; }, false)];
                    });
                }); },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange],
                isRelatedToDataValidation: false
            }),
            new Joove.JbRule({
                name: "Previous3To2Conditional",
                type: Joove.RuleTypes.ConditionalFormatting,
                isDataSetRule: false,
                evaluatedAtServer: false,
                contextControlName: null,
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, !(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Step2To3; }, false)) && Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Step1To2; }, false)];
                    });
                }); },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange],
                isRelatedToDataValidation: false
            }),
            new Joove.JbRule({
                name: "Previous2To1Conditional",
                type: Joove.RuleTypes.ConditionalFormatting,
                isDataSetRule: false,
                evaluatedAtServer: false,
                contextControlName: null,
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, !(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Step1To2; }, false)) && Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Step1; }, false)];
                    });
                }); },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange],
                isRelatedToDataValidation: false
            }),
            new Joove.JbRule({
                name: "DisableIfNotAcceptedPolicyConditional",
                type: Joove.RuleTypes.ConditionalFormatting,
                isDataSetRule: false,
                evaluatedAtServer: false,
                contextControlName: null,
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, !(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.AcceptedPolicyTerms; }, false)) && Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.IsSupplier; }, false)];
                    });
                }); },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange],
                isRelatedToDataValidation: false
            }),
            new Joove.JbRule({
                name: "IfGuestSavedThenPayConditional",
                type: Joove.RuleTypes.ConditionalFormatting,
                isDataSetRule: false,
                evaluatedAtServer: false,
                contextControlName: null,
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.GuestFinish; }, false) && (Joove.Common.nullSafe(function () { return window._context.currentUserRoles.indexOf("GuestSupplier") > -1; }, false))];
                    });
                }); },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange],
                isRelatedToDataValidation: false
            }),
            new Joove.JbRule({
                name: "ShowOnlyIfActiveSupConditional",
                type: Joove.RuleTypes.ConditionalFormatting,
                isDataSetRule: false,
                evaluatedAtServer: false,
                contextControlName: null,
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, Joove.Common.nullSafe(function () { return window._context.currentUserRoles.indexOf("ActiveSupplier") > -1; }, false)];
                    });
                }); },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange],
                isRelatedToDataValidation: false
            }),
        ];
        var SupplierFormDataValidations = [
            new Joove.JbRule({
                name: "DVFinancialStatementsValidation",
                type: Joove.RuleTypes.DataValidation,
                evaluatedAtServer: false,
                isDataSetRule: false,
                group: "",
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, false];
                    });
                }); },
                expression: function (_parents) {
                    return __awaiter(this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            return [2 /*return*/, "Please upload a file"];
                        });
                    });
                },
                dataValidationMessageType: Joove.DataValidationMessageType.ERROR,
                evaluationTimes: [Joove.EvaluationTimes.OnSubmit],
                originalName: 'DVFinancialStatements',
                fromMasterPage: false
            }),
            new Joove.JbRule({
                name: "DVEconomicEvaluationsValidation",
                type: Joove.RuleTypes.DataValidation,
                evaluatedAtServer: false,
                isDataSetRule: false,
                group: "",
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, false];
                    });
                }); },
                expression: function (_parents) {
                    return __awaiter(this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            return [2 /*return*/, "Please upload a file"];
                        });
                    });
                },
                dataValidationMessageType: Joove.DataValidationMessageType.ERROR,
                evaluationTimes: [Joove.EvaluationTimes.OnSubmit],
                originalName: 'DVEconomicEvaluations',
                fromMasterPage: false
            }),
            new Joove.JbRule({
                name: "DVBusinessPlansValidation",
                type: Joove.RuleTypes.DataValidation,
                evaluatedAtServer: false,
                isDataSetRule: false,
                group: "",
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, false];
                    });
                }); },
                expression: function (_parents) {
                    return __awaiter(this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            return [2 /*return*/, "Please upload a file"];
                        });
                    });
                },
                dataValidationMessageType: Joove.DataValidationMessageType.ERROR,
                evaluationTimes: [Joove.EvaluationTimes.OnSubmit],
                originalName: 'DVBusinessPlans',
                fromMasterPage: false
            }),
            new Joove.JbRule({
                name: "DVPriorOutstandingBalancesValidation",
                type: Joove.RuleTypes.DataValidation,
                evaluatedAtServer: false,
                isDataSetRule: false,
                group: "",
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, CLMS.Framework.Number.Equal(function () { return window["scope_SupplierForm"].model.Supplier.PriorOutstandingBalances.length; }, function () { return 0; }) && Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.IsSupplier; }, false) && Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Step4To5; }, false)];
                    });
                }); },
                expression: function (_parents) {
                    return __awaiter(this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            return [2 /*return*/, "Please upload Outstanding balance analysis in Step 3"];
                        });
                    });
                },
                dataValidationMessageType: Joove.DataValidationMessageType.ERROR,
                evaluationTimes: [Joove.EvaluationTimes.OnSubmit],
                originalName: 'DVPriorOutstandingBalances',
                fromMasterPage: false
            }),
            new Joove.JbRule({
                name: "DVOutstandingBalancesValidation",
                type: Joove.RuleTypes.DataValidation,
                evaluatedAtServer: false,
                isDataSetRule: false,
                group: "",
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, false];
                    });
                }); },
                expression: function (_parents) {
                    return __awaiter(this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            return [2 /*return*/, "Please upload a file"];
                        });
                    });
                },
                dataValidationMessageType: Joove.DataValidationMessageType.ERROR,
                evaluationTimes: [Joove.EvaluationTimes.OnSubmit],
                originalName: 'DVOutstandingBalances',
                fromMasterPage: false
            }),
            new Joove.JbRule({
                name: "DVCurrentSituationsValidation",
                type: Joove.RuleTypes.DataValidation,
                evaluatedAtServer: false,
                isDataSetRule: false,
                group: "",
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, false];
                    });
                }); },
                expression: function (_parents) {
                    return __awaiter(this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            return [2 /*return*/, "Please upload a file"];
                        });
                    });
                },
                dataValidationMessageType: Joove.DataValidationMessageType.ERROR,
                evaluationTimes: [Joove.EvaluationTimes.OnSubmit],
                originalName: 'DVCurrentSituations',
                fromMasterPage: false
            }),
            new Joove.JbRule({
                name: "DVCurrentStatementsValidation",
                type: Joove.RuleTypes.DataValidation,
                evaluatedAtServer: false,
                isDataSetRule: false,
                group: "",
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, false];
                    });
                }); },
                expression: function (_parents) {
                    return __awaiter(this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            return [2 /*return*/, "Please upload a file"];
                        });
                    });
                },
                dataValidationMessageType: Joove.DataValidationMessageType.ERROR,
                evaluationTimes: [Joove.EvaluationTimes.OnSubmit],
                originalName: 'DVCurrentStatements',
                fromMasterPage: false
            }),
            new Joove.JbRule({
                name: "DVCurrentCreditsValidation",
                type: Joove.RuleTypes.DataValidation,
                evaluatedAtServer: false,
                isDataSetRule: false,
                group: "",
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, false];
                    });
                }); },
                expression: function (_parents) {
                    return __awaiter(this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            return [2 /*return*/, "Please upload a file"];
                        });
                    });
                },
                dataValidationMessageType: Joove.DataValidationMessageType.ERROR,
                evaluationTimes: [Joove.EvaluationTimes.OnSubmit],
                originalName: 'DVCurrentCredits',
                fromMasterPage: false
            }),
            new Joove.JbRule({
                name: "DVFactoringAgreementsValidation",
                type: Joove.RuleTypes.DataValidation,
                evaluatedAtServer: false,
                isDataSetRule: false,
                group: "",
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, false];
                    });
                }); },
                expression: function (_parents) {
                    return __awaiter(this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            return [2 /*return*/, "Please upload a file"];
                        });
                    });
                },
                dataValidationMessageType: Joove.DataValidationMessageType.ERROR,
                evaluationTimes: [Joove.EvaluationTimes.OnSubmit],
                originalName: 'DVFactoringAgreements',
                fromMasterPage: false
            }),
            new Joove.JbRule({
                name: "DVAgreementsValidation",
                type: Joove.RuleTypes.DataValidation,
                evaluatedAtServer: false,
                isDataSetRule: false,
                group: "",
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, false];
                    });
                }); },
                expression: function (_parents) {
                    return __awaiter(this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            return [2 /*return*/, "Please upload a file"];
                        });
                    });
                },
                dataValidationMessageType: Joove.DataValidationMessageType.ERROR,
                evaluationTimes: [Joove.EvaluationTimes.OnSubmit],
                originalName: 'DVAgreements',
                fromMasterPage: false
            }),
            new Joove.JbRule({
                name: "DVGeneralConstractualsValidation",
                type: Joove.RuleTypes.DataValidation,
                evaluatedAtServer: false,
                isDataSetRule: false,
                group: "",
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, false];
                    });
                }); },
                expression: function (_parents) {
                    return __awaiter(this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            return [2 /*return*/, "Please upload a file"];
                        });
                    });
                },
                dataValidationMessageType: Joove.DataValidationMessageType.ERROR,
                evaluationTimes: [Joove.EvaluationTimes.OnSubmit],
                originalName: 'DVGeneralConstractuals',
                fromMasterPage: false
            }),
            new Joove.JbRule({
                name: "DVOrganizationalChartsValidation",
                type: Joove.RuleTypes.DataValidation,
                evaluatedAtServer: false,
                isDataSetRule: false,
                group: "",
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, false];
                    });
                }); },
                expression: function (_parents) {
                    return __awaiter(this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            return [2 /*return*/, "Please upload a file"];
                        });
                    });
                },
                dataValidationMessageType: Joove.DataValidationMessageType.ERROR,
                evaluationTimes: [Joove.EvaluationTimes.OnSubmit],
                originalName: 'DVOrganizationalCharts',
                fromMasterPage: false
            }),
            new Joove.JbRule({
                name: "DVDeclarationsValidation",
                type: Joove.RuleTypes.DataValidation,
                evaluatedAtServer: false,
                isDataSetRule: false,
                group: "",
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, false];
                    });
                }); },
                expression: function (_parents) {
                    return __awaiter(this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            return [2 /*return*/, "Please upload a file"];
                        });
                    });
                },
                dataValidationMessageType: Joove.DataValidationMessageType.ERROR,
                evaluationTimes: [Joove.EvaluationTimes.OnSubmit],
                originalName: 'DVDeclarations',
                fromMasterPage: false
            }),
            new Joove.JbRule({
                name: "DVInvoicesFormsValidation",
                type: Joove.RuleTypes.DataValidation,
                evaluatedAtServer: false,
                isDataSetRule: false,
                group: "",
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, false];
                    });
                }); },
                expression: function (_parents) {
                    return __awaiter(this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            return [2 /*return*/, "Please upload a file"];
                        });
                    });
                },
                dataValidationMessageType: Joove.DataValidationMessageType.ERROR,
                evaluationTimes: [Joove.EvaluationTimes.OnSubmit],
                originalName: 'DVInvoicesForms',
                fromMasterPage: false
            }),
            new Joove.JbRule({
                name: "DVPriorOutstandingPolicyTermsValidation",
                type: Joove.RuleTypes.DataValidation,
                evaluatedAtServer: false,
                isDataSetRule: false,
                group: "",
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, CLMS.Framework.Number.NotEqual(function () { return window["scope_SupplierForm"].model.Supplier.PriorOutstandingBalances.length; }, function () { return 0; }) && !(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.AcceptedPolicyTerms; }, false)) && Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Step2To3; }, false) && Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.IsSupplier; }, false)];
                    });
                }); },
                expression: function (_parents) {
                    return __awaiter(this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            return [2 /*return*/, "You have to accept the Policy Terms first in order to upload a file"];
                        });
                    });
                },
                dataValidationMessageType: Joove.DataValidationMessageType.ERROR,
                evaluationTimes: [Joove.EvaluationTimes.OnSubmit],
                originalName: 'DVPriorOutstandingPolicyTerms',
                fromMasterPage: false
            }),
            new Joove.JbRule({
                name: "DVOutstandingPolicyTermsValidation",
                type: Joove.RuleTypes.DataValidation,
                evaluatedAtServer: false,
                isDataSetRule: false,
                group: "",
                condition: function (_parents) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        return [2 /*return*/, CLMS.Framework.Number.NotEqual(function () { return window["scope_SupplierForm"].model.Supplier.OutstandingBalances.length; }, function () { return 0; }) && !(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.AcceptedPolicyTerms; }, false)) && Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Step2To3; }, false)];
                    });
                }); },
                expression: function (_parents) {
                    return __awaiter(this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            return [2 /*return*/, "You have to accept the Policy Terms first in order to upload a file"];
                        });
                    });
                },
                dataValidationMessageType: Joove.DataValidationMessageType.ERROR,
                evaluationTimes: [Joove.EvaluationTimes.OnSubmit],
                originalName: 'DVOutstandingPolicyTerms',
                fromMasterPage: false
            }),
        ];
        var SupplierFormCalculatedExpressions = [
            new Joove.JbRule({
                name: "SumReceivablesPresent",
                type: Joove.RuleTypes.CalculatedExpression,
                evaluatedAtServer: false,
                isDataSetRule: false,
                condition: function (_control) {
                    return __awaiter(this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            return [2 /*return*/, true];
                        });
                    });
                },
                expression: function (_parents) {
                    return __awaiter(this, void 0, void 0, function () {
                        var receivablesPresent;
                        return __generator(this, function (_a) {
                            if ((true)) {
                                receivablesPresent = 0;
                                receivablesPresent = (Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierReceivables.DomesticCustomersPresent; }, 0)) + Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierReceivables.EUCustomersPresent; }, 0)) + Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierReceivables.ThirdCountryCustomersPresent; }, 0)));
                                return [2 /*return*/, receivablesPresent];
                            }
                            else {
                                return [2 /*return*/, null];
                            }
                            return [2 /*return*/];
                        });
                    });
                },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange]
            }),
            new Joove.JbRule({
                name: "SumReceivablesPrior",
                type: Joove.RuleTypes.CalculatedExpression,
                evaluatedAtServer: false,
                isDataSetRule: false,
                condition: function (_control) {
                    return __awaiter(this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            return [2 /*return*/, true];
                        });
                    });
                },
                expression: function (_parents) {
                    return __awaiter(this, void 0, void 0, function () {
                        var receivablesPrior;
                        return __generator(this, function (_a) {
                            if ((true)) {
                                receivablesPrior = 0;
                                receivablesPrior = (Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierReceivables.DomesticCustomersPrior; }, 0)) + Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierReceivables.EUCustomersPrior; }, 0)) + Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierReceivables.ThirdCountryCustomersPrior; }, 0)));
                                return [2 /*return*/, receivablesPrior];
                            }
                            else {
                                return [2 /*return*/, null];
                            }
                            return [2 /*return*/];
                        });
                    });
                },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange]
            }),
            new Joove.JbRule({
                name: "SumNumOfInvoices",
                type: Joove.RuleTypes.CalculatedExpression,
                evaluatedAtServer: false,
                isDataSetRule: false,
                condition: function (_control) {
                    return __awaiter(this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            return [2 /*return*/, true];
                        });
                    });
                },
                expression: function (_parents) {
                    return __awaiter(this, void 0, void 0, function () {
                        var numberOfCustomers;
                        return __generator(this, function (_a) {
                            if ((true)) {
                                numberOfCustomers = 0;
                                numberOfCustomers = (Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierBusinessStructureData.NumOfInvoicesD; }, 0)) + Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierBusinessStructureData.NumOfInvoicesAbroad; }, 0)) + Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierBusinessStructureData.NumOfInvoicesEU; }, 0)));
                                return [2 /*return*/, numberOfCustomers];
                            }
                            else {
                                return [2 /*return*/, null];
                            }
                            return [2 /*return*/];
                        });
                    });
                },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange]
            }),
            new Joove.JbRule({
                name: "SumOpenBalance",
                type: Joove.RuleTypes.CalculatedExpression,
                evaluatedAtServer: false,
                isDataSetRule: false,
                condition: function (_control) {
                    return __awaiter(this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            return [2 /*return*/, true];
                        });
                    });
                },
                expression: function (_parents) {
                    return __awaiter(this, void 0, void 0, function () {
                        var numberOfCustomers;
                        return __generator(this, function (_a) {
                            if ((true)) {
                                numberOfCustomers = 0;
                                numberOfCustomers = (Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierBusinessStructureData.NumOpenBalanceD; }, 0)) + Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierBusinessStructureData.NumOpenBalanceAboad; }, 0)) + Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierBusinessStructureData.NumOpenBalanceEU; }, 0)));
                                return [2 /*return*/, numberOfCustomers];
                            }
                            else {
                                return [2 /*return*/, null];
                            }
                            return [2 /*return*/];
                        });
                    });
                },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange]
            }),
            new Joove.JbRule({
                name: "SumNumTransactions",
                type: Joove.RuleTypes.CalculatedExpression,
                evaluatedAtServer: false,
                isDataSetRule: false,
                condition: function (_control) {
                    return __awaiter(this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            return [2 /*return*/, true];
                        });
                    });
                },
                expression: function (_parents) {
                    return __awaiter(this, void 0, void 0, function () {
                        var numberOfCustomers;
                        return __generator(this, function (_a) {
                            if ((true)) {
                                numberOfCustomers = 0;
                                numberOfCustomers = (Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierBusinessStructureData.NumTransCustD; }, 0)) + Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierBusinessStructureData.NumTransCustAbroad; }, 0)) + Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierBusinessStructureData.NumTransCustEU; }, 0)));
                                return [2 /*return*/, numberOfCustomers];
                            }
                            else {
                                return [2 /*return*/, null];
                            }
                            return [2 /*return*/];
                        });
                    });
                },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange]
            }),
            new Joove.JbRule({
                name: "SumOccasionalCustomers",
                type: Joove.RuleTypes.CalculatedExpression,
                evaluatedAtServer: false,
                isDataSetRule: false,
                condition: function (_control) {
                    return __awaiter(this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            return [2 /*return*/, true];
                        });
                    });
                },
                expression: function (_parents) {
                    return __awaiter(this, void 0, void 0, function () {
                        var numberOfCustomers;
                        return __generator(this, function (_a) {
                            if ((true)) {
                                numberOfCustomers = 0;
                                numberOfCustomers = (Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierBusinessStructureData.NumOfOccasionalCustD; }, 0)) + Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierBusinessStructureData.NumOfOccasionalCustAbroad; }, 0)) + Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierBusinessStructureData.NumOfOccasionalCustEU; }, 0)));
                                return [2 /*return*/, numberOfCustomers];
                            }
                            else {
                                return [2 /*return*/, null];
                            }
                            return [2 /*return*/];
                        });
                    });
                },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange]
            }),
            new Joove.JbRule({
                name: "SumActiveCustomers",
                type: Joove.RuleTypes.CalculatedExpression,
                evaluatedAtServer: false,
                isDataSetRule: false,
                condition: function (_control) {
                    return __awaiter(this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            return [2 /*return*/, true];
                        });
                    });
                },
                expression: function (_parents) {
                    return __awaiter(this, void 0, void 0, function () {
                        var numberOfCustomers;
                        return __generator(this, function (_a) {
                            if ((true)) {
                                numberOfCustomers = 0;
                                numberOfCustomers = (Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierBusinessStructureData.ThereofActiveD; }, 0)) + Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierBusinessStructureData.ThereofActiveAbroad; }, 0)) + Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierBusinessStructureData.ThereofActiveEU; }, 0)));
                                return [2 /*return*/, numberOfCustomers];
                            }
                            else {
                                return [2 /*return*/, null];
                            }
                            return [2 /*return*/];
                        });
                    });
                },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange]
            }),
            new Joove.JbRule({
                name: "SumNumOfCustomers",
                type: Joove.RuleTypes.CalculatedExpression,
                evaluatedAtServer: false,
                isDataSetRule: false,
                condition: function (_control) {
                    return __awaiter(this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            return [2 /*return*/, true];
                        });
                    });
                },
                expression: function (_parents) {
                    return __awaiter(this, void 0, void 0, function () {
                        var numberOfCustomers;
                        return __generator(this, function (_a) {
                            if ((true)) {
                                numberOfCustomers = 0;
                                numberOfCustomers = (Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierBusinessStructureData.NumOfCustomersD; }, 0)) + Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierBusinessStructureData.NumOfCustomersAbroad; }, 0)) + Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierBusinessStructureData.NumOfCustomersEU; }, 0)));
                                return [2 /*return*/, numberOfCustomers];
                            }
                            else {
                                return [2 /*return*/, null];
                            }
                            return [2 /*return*/];
                        });
                    });
                },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange]
            }),
            new Joove.JbRule({
                name: "SumActualTurnoverPreviousYear1",
                type: Joove.RuleTypes.CalculatedExpression,
                evaluatedAtServer: false,
                isDataSetRule: false,
                condition: function (_control) {
                    return __awaiter(this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            return [2 /*return*/, true];
                        });
                    });
                },
                expression: function (_parents) {
                    return __awaiter(this, void 0, void 0, function () {
                        var ActualTurnoverPrevious;
                        return __generator(this, function (_a) {
                            if ((true)) {
                                ActualTurnoverPrevious = 0;
                                ActualTurnoverPrevious = (Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierTurnover.ActualPreviousYearD; }, 0)) + Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierTurnover.ActualPreviousYearEU; }, 0)) + Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierTurnover.ActualPreviousYearAbroad; }, 0)));
                                return [2 /*return*/, ActualTurnoverPrevious];
                            }
                            else {
                                return [2 /*return*/, null];
                            }
                            return [2 /*return*/];
                        });
                    });
                },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange]
            }),
            new Joove.JbRule({
                name: "PercentageTSPreviousPeriodDomestic1",
                type: Joove.RuleTypes.CalculatedExpression,
                evaluatedAtServer: false,
                isDataSetRule: false,
                condition: function (_control) {
                    return __awaiter(this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            return [2 /*return*/, true];
                        });
                    });
                },
                expression: function (_parents) {
                    return __awaiter(this, void 0, void 0, function () {
                        var TotalSalesPerD;
                        return __generator(this, function (_a) {
                            TotalSalesPerD = 0;
                            TotalSalesPerD = (Joove.Common.safeNumber((Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierTurnover.ActualPreviousYearD; }, 0)) / Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierTurnover.ActualPreviousYear; }, 0)))) * Joove.Common.safeNumber(100));
                            return [2 /*return*/, TotalSalesPerD];
                        });
                    });
                },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnChange]
            }),
            new Joove.JbRule({
                name: "PercentageTSPreviousPeriodEU",
                type: Joove.RuleTypes.CalculatedExpression,
                evaluatedAtServer: false,
                isDataSetRule: false,
                condition: function (_control) {
                    return __awaiter(this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            return [2 /*return*/, true];
                        });
                    });
                },
                expression: function (_parents) {
                    return __awaiter(this, void 0, void 0, function () {
                        var TotalSalesPerEU;
                        return __generator(this, function (_a) {
                            TotalSalesPerEU = 0;
                            TotalSalesPerEU = (Joove.Common.safeNumber((Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierTurnover.ActualPreviousYearEU; }, 0)) / Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierTurnover.ActualPreviousYear; }, 0)))) * Joove.Common.safeNumber(100));
                            return [2 /*return*/, TotalSalesPerEU];
                        });
                    });
                },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange]
            }),
            new Joove.JbRule({
                name: "PercentageTSPreviousPeriodAbroad",
                type: Joove.RuleTypes.CalculatedExpression,
                evaluatedAtServer: false,
                isDataSetRule: false,
                condition: function (_control) {
                    return __awaiter(this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            return [2 /*return*/, true];
                        });
                    });
                },
                expression: function (_parents) {
                    return __awaiter(this, void 0, void 0, function () {
                        var TotalSalesPerAbroad;
                        return __generator(this, function (_a) {
                            TotalSalesPerAbroad = 0;
                            TotalSalesPerAbroad = (Joove.Common.safeNumber((Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierTurnover.ActualPreviousYearAbroad; }, 0)) / Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierTurnover.ActualPreviousYear; }, 0)))) * Joove.Common.safeNumber(100));
                            return [2 /*return*/, TotalSalesPerAbroad];
                        });
                    });
                },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange]
            }),
            new Joove.JbRule({
                name: "TotalSalesPercentage",
                type: Joove.RuleTypes.CalculatedExpression,
                evaluatedAtServer: false,
                isDataSetRule: false,
                condition: function (_control) {
                    return __awaiter(this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            return [2 /*return*/, true];
                        });
                    });
                },
                expression: function (_parents) {
                    return __awaiter(this, void 0, void 0, function () {
                        var TotalSalesPer;
                        return __generator(this, function (_a) {
                            TotalSalesPer = 0;
                            TotalSalesPer = (Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierTurnover.PercentageD; }, 0)) + Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierTurnover.PercentageEU; }, 0)) + Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierTurnover.PercentageAbroad; }, 0)));
                            TotalSalesPer = Joove.Common.nullSafe(function () { return Math.round10(TotalSalesPer, 2); }, 0);
                            return [2 /*return*/, TotalSalesPer];
                        });
                    });
                },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnSubmit, Joove.EvaluationTimes.OnChange]
            }),
            new Joove.JbRule({
                name: "SumPlannedTurnoverNextYear",
                type: Joove.RuleTypes.CalculatedExpression,
                evaluatedAtServer: false,
                isDataSetRule: false,
                condition: function (_control) {
                    return __awaiter(this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            return [2 /*return*/, true];
                        });
                    });
                },
                expression: function (_parents) {
                    return __awaiter(this, void 0, void 0, function () {
                        var PlannedTurnNext;
                        return __generator(this, function (_a) {
                            if ((true)) {
                                PlannedTurnNext = 0;
                                PlannedTurnNext = (Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierTurnover.PlannedNextYearD; }, 0)) + Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierTurnover.PlannedNextYearEU; }, 0)) + Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierTurnover.PlannedNextYearAbroad; }, 0)));
                                return [2 /*return*/, PlannedTurnNext];
                            }
                            else {
                                return [2 /*return*/, null];
                            }
                            return [2 /*return*/];
                        });
                    });
                },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnChange]
            }),
            new Joove.JbRule({
                name: "SumPlannedTurnoverCurrentYear1",
                type: Joove.RuleTypes.CalculatedExpression,
                evaluatedAtServer: false,
                isDataSetRule: false,
                condition: function (_control) {
                    return __awaiter(this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            return [2 /*return*/, true];
                        });
                    });
                },
                expression: function (_parents) {
                    return __awaiter(this, void 0, void 0, function () {
                        var PlannedTurnCurrent;
                        return __generator(this, function (_a) {
                            if ((true)) {
                                PlannedTurnCurrent = 0;
                                PlannedTurnCurrent = (Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierTurnover.PlannedCurrentYearD; }, 0)) + Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierTurnover.PlannedCurrentYearEU; }, 0)) + Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierTurnover.PlannedCurrentYearAbroad; }, 0)));
                                return [2 /*return*/, PlannedTurnCurrent];
                            }
                            else {
                                return [2 /*return*/, null];
                            }
                            return [2 /*return*/];
                        });
                    });
                },
                evaluationTimes: [Joove.EvaluationTimes.OnLoad, Joove.EvaluationTimes.OnChange]
            }),
        ];
        // Manual Data for txtBusiness7
        window["dataFortxtBusiness7"] = [{
                _key: "Trading",
                _text: window._resourcesManager.getRadioButtonManualValueDisplay('BusinessSegment', '0', false, null),
                _default: false
            }, {
                _key: "Services",
                _text: window._resourcesManager.getRadioButtonManualValueDisplay('BusinessSegment', '1', false, null),
                _default: false
            }, {
                _key: "Other",
                _text: window._resourcesManager.getRadioButtonManualValueDisplay('BusinessSegment', '2', false, null),
                _default: false
            }];
        // Manual Data for OptionButton
        window["dataForOptionButton"] = [{
                _key: "Recurring",
                _text: window._resourcesManager.getRadioButtonManualValueDisplay('BusinessDataSet', '0', false, null),
                _default: false
            }, {
                _key: "Project-based",
                _text: window._resourcesManager.getRadioButtonManualValueDisplay('BusinessDataSet', '1', false, null),
                _default: false
            }, {
                _key: "Mixed",
                _text: window._resourcesManager.getRadioButtonManualValueDisplay('BusinessDataSet', '2', false, null),
                _default: false
            }];
        // Manual Data for OptionButton1
        window["dataForOptionButton1"] = [{
                _key: "B2B",
                _text: window._resourcesManager.getRadioButtonManualValueDisplay('DataSetEnvironment', '0', false, null),
                _default: false
            }, {
                _key: "B2C",
                _text: window._resourcesManager.getRadioButtonManualValueDisplay('DataSetEnvironment', '1', false, null),
                _default: false
            }];
        // Manual Data for OptionButton2
        window["dataForOptionButton2"] = [{
                _key: "Yes",
                _text: window._resourcesManager.getRadioButtonManualValueDisplay('YesNoDataSet', '0', false, null),
                _default: false
            }, {
                _key: "No",
                _text: window._resourcesManager.getRadioButtonManualValueDisplay('YesNoDataSet', '1', false, null),
                _default: false
            }];
        // Manual Data for OptionButton3
        window["dataForOptionButton3"] = [{
                _key: "Yes",
                _text: window._resourcesManager.getRadioButtonManualValueDisplay('YesNoDataSet', '0', false, null),
                _default: false
            }, {
                _key: "No",
                _text: window._resourcesManager.getRadioButtonManualValueDisplay('YesNoDataSet', '1', false, null),
                _default: false
            }];
        // Manual Data for OptionButton4
        window["dataForOptionButton4"] = [{
                _key: "Yes",
                _text: window._resourcesManager.getRadioButtonManualValueDisplay('YesNoDataSet', '0', false, null),
                _default: false
            }, {
                _key: "No",
                _text: window._resourcesManager.getRadioButtonManualValueDisplay('YesNoDataSet', '1', false, null),
                _default: false
            }];
        // Manual Data for OptionButton5
        window["dataForOptionButton5"] = [{
                _key: "Yes",
                _text: window._resourcesManager.getRadioButtonManualValueDisplay('YesNoDataSet', '0', false, null),
                _default: false
            }, {
                _key: "No",
                _text: window._resourcesManager.getRadioButtonManualValueDisplay('YesNoDataSet', '1', false, null),
                _default: false
            }];
        // Manual Data for txtApplicableCommercialLaw
        window["dataFortxtApplicableCommercialLaw"] = [{
                _key: "German",
                _text: window._resourcesManager.getComboBoxManualValueDisplay('ApplicableComLaw', '0', false, null),
                _default: false
            }, {
                _key: "Greek",
                _text: window._resourcesManager.getComboBoxManualValueDisplay('ApplicableComLaw', '1', false, null),
                _default: false
            }, {
                _key: "French",
                _text: window._resourcesManager.getComboBoxManualValueDisplay('ApplicableComLaw', '2', false, null),
                _default: false
            }];
        // Datasets Column Info
        Controllers.BusinessSegment_ColumnInfo = [new Joove.ColumnInfo("Value", "string", null, true)];
        window["BusinessSegment_ColumnInfo"] = Controllers.BusinessSegment_ColumnInfo;
        Controllers.BusinessDataSet_ColumnInfo = [new Joove.ColumnInfo("Value", "string", null, true)];
        window["BusinessDataSet_ColumnInfo"] = Controllers.BusinessDataSet_ColumnInfo;
        Controllers.DataSetEnvironment_ColumnInfo = [new Joove.ColumnInfo("Value", "string", null, true)];
        window["DataSetEnvironment_ColumnInfo"] = Controllers.DataSetEnvironment_ColumnInfo;
        Controllers.YesNoDataSet_ColumnInfo = [new Joove.ColumnInfo("Value", "string", null, true)];
        window["YesNoDataSet_ColumnInfo"] = Controllers.YesNoDataSet_ColumnInfo;
        Controllers.ApplicableComLaw_ColumnInfo = [new Joove.ColumnInfo("Value", "string", null, true)];
        window["ApplicableComLaw_ColumnInfo"] = Controllers.ApplicableComLaw_ColumnInfo;
        var SupplierFormController = (function () {
            function SupplierFormController($scope, $timeout) {
                this.$scope = $scope;
                this.controllerActionFinished = function (resetDirty) {
                    //window.scope_SupplierForm.model = window.scope_SupplierForm.dehydrate();
                    //window.scope_MasterPage.model = window.scope_SupplierForm.model;
                    DSS5_SupplyChainFinancialsOptimisation.ViewModels.SupplierForm.SupplierFormViewModel._lightCast(window.scope_SupplierForm.model);
                    // Joove.Common.applyScope(window.scope_SupplierForm);
                    if (resetDirty) {
                        window._context.isDirty = false;
                    }
                    window._ruleEngine.update(Joove.EvaluationTimes.OnChange);
                };
                window.scope_SupplierForm = $scope;
                $scope.$onControlChanged = function (event, newValue, dontMakeDirty) {
                    Joove.Core.onChange(event.target, newValue, dontMakeDirty);
                };
                $scope.dehydrate = function (context) {
                    if (context === void 0) { context = null; }
                    return DSS5_SupplyChainFinancialsOptimisation.ViewModels.SupplierForm.SupplierFormViewModel._initializeFrom($scope.model, context);
                };
                $scope._validationsMaster = window.scope_MasterPage._validations;
                $scope._validations = { summary: [],
                    DVFinancialStatements: { rule: SupplierFormDataValidations[0], group: SupplierFormDataValidations[0].group },
                    DVEconomicEvaluations: { rule: SupplierFormDataValidations[1], group: SupplierFormDataValidations[1].group },
                    DVBusinessPlans: { rule: SupplierFormDataValidations[2], group: SupplierFormDataValidations[2].group },
                    DVPriorOutstandingBalances: { rule: SupplierFormDataValidations[3], group: SupplierFormDataValidations[3].group },
                    DVOutstandingBalances: { rule: SupplierFormDataValidations[4], group: SupplierFormDataValidations[4].group },
                    DVCurrentSituations: { rule: SupplierFormDataValidations[5], group: SupplierFormDataValidations[5].group },
                    DVCurrentStatements: { rule: SupplierFormDataValidations[6], group: SupplierFormDataValidations[6].group },
                    DVCurrentCredits: { rule: SupplierFormDataValidations[7], group: SupplierFormDataValidations[7].group },
                    DVFactoringAgreements: { rule: SupplierFormDataValidations[8], group: SupplierFormDataValidations[8].group },
                    DVAgreements: { rule: SupplierFormDataValidations[9], group: SupplierFormDataValidations[9].group },
                    DVGeneralConstractuals: { rule: SupplierFormDataValidations[10], group: SupplierFormDataValidations[10].group },
                    DVOrganizationalCharts: { rule: SupplierFormDataValidations[11], group: SupplierFormDataValidations[11].group },
                    DVDeclarations: { rule: SupplierFormDataValidations[12], group: SupplierFormDataValidations[12].group },
                    DVInvoicesForms: { rule: SupplierFormDataValidations[13], group: SupplierFormDataValidations[13].group },
                    DVPriorOutstandingPolicyTerms: { rule: SupplierFormDataValidations[14], group: SupplierFormDataValidations[14].group },
                    DVOutstandingPolicyTerms: { rule: SupplierFormDataValidations[15], group: SupplierFormDataValidations[15].group }
                };
                this.init($scope, $timeout);
                $timeout(function () {
                    window._ruleEngine.update(Joove.EvaluationTimes.OnLoad, null, function () {
                        $("body").fadeIn(200);
                    });
                });
            }
            SupplierFormController.prototype.init = function ($scope, $timeout) {
                var _this = this;
                $scope.model = DSS5_SupplyChainFinancialsOptimisation.ViewModels.SupplierForm.SupplierFormViewModel._initializeFrom(window.viewDTO.Model);
                window.scope_MasterPage.model = $scope.model;
                new Joove.ReferencesReconstructor().reconstructReferences($scope.model);
                $scope.trackObject = function (obj) { return Joove.Common.trackObject(obj); };
                //}
                $.connection['eventsHub'].on('__connectedEvent');
                $.connection['eventsHub'].on('forcePageReload', function () {
                    window.onbeforeunload = null;
                    setTimeout(function () {
                        window.location.reload();
                    }, 3000);
                });
                $.connection.hub.start(function () {
                    Joove.Common.getScope().connectedToSignals();
                    Joove.Common.getMasterScope().connectedToSignals();
                });
                $scope.connectedToSignals = function () {
                };
                // Event Listeners
                $scope.events = {};
                $scope.expressions = {};
                // Dataset Handler
                $scope.datasets = {};
                // Controller actions
                $scope.actions = {
                    AddSupplier: function (_cb, _modalOptions, _e) { return __awaiter(_this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            Joove.Common.autocompleteFix();
                            Joove.Core.executeRedirectControllerAction("SupplierForm", "AddSupplier", "GET", [], {}, _modalOptions);
                            return [2 /*return*/];
                        });
                    }); },
                    EditSupplier: function (_cb, _modalOptions, _e) { return __awaiter(_this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            Joove.Common.autocompleteFix();
                            Joove.Core.executeRedirectControllerAction("SupplierForm", "EditSupplier", "GET", [], {}, _modalOptions);
                            return [2 /*return*/];
                        });
                    }); },
                    DeleteSupplier: function (_cb, _modalOptions, _e) { return __awaiter(_this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            Joove.Common.autocompleteFix();
                            window._context.isDirty = false;
                            Joove.Core.executeControllerActionNew({
                                verb: 'POST', controller: 'SupplierForm', action: 'DeleteSupplier',
                                queryData: [], postData: { 'model': $scope.model },
                                cb: _cb, modalOptions: _modalOptions, event: _e
                            });
                            return [2 /*return*/];
                        });
                    }); },
                    Save: function (_cb, _modalOptions, _e) { return __awaiter(_this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0:
                                    Joove.Common.autocompleteFix();
                                    return [4 /*yield*/, window._ruleEngine.update(Joove.EvaluationTimes.OnSubmit)];
                                case 1:
                                    _a.sent();
                                    window._context.isDirty = false;
                                    Joove.Core.executeControllerActionNew({
                                        verb: 'POST', controller: 'SupplierForm', action: 'Save',
                                        queryData: [], postData: { 'model': $scope.model },
                                        cb: _cb, modalOptions: _modalOptions, event: _e
                                    });
                                    return [2 /*return*/];
                            }
                        });
                    }); },
                    PassedEvaluation: function (_cb, _modalOptions, _e) { return __awaiter(_this, void 0, void 0, function () {
                        var _this = this;
                        var implementation, spamHelper;
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0:
                                    Joove.Common.autocompleteFix();
                                    implementation = function () { return __awaiter(_this, void 0, void 0, function () {
                                        var count;
                                        return __generator(this, function (_a) {
                                            window["scope_SupplierForm"].model.Passed = "Passed Evaluation Test";
                                            window["scope_SupplierForm"].model.Evaluation = true;
                                            window["scope_SupplierForm"].model.TestRunned = true;
                                            count = 0;
                                            if (CLMS.Framework.Number.GreaterThanOrEqual(function () { return window["scope_SupplierForm"].model.Supplier.SupplierTurnover.ActualPreviousYear; }, function () { return 500000; })) {
                                                window["scope_SupplierForm"].model.Evaluation1 = true;
                                                window["scope_SupplierForm"].model.Supplier.AnnualTurnover = true;
                                            }
                                            else {
                                                window["scope_SupplierForm"].model.Evaluation1 = false;
                                                window["scope_SupplierForm"].model.Supplier.AnnualTurnover = false;
                                            }
                                            if (Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.SupplierEvaluation.Environment; }, "") == "B2B") {
                                                window["scope_SupplierForm"].model.Evaluation2 = true;
                                                window["scope_SupplierForm"].model.Supplier.BEnvironment = true;
                                            }
                                            else {
                                                window["scope_SupplierForm"].model.Evaluation2 = false;
                                                window["scope_SupplierForm"].model.Supplier.BEnvironment = false;
                                            }
                                            if (CLMS.Framework.Number.LessThanOrEqual(function () { return window["scope_SupplierForm"].model.Supplier.SupplierEvaluation.ContractualPaymentTerms; }, function () { return 160; })) {
                                                window["scope_SupplierForm"].model.Evaluation3 = true;
                                                window["scope_SupplierForm"].model.Supplier.PTerms = true;
                                            }
                                            else {
                                                window["scope_SupplierForm"].model.Evaluation3 = false;
                                                window["scope_SupplierForm"].model.Supplier.PTerms = false;
                                            }
                                            if (CLMS.Framework.Number.GreaterThanOrEqual(function () { return window["scope_SupplierForm"].model.Supplier.SupplierEvaluation.Average; }, function () { return 30; }) && CLMS.Framework.Number.LessThanOrEqual(function () { return window["scope_SupplierForm"].model.Supplier.SupplierEvaluation.Average; }, function () { return 120; })) {
                                                window["scope_SupplierForm"].model.Evaluation4 = true;
                                                window["scope_SupplierForm"].model.Supplier.Average = true;
                                            }
                                            else {
                                                window["scope_SupplierForm"].model.Evaluation4 = false;
                                                window["scope_SupplierForm"].model.Supplier.Average = false;
                                            }
                                            if (CLMS.Framework.Number.GreaterThanOrEqual(function () { return window["scope_SupplierForm"].model.Supplier.SupplierEvaluation.AverageInvoiceValue; }, function () { return 300; })) {
                                                window["scope_SupplierForm"].model.Evaluation5 = true;
                                                window["scope_SupplierForm"].model.Supplier.InvoiceValue = true;
                                            }
                                            else {
                                                window["scope_SupplierForm"].model.Evaluation5 = false;
                                                window["scope_SupplierForm"].model.Supplier.InvoiceValue = false;
                                            }
                                            if (CLMS.Framework.Number.GreaterThanOrEqual(function () { return window["scope_SupplierForm"].model.Supplier.SupplierEvaluation.EquityRatio; }, function () { return 10; })) {
                                                window["scope_SupplierForm"].model.Evaluation6 = true;
                                                window["scope_SupplierForm"].model.Supplier.EqRatio = true;
                                            }
                                            else {
                                                window["scope_SupplierForm"].model.Evaluation6 = false;
                                                window["scope_SupplierForm"].model.Supplier.EqRatio = false;
                                            }
                                            window["scope_SupplierForm"].model.EvaluationCount = count;
                                            if (Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.AnnualTurnover; }, false)) {
                                                count = Joove.Common.safeNumber(count) + Joove.Common.safeNumber(1);
                                            }
                                            if (Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.BEnvironment; }, false)) {
                                                count = Joove.Common.safeNumber(count) + Joove.Common.safeNumber(1);
                                            }
                                            if (Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.PTerms; }, false)) {
                                                count = Joove.Common.safeNumber(count) + Joove.Common.safeNumber(1);
                                            }
                                            if (Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.Average; }, false)) {
                                                count = Joove.Common.safeNumber(count) + Joove.Common.safeNumber(1);
                                            }
                                            if (Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.InvoiceValue; }, false)) {
                                                count = Joove.Common.safeNumber(count) + Joove.Common.safeNumber(1);
                                            }
                                            if (Joove.Common.nullSafe(function () { return window["scope_SupplierForm"].model.Supplier.EqRatio; }, false)) {
                                                count = Joove.Common.safeNumber(count) + Joove.Common.safeNumber(1);
                                            }
                                            window["scope_SupplierForm"].model.Supplier.EvaluationCountResult = count;
                                            if (CLMS.Framework.Number.Equal(function () { return window["scope_SupplierForm"].model.Supplier.EvaluationCountResult; }, function () { return 6; })) {
                                                window["scope_SupplierForm"].model.Supplier.EvaluationResult = "Very High Performance";
                                            }
                                            else if (CLMS.Framework.Number.Equal(function () { return window["scope_SupplierForm"].model.Supplier.EvaluationCountResult; }, function () { return 5; })) {
                                                window["scope_SupplierForm"].model.Supplier.EvaluationResult = "High Performance";
                                            }
                                            else if (CLMS.Framework.Number.Equal(function () { return window["scope_SupplierForm"].model.Supplier.EvaluationCountResult; }, function () { return 4; })) {
                                                window["scope_SupplierForm"].model.Supplier.EvaluationResult = "Medium Performance";
                                            }
                                            else if (CLMS.Framework.Number.Equal(function () { return window["scope_SupplierForm"].model.Supplier.EvaluationCountResult; }, function () { return 3; })) {
                                                window["scope_SupplierForm"].model.Supplier.EvaluationResult = "Borderline Performance";
                                            }
                                            else if (CLMS.Framework.Number.Equal(function () { return window["scope_SupplierForm"].model.Supplier.EvaluationCountResult; }, function () { return 2; })) {
                                                window["scope_SupplierForm"].model.Supplier.EvaluationResult = "Low Performance";
                                            }
                                            else if (CLMS.Framework.Number.Equal(function () { return window["scope_SupplierForm"].model.Supplier.EvaluationCountResult; }, function () { return 1; })) {
                                                window["scope_SupplierForm"].model.Supplier.EvaluationResult = "Very Low Performance";
                                            }
                                            return [2 /*return*/];
                                        });
                                    }); };
                                    spamHelper = new Joove.SpamControlHelper(_e);
                                    spamHelper.Disable();
                                    return [4 /*yield*/, implementation()];
                                case 1:
                                    _a.sent();
                                    spamHelper.Enable();
                                    this.controllerActionFinished(true);
                                    return [2 /*return*/];
                            }
                        });
                    }); },
                    SaveGuestProfile: function (_cb, _modalOptions, _e) { return __awaiter(_this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0:
                                    Joove.Common.autocompleteFix();
                                    return [4 /*yield*/, window._ruleEngine.update(Joove.EvaluationTimes.OnSubmit)];
                                case 1:
                                    _a.sent();
                                    window._context.isDirty = false;
                                    Joove.Core.executeControllerActionNew({
                                        verb: 'POST', controller: 'SupplierForm', action: 'SaveGuestProfile',
                                        queryData: [], postData: { 'model': $scope.model },
                                        cb: _cb, modalOptions: _modalOptions, event: _e
                                    });
                                    return [2 /*return*/];
                            }
                        });
                    }); },
                    BuyRegistration: function (_cb, _modalOptions, _e) { return __awaiter(_this, void 0, void 0, function () {
                        var _this = this;
                        var implementation, spamHelper;
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0:
                                    Joove.Common.autocompleteFix();
                                    implementation = function () { return __awaiter(_this, void 0, void 0, function () {
                                        return __generator(this, function (_a) {
                                            Joove.Common.nullSafe(function () { return Joove.Core.executeRedirectControllerAction("PaymentForm", "AddPayment", "GET", [], {}, _modalOptions); }, null);
                                            return [2 /*return*/];
                                        });
                                    }); };
                                    spamHelper = new Joove.SpamControlHelper(_e);
                                    spamHelper.Disable();
                                    return [4 /*yield*/, implementation()];
                                case 1:
                                    _a.sent();
                                    spamHelper.Enable();
                                    this.controllerActionFinished(true);
                                    return [2 /*return*/];
                            }
                        });
                    }); },
                    PassedRerun: function (_cb, _modalOptions, _e) { return __awaiter(_this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            Joove.Common.autocompleteFix();
                            window._context.isDirty = false;
                            Joove.Core.executeControllerActionNew({
                                verb: 'POST', controller: 'SupplierForm', action: 'PassedRerun',
                                queryData: [], postData: { 'model': $scope.model },
                                cb: _cb, modalOptions: _modalOptions, event: _e
                            });
                            return [2 /*return*/];
                        });
                    }); },
                    EditSupplier_: function (username, _cb, _modalOptions, _e) { return __awaiter(_this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            Joove.Common.autocompleteFix();
                            Joove.Core.executeRedirectControllerAction("SupplierForm", "EditSupplier_", "GET", [username], {}, _modalOptions);
                            return [2 /*return*/];
                        });
                    }); },
                    RequestValidation: function (_cb, _modalOptions, _e) { return __awaiter(_this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0:
                                    Joove.Common.autocompleteFix();
                                    return [4 /*yield*/, window._ruleEngine.update(Joove.EvaluationTimes.OnSubmit)];
                                case 1:
                                    _a.sent();
                                    window._context.isDirty = false;
                                    Joove.Core.executeControllerActionNew({
                                        verb: 'POST', controller: 'SupplierForm', action: 'RequestValidation',
                                        queryData: [], postData: { 'model': $scope.model },
                                        cb: _cb, modalOptions: _modalOptions, event: _e
                                    });
                                    return [2 /*return*/];
                            }
                        });
                    }); },
                    InterestedToAgreement: function (_cb, _modalOptions, _e) { return __awaiter(_this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            Joove.Common.autocompleteFix();
                            window._context.isDirty = false;
                            Joove.Core.executeControllerActionNew({
                                verb: 'POST', controller: 'SupplierForm', action: 'InterestedToAgreement',
                                queryData: [], postData: { 'model': $scope.model },
                                cb: _cb, modalOptions: _modalOptions, event: _e
                            });
                            return [2 /*return*/];
                        });
                    }); },
                    ModalClose: function (_cb, _modalOptions, _e) { return __awaiter(_this, void 0, void 0, function () {
                        var _this = this;
                        var implementation, spamHelper;
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0:
                                    Joove.Common.autocompleteFix();
                                    implementation = function () { return __awaiter(_this, void 0, void 0, function () {
                                        return __generator(this, function (_a) {
                                            return [2 /*return*/];
                                        });
                                    }); };
                                    return [4 /*yield*/, window._ruleEngine.update(Joove.EvaluationTimes.OnSubmit)];
                                case 1:
                                    _a.sent();
                                    spamHelper = new Joove.SpamControlHelper(_e);
                                    spamHelper.Disable();
                                    return [4 /*yield*/, implementation()];
                                case 2:
                                    _a.sent();
                                    spamHelper.Enable();
                                    this.controllerActionFinished(true);
                                    return [2 /*return*/];
                            }
                        });
                    }); },
                    Step1To2: function (_cb, _modalOptions, _e) { return __awaiter(_this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0:
                                    Joove.Common.autocompleteFix();
                                    return [4 /*yield*/, window._ruleEngine.update(Joove.EvaluationTimes.OnSubmit)];
                                case 1:
                                    _a.sent();
                                    window._context.isDirty = false;
                                    Joove.Core.executeControllerActionNew({
                                        verb: 'POST', controller: 'SupplierForm', action: 'Step1To2',
                                        queryData: [], postData: { 'model': $scope.model },
                                        cb: _cb, modalOptions: _modalOptions, event: _e
                                    });
                                    return [2 /*return*/];
                            }
                        });
                    }); },
                    Step2To3: function (_cb, _modalOptions, _e) { return __awaiter(_this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0:
                                    Joove.Common.autocompleteFix();
                                    return [4 /*yield*/, window._ruleEngine.update(Joove.EvaluationTimes.OnSubmit)];
                                case 1:
                                    _a.sent();
                                    window._context.isDirty = false;
                                    Joove.Core.executeControllerActionNew({
                                        verb: 'POST', controller: 'SupplierForm', action: 'Step2To3',
                                        queryData: [], postData: { 'model': $scope.model },
                                        cb: _cb, modalOptions: _modalOptions, event: _e
                                    });
                                    return [2 /*return*/];
                            }
                        });
                    }); },
                    Step3To4: function (_cb, _modalOptions, _e) { return __awaiter(_this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0:
                                    Joove.Common.autocompleteFix();
                                    return [4 /*yield*/, window._ruleEngine.update(Joove.EvaluationTimes.OnSubmit)];
                                case 1:
                                    _a.sent();
                                    window._context.isDirty = false;
                                    Joove.Core.executeControllerActionNew({
                                        verb: 'POST', controller: 'SupplierForm', action: 'Step3To4',
                                        queryData: [], postData: { 'model': $scope.model },
                                        cb: _cb, modalOptions: _modalOptions, event: _e
                                    });
                                    return [2 /*return*/];
                            }
                        });
                    }); },
                    Step4To5: function (_cb, _modalOptions, _e) { return __awaiter(_this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0:
                                    Joove.Common.autocompleteFix();
                                    return [4 /*yield*/, window._ruleEngine.update(Joove.EvaluationTimes.OnSubmit)];
                                case 1:
                                    _a.sent();
                                    window._context.isDirty = false;
                                    Joove.Core.executeControllerActionNew({
                                        verb: 'POST', controller: 'SupplierForm', action: 'Step4To5',
                                        queryData: [], postData: { 'model': $scope.model },
                                        cb: _cb, modalOptions: _modalOptions, event: _e
                                    });
                                    return [2 /*return*/];
                            }
                        });
                    }); },
                    Step3To2: function (_cb, _modalOptions, _e) { return __awaiter(_this, void 0, void 0, function () {
                        var _this = this;
                        var implementation, spamHelper;
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0:
                                    Joove.Common.autocompleteFix();
                                    implementation = function () { return __awaiter(_this, void 0, void 0, function () {
                                        return __generator(this, function (_a) {
                                            window["scope_SupplierForm"].model.Step1To2 = true;
                                            window["scope_SupplierForm"].model.Step2To3 = false;
                                            return [2 /*return*/];
                                        });
                                    }); };
                                    return [4 /*yield*/, window._ruleEngine.update(Joove.EvaluationTimes.OnSubmit)];
                                case 1:
                                    _a.sent();
                                    spamHelper = new Joove.SpamControlHelper(_e);
                                    spamHelper.Disable();
                                    return [4 /*yield*/, implementation()];
                                case 2:
                                    _a.sent();
                                    spamHelper.Enable();
                                    this.controllerActionFinished(true);
                                    return [2 /*return*/];
                            }
                        });
                    }); },
                    Step2To1: function (_cb, _modalOptions, _e) { return __awaiter(_this, void 0, void 0, function () {
                        var _this = this;
                        var implementation, spamHelper;
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0:
                                    Joove.Common.autocompleteFix();
                                    implementation = function () { return __awaiter(_this, void 0, void 0, function () {
                                        return __generator(this, function (_a) {
                                            window["scope_SupplierForm"].model.Step1To2 = false;
                                            window["scope_SupplierForm"].model.Step1 = true;
                                            return [2 /*return*/];
                                        });
                                    }); };
                                    spamHelper = new Joove.SpamControlHelper(_e);
                                    spamHelper.Disable();
                                    return [4 /*yield*/, implementation()];
                                case 1:
                                    _a.sent();
                                    spamHelper.Enable();
                                    this.controllerActionFinished(true);
                                    return [2 /*return*/];
                            }
                        });
                    }); },
                    Step4To3: function (_cb, _modalOptions, _e) { return __awaiter(_this, void 0, void 0, function () {
                        var _this = this;
                        var implementation, spamHelper;
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0:
                                    Joove.Common.autocompleteFix();
                                    implementation = function () { return __awaiter(_this, void 0, void 0, function () {
                                        return __generator(this, function (_a) {
                                            window["scope_SupplierForm"].model.Step2To3 = true;
                                            window["scope_SupplierForm"].model.Step3To4 = false;
                                            return [2 /*return*/];
                                        });
                                    }); };
                                    spamHelper = new Joove.SpamControlHelper(_e);
                                    spamHelper.Disable();
                                    return [4 /*yield*/, implementation()];
                                case 1:
                                    _a.sent();
                                    spamHelper.Enable();
                                    this.controllerActionFinished(true);
                                    return [2 /*return*/];
                            }
                        });
                    }); },
                    Step5To4: function (_cb, _modalOptions, _e) { return __awaiter(_this, void 0, void 0, function () {
                        var _this = this;
                        var implementation, spamHelper;
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0:
                                    Joove.Common.autocompleteFix();
                                    implementation = function () { return __awaiter(_this, void 0, void 0, function () {
                                        return __generator(this, function (_a) {
                                            window["scope_SupplierForm"].model.Step3To4 = true;
                                            window["scope_SupplierForm"].model.Step4To5 = false;
                                            return [2 /*return*/];
                                        });
                                    }); };
                                    spamHelper = new Joove.SpamControlHelper(_e);
                                    spamHelper.Disable();
                                    return [4 /*yield*/, implementation()];
                                case 1:
                                    _a.sent();
                                    spamHelper.Enable();
                                    this.controllerActionFinished(true);
                                    return [2 /*return*/];
                            }
                        });
                    }); }
                };
                // Events
                $scope.eventCallbacks = {
                    Button1to2Clicked: function (e, DataItem, _parents) {
                        window._recorder.addState(e);
                        if (e != null) {
                            e.stopPropagation();
                            e.preventDefault();
                        }
                        if (_this.timeoutDelayLockButton1to2Clicked != null) {
                            $timeout.cancel(_this.timeoutDelayLockButton1to2Clicked);
                        }
                        _this.timeoutDelayLockButton1to2Clicked = $timeout(function () {
                            Joove.Common.setControlKeyPressed(e, 0);
                            Joove.Common.setLastClickedElement(e);
                            Joove.Validation.Manager.validateFormAndExecute(function () {
                                $scope.actions.Step1To2(null, null, e);
                            }, { groups: [Joove.Validation.Constants.ALL_GROUPS], withDataValidationsCheck: true, withRequiredFieldsCheck: true });
                        }, 0);
                    },
                    Button2to31Clicked: function (e, DataItem, _parents) {
                        window._recorder.addState(e);
                        if (e != null) {
                            e.stopPropagation();
                            e.preventDefault();
                        }
                        if (_this.timeoutDelayLockButton2to31Clicked != null) {
                            $timeout.cancel(_this.timeoutDelayLockButton2to31Clicked);
                        }
                        _this.timeoutDelayLockButton2to31Clicked = $timeout(function () {
                            Joove.Common.setControlKeyPressed(e, 0);
                            Joove.Common.setLastClickedElement(e);
                            Joove.Validation.Manager.validateFormAndExecute(function () {
                                $scope.actions.Step2To1(null, null, e);
                            }, { groups: [Joove.Validation.Constants.ALL_GROUPS], withDataValidationsCheck: false, withRequiredFieldsCheck: false });
                        }, 0);
                    },
                    Button2to3Clicked: function (e, DataItem, _parents) {
                        window._recorder.addState(e);
                        if (e != null) {
                            e.stopPropagation();
                            e.preventDefault();
                        }
                        if (_this.timeoutDelayLockButton2to3Clicked != null) {
                            $timeout.cancel(_this.timeoutDelayLockButton2to3Clicked);
                        }
                        _this.timeoutDelayLockButton2to3Clicked = $timeout(function () {
                            Joove.Common.setControlKeyPressed(e, 0);
                            Joove.Common.setLastClickedElement(e);
                            Joove.Validation.Manager.validateFormAndExecute(function () {
                                $scope.actions.Step2To3(null, null, e);
                            }, { groups: [Joove.Validation.Constants.ALL_GROUPS], withDataValidationsCheck: true, withRequiredFieldsCheck: true });
                        }, 0);
                    },
                    Button2Clicked: function (e, DataItem, _parents) {
                        window._recorder.addState(e);
                        if (e != null) {
                            e.stopPropagation();
                            e.preventDefault();
                        }
                        if (_this.timeoutDelayLockButton2Clicked != null) {
                            $timeout.cancel(_this.timeoutDelayLockButton2Clicked);
                        }
                        _this.timeoutDelayLockButton2Clicked = $timeout(function () {
                            Joove.Common.setControlKeyPressed(e, 0);
                            Joove.Common.setLastClickedElement(e);
                            Joove.Validation.Manager.validateFormAndExecute(function () {
                                //This is true only when the menu item is clicked programmatically
                                //and occurs when the middle mouse button click is triggered
                                var openInNewWindow = $(e.target).data("openInNewWindow") === true || undefined;
                                if (openInNewWindow)
                                    $(e.target).data("openInNewWindow", undefined);
                                Joove.Core.executeRedirectControllerAction("SupplierPolicyTerms", "Render", "GET", [], {}, { mode: 'PopUp', width: '80%', height: '80%', onClose: function () { $scope.actions.ModalClose(); } });
                            }, { groups: [], withDataValidationsCheck: false, withRequiredFieldsCheck: false });
                        }, 0);
                    },
                    Button2to311Clicked: function (e, DataItem, _parents) {
                        window._recorder.addState(e);
                        if (e != null) {
                            e.stopPropagation();
                            e.preventDefault();
                        }
                        if (_this.timeoutDelayLockButton2to311Clicked != null) {
                            $timeout.cancel(_this.timeoutDelayLockButton2to311Clicked);
                        }
                        _this.timeoutDelayLockButton2to311Clicked = $timeout(function () {
                            Joove.Common.setControlKeyPressed(e, 0);
                            Joove.Common.setLastClickedElement(e);
                            Joove.Validation.Manager.validateFormAndExecute(function () {
                                $scope.actions.Step3To2(null, null, e);
                            }, { groups: [Joove.Validation.Constants.ALL_GROUPS], withDataValidationsCheck: true, withRequiredFieldsCheck: true });
                        }, 0);
                    },
                    Button3to4Clicked: function (e, DataItem, _parents) {
                        window._recorder.addState(e);
                        if (e != null) {
                            e.stopPropagation();
                            e.preventDefault();
                        }
                        if (_this.timeoutDelayLockButton3to4Clicked != null) {
                            $timeout.cancel(_this.timeoutDelayLockButton3to4Clicked);
                        }
                        _this.timeoutDelayLockButton3to4Clicked = $timeout(function () {
                            Joove.Common.setControlKeyPressed(e, 0);
                            Joove.Common.setLastClickedElement(e);
                            Joove.Validation.Manager.validateFormAndExecute(function () {
                                $scope.actions.Step3To4(null, null, e);
                            }, { groups: [Joove.Validation.Constants.ALL_GROUPS], withDataValidationsCheck: true, withRequiredFieldsCheck: true });
                        }, 0);
                    },
                    ButtonEvaluationClicked: function (e, DataItem, _parents) {
                        window._recorder.addState(e);
                        if (e != null) {
                            e.stopPropagation();
                            e.preventDefault();
                        }
                        if (_this.timeoutDelayLockButtonEvaluationClicked != null) {
                            $timeout.cancel(_this.timeoutDelayLockButtonEvaluationClicked);
                        }
                        _this.timeoutDelayLockButtonEvaluationClicked = $timeout(function () {
                            Joove.Common.setControlKeyPressed(e, 0);
                            Joove.Common.setLastClickedElement(e);
                            Joove.Validation.Manager.validateFormAndExecute(function () {
                                $scope.actions.PassedEvaluation(null, null, e);
                            }, { groups: [Joove.Validation.Constants.ALL_GROUPS], withDataValidationsCheck: false, withRequiredFieldsCheck: false });
                        }, 0);
                    },
                    Button2to3111Clicked: function (e, DataItem, _parents) {
                        window._recorder.addState(e);
                        if (e != null) {
                            e.stopPropagation();
                            e.preventDefault();
                        }
                        if (_this.timeoutDelayLockButton2to3111Clicked != null) {
                            $timeout.cancel(_this.timeoutDelayLockButton2to3111Clicked);
                        }
                        _this.timeoutDelayLockButton2to3111Clicked = $timeout(function () {
                            Joove.Common.setControlKeyPressed(e, 0);
                            Joove.Common.setLastClickedElement(e);
                            Joove.Validation.Manager.validateFormAndExecute(function () {
                                $scope.actions.Step4To3(null, null, e);
                            }, { groups: [Joove.Validation.Constants.ALL_GROUPS], withDataValidationsCheck: false, withRequiredFieldsCheck: false });
                        }, 0);
                    },
                    Button4to5Clicked: function (e, DataItem, _parents) {
                        window._recorder.addState(e);
                        if (e != null) {
                            e.stopPropagation();
                            e.preventDefault();
                        }
                        if (_this.timeoutDelayLockButton4to5Clicked != null) {
                            $timeout.cancel(_this.timeoutDelayLockButton4to5Clicked);
                        }
                        _this.timeoutDelayLockButton4to5Clicked = $timeout(function () {
                            Joove.Common.setControlKeyPressed(e, 0);
                            Joove.Common.setLastClickedElement(e);
                            Joove.Validation.Manager.validateFormAndExecute(function () {
                                $scope.actions.Step4To5(null, null, e);
                            }, { groups: [Joove.Validation.Constants.ALL_GROUPS], withDataValidationsCheck: true, withRequiredFieldsCheck: true });
                        }, 0);
                    },
                    ButtonClicked: function (e, DataItem, _parents) {
                        window._recorder.addState(e);
                        if (e != null) {
                            e.stopPropagation();
                            e.preventDefault();
                        }
                        if (_this.timeoutDelayLockButtonClicked != null) {
                            $timeout.cancel(_this.timeoutDelayLockButtonClicked);
                        }
                        _this.timeoutDelayLockButtonClicked = $timeout(function () {
                            Joove.Common.setControlKeyPressed(e, 0);
                            Joove.Common.setLastClickedElement(e);
                            Joove.Validation.Manager.validateFormAndExecute(function () {
                                $scope.actions.PassedRerun(null, null, e);
                            }, { groups: [Joove.Validation.Constants.ALL_GROUPS], withDataValidationsCheck: false, withRequiredFieldsCheck: false });
                        }, 0);
                    },
                    Button2to31111Clicked: function (e, DataItem, _parents) {
                        window._recorder.addState(e);
                        if (e != null) {
                            e.stopPropagation();
                            e.preventDefault();
                        }
                        if (_this.timeoutDelayLockButton2to31111Clicked != null) {
                            $timeout.cancel(_this.timeoutDelayLockButton2to31111Clicked);
                        }
                        _this.timeoutDelayLockButton2to31111Clicked = $timeout(function () {
                            Joove.Common.setControlKeyPressed(e, 0);
                            Joove.Common.setLastClickedElement(e);
                            Joove.Validation.Manager.validateFormAndExecute(function () {
                                $scope.actions.Step5To4(null, null, e);
                            }, { groups: [Joove.Validation.Constants.ALL_GROUPS], withDataValidationsCheck: false, withRequiredFieldsCheck: false });
                        }, 0);
                    },
                    ButtonFinishClicked: function (e, DataItem, _parents) {
                        window._recorder.addState(e);
                        if (e != null) {
                            e.stopPropagation();
                            e.preventDefault();
                        }
                        if (_this.timeoutDelayLockButtonFinishClicked != null) {
                            $timeout.cancel(_this.timeoutDelayLockButtonFinishClicked);
                        }
                        _this.timeoutDelayLockButtonFinishClicked = $timeout(function () {
                            Joove.Common.setControlKeyPressed(e, 0);
                            Joove.Common.setLastClickedElement(e);
                            Joove.Validation.Manager.validateFormAndExecute(function () {
                                $scope.actions.Save(null, null, e);
                            }, { groups: [Joove.Validation.Constants.ALL_GROUPS], withDataValidationsCheck: true, withRequiredFieldsCheck: true });
                        }, 0);
                    },
                    ButtonSaveGuestClicked: function (e, DataItem, _parents) {
                        window._recorder.addState(e);
                        if (e != null) {
                            e.stopPropagation();
                            e.preventDefault();
                        }
                        if (_this.timeoutDelayLockButtonSaveGuestClicked != null) {
                            $timeout.cancel(_this.timeoutDelayLockButtonSaveGuestClicked);
                        }
                        _this.timeoutDelayLockButtonSaveGuestClicked = $timeout(function () {
                            Joove.Common.setControlKeyPressed(e, 0);
                            Joove.Common.setLastClickedElement(e);
                            Joove.Validation.Manager.validateFormAndExecute(function () {
                                $scope.actions.SaveGuestProfile(null, null, e);
                            }, { groups: [Joove.Validation.Constants.ALL_GROUPS], withDataValidationsCheck: true, withRequiredFieldsCheck: true });
                        }, 0);
                    },
                    ButtonRegistrationClicked: function (e, DataItem, _parents) {
                        window._recorder.addState(e);
                        if (e != null) {
                            e.stopPropagation();
                            e.preventDefault();
                        }
                        if (_this.timeoutDelayLockButtonRegistrationClicked != null) {
                            $timeout.cancel(_this.timeoutDelayLockButtonRegistrationClicked);
                        }
                        _this.timeoutDelayLockButtonRegistrationClicked = $timeout(function () {
                            Joove.Common.setControlKeyPressed(e, 0);
                            Joove.Common.setLastClickedElement(e);
                            Joove.Validation.Manager.validateFormAndExecute(function () {
                                //This is true only when the menu item is clicked programmatically
                                //and occurs when the middle mouse button click is triggered
                                var openInNewWindow = $(e.target).data("openInNewWindow") === true || undefined;
                                if (openInNewWindow)
                                    $(e.target).data("openInNewWindow", undefined);
                                Joove.Core.executeRedirectControllerAction("PaymentForm", "AddPayment", "GET", [], null, null, openInNewWindow);
                            }, { groups: [], withDataValidationsCheck: false, withRequiredFieldsCheck: false });
                        }, 0);
                    },
                    Button1Clicked: function (e, DataItem, _parents) {
                        window._recorder.addState(e);
                        if (e != null) {
                            e.stopPropagation();
                            e.preventDefault();
                        }
                        if (_this.timeoutDelayLockButton1Clicked != null) {
                            $timeout.cancel(_this.timeoutDelayLockButton1Clicked);
                        }
                        _this.timeoutDelayLockButton1Clicked = $timeout(function () {
                            Joove.Common.setControlKeyPressed(e, 0);
                            Joove.Common.setLastClickedElement(e);
                            window._popUpManager.question(window._resourcesManager.getGlobalResource("RES_WEBFORM_GenericConfirmationQuestion"), window._resourcesManager.getEventConfirmation("Button1", false), function (isConfirm) {
                                if (!isConfirm)
                                    return;
                                setTimeout(function () {
                                    Joove.Validation.Manager.validateFormAndExecute(function () {
                                        $scope.actions.InterestedToAgreement(null, null, e);
                                    }, { groups: [Joove.Validation.Constants.ALL_GROUPS], withDataValidationsCheck: false, withRequiredFieldsCheck: false });
                                }, 1000);
                            });
                        }, 0);
                    },
                    ButtonRequestValidationClicked: function (e, DataItem, _parents) {
                        window._recorder.addState(e);
                        if (e != null) {
                            e.stopPropagation();
                            e.preventDefault();
                        }
                        if (_this.timeoutDelayLockButtonRequestValidationClicked != null) {
                            $timeout.cancel(_this.timeoutDelayLockButtonRequestValidationClicked);
                        }
                        _this.timeoutDelayLockButtonRequestValidationClicked = $timeout(function () {
                            Joove.Common.setControlKeyPressed(e, 0);
                            Joove.Common.setLastClickedElement(e);
                            Joove.Validation.Manager.validateFormAndExecute(function () {
                                $scope.actions.RequestValidation(null, null, e);
                            }, { groups: [Joove.Validation.Constants.ALL_GROUPS], withDataValidationsCheck: true, withRequiredFieldsCheck: true });
                        }, 0);
                    },
                    cmdDeleteReceivableSellerClicked: function (e, DataItem, _parents) {
                        window._recorder.addState(e);
                        if (e != null) {
                            e.stopPropagation();
                            e.preventDefault();
                        }
                        if (_this.timeoutDelayLockcmdDeleteReceivableSellerClicked != null) {
                            $timeout.cancel(_this.timeoutDelayLockcmdDeleteReceivableSellerClicked);
                        }
                        _this.timeoutDelayLockcmdDeleteReceivableSellerClicked = $timeout(function () {
                            Joove.Common.setControlKeyPressed(e, 0);
                            Joove.Common.setLastClickedElement(e);
                            window._popUpManager.question(window._resourcesManager.getGlobalResource("RES_WEBFORM_GenericConfirmationQuestion"), window._resourcesManager.getEventConfirmation("cmdDeleteReceivableSeller", false), function (isConfirm) {
                                if (!isConfirm)
                                    return;
                                setTimeout(function () {
                                    Joove.Validation.Manager.validateFormAndExecute(function () {
                                        $scope.actions.DeleteSupplier(null, null, e);
                                    }, { groups: [Joove.Validation.Constants.ALL_GROUPS], withDataValidationsCheck: false, withRequiredFieldsCheck: false });
                                }, 1000);
                            });
                        }, 0);
                    }
                };
                // Rules
                window._ruleEngine.addDataValidations(SupplierFormDataValidations);
                window._ruleEngine.addConditionalFormattings(SupplierFormConditionalFormattings);
                window._ruleEngine.addCalculatedExpressions(SupplierFormCalculatedExpressions);
                window._commander.executeCommands(window.viewDTO.ClientCommands);
                window.viewDTO.ClientCommands = [];
                Joove.Common.setNumberLocalizationSettings();
                Joove.DeveloperApi.init($scope, window.scope_MasterPage);
                window.$formExtend && window.$formExtend();
                window.$onFormLoaded && window.$onFormLoaded();
            };
            return SupplierFormController;
        }());
        angular.module("Application").controller("SupplierFormController", ["$scope", "$timeout", SupplierFormController]);
    })(Controllers = DSS5_SupplyChainFinancialsOptimisation.Controllers || (DSS5_SupplyChainFinancialsOptimisation.Controllers = {}));
})(DSS5_SupplyChainFinancialsOptimisation || (DSS5_SupplyChainFinancialsOptimisation = {}));
