// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).
using System;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Linq;
using DSS5_SupplyChainFinancialsOptimisation.BO;
using DSS5_SupplyChainFinancialsOptimisation.UI.Controllers.SlideIntermidiary;
using AppCode;
using zAppDev.DotNet.Framework.Data;
using zAppDev.DotNet.Framework.Utilities;
using zAppDev.DotNet.Framework.Data.Domain;
using zAppDev.DotNet.Framework.Mvc;
using System.ComponentModel.DataAnnotations;
using DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.MasterPageForSlide;
using DSS5_SupplyChainFinancialsOptimisation.UI.Controllers.MasterPageForSlide;
namespace DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.SlideIntermidiary
{
    public class SlideIntermidiaryViewModel : MasterPageForSlideViewModel
    {
        public string ChosenIntermediaryType;
        public string Description;
        public string EMail;
        public string Company;
        public List<SelectedItemInfo<string>> DropdownBoxSelectedItems;


        public SlideIntermidiaryViewModel()
        {
        }


        public override void Evict()
        {
            var manager = MiniSessionManager.Instance;
        }

    }


    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.SlideIntermidiary.SlideIntermidiaryViewModel))]
    public class SlideIntermidiaryViewModelDTO : MasterPageForSlideViewModelDTO, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.SlideIntermidiary.SlideIntermidiaryViewModel>
    {

        [JsonConstructor]
        public SlideIntermidiaryViewModelDTO() { }
        public SlideIntermidiaryViewModelDTO(DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.SlideIntermidiary.SlideIntermidiaryViewModel original, bool parentIsDirty = false)  : base(original)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            ChosenIntermediaryType = original.ChosenIntermediaryType;
            Description = original.Description;
            EMail = original.EMail;
            Company = original.Company;
            DropdownBoxSelectedItemKeys = original.DropdownBoxSelectedItems == null
                                          ? null
                                          : original.DropdownBoxSelectedItems.Select(x => new SelectedItemInfo<string>(x.SelectedItems.Select(y => y).ToList(), x.Indexes, x.FullRecordsetSelected)).ToList();
        }
        public string ChosenIntermediaryType;
        public string Description;
        public string EMail;
        public string Company;
        public new string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.SlideIntermidiary.SlideIntermidiaryViewModel).FullName;
        public List<SelectedItemInfo<string>> DropdownBoxSelectedItemKeys;

        public new DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.SlideIntermidiary.SlideIntermidiaryViewModel GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.SlideIntermidiary.SlideIntermidiaryViewModel>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            return new DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.SlideIntermidiary.SlideIntermidiaryViewModel();
        }
        new  public DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.SlideIntermidiary.SlideIntermidiaryViewModel Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.SlideIntermidiary.SlideIntermidiaryViewModel();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.SlideIntermidiary.SlideIntermidiaryViewModel original)
        {
            if (original == null) return;
            base.Hydrate(original);
            original.ChosenIntermediaryType = ChosenIntermediaryType;
            original.Description = Description;
            original.EMail = EMail;
            original.Company = Company;
            original.DropdownBoxSelectedItems = DropdownBoxSelectedItemKeys == null
                                                ? new List<SelectedItemInfo<string>>()
                                                : DropdownBoxSelectedItemKeys.Select(x => new SelectedItemInfo<string>(x.SelectedItems.Select(y => y).ToList(), x.Indexes, x.FullRecordsetSelected)).ToList();
        }
    }


    #region Datasource DTOs

    #endregion

}
