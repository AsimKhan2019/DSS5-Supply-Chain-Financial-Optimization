// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).
using System;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Linq;
using DSS5_SupplyChainFinancialsOptimisation.BO;
using DSS5_SupplyChainFinancialsOptimisation.UI.Controllers.SupplierForm;
using AppCode;
using zAppDev.DotNet.Framework.Data;
using zAppDev.DotNet.Framework.Utilities;
using zAppDev.DotNet.Framework.Data.Domain;
using zAppDev.DotNet.Framework.Mvc;
using System.ComponentModel.DataAnnotations;
using DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.MasterPage;
using DSS5_SupplyChainFinancialsOptimisation.UI.Controllers.MasterPage;
namespace DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.SupplierForm
{
    public class SupplierFormViewModel : MasterPageViewModel
    {
        public DSS5_SupplyChainFinancialsOptimisation.BO.Supplier Supplier;
        public bool Evaluation;
        public string Passed;
        public bool TestRunned;
        public bool Rerun;
        public bool PolicyTerms;
        public string Link;
        public bool Evaluation1;
        public bool Evaluation2;
        public bool Evaluation3;
        public bool Evaluation4;
        public bool Evaluation5;
        public bool Evaluation6;
        public int? EvaluationCount;
        public bool SupplierReceivables;
        public bool IsSupplier;
        public List<DSS5_SupplyChainFinancialsOptimisation.BO.Agreement> Agreements;
        public DSS5_SupplyChainFinancialsOptimisation.BO.Investor Investor;
        public bool Step1To2;
        public bool Step1;
        public bool Step2To3;
        public bool Step3To4;
        public bool Step4To5;
        public bool FinishButton;
        public bool GuestFinish;
        public List<SelectedItemInfo<string>> txtBusiness7SelectedItems;
        public List<SelectedItemInfo<string>> OptionButtonSelectedItems;
        public List<SelectedItemInfo<string>> OptionButton1SelectedItems;
        public List<SelectedItemInfo<string>> OptionButton2SelectedItems;
        public List<SelectedItemInfo<string>> OptionButton3SelectedItems;
        public List<SelectedItemInfo<string>> OptionButton4SelectedItems;
        public List<SelectedItemInfo<string>> OptionButton5SelectedItems;
        public List<SelectedItemInfo<string>> txtApplicableCommercialLawSelectedItems;


        public SupplierFormViewModel()
        {
            Supplier = new DSS5_SupplyChainFinancialsOptimisation.BO.Supplier();
            Agreements = new List<DSS5_SupplyChainFinancialsOptimisation.BO.Agreement>();
            Investor = new DSS5_SupplyChainFinancialsOptimisation.BO.Investor();
        }


        public override void Evict()
        {
            var manager = MiniSessionManager.Instance;
            if (manager.Session.Contains(Supplier))
            {
                manager.Session.Evict(Supplier);
            }
            if (Agreements != null)
            {
                foreach (var item in Agreements)
                {
                    if (manager.Session.Contains(item))
                    {
                        manager.Session.Evict(item);
                    }
                }
            }
            if (manager.Session.Contains(Investor))
            {
                manager.Session.Evict(Investor);
            }
        }

    }


    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.SupplierForm.SupplierFormViewModel))]
    public class SupplierFormViewModelDTO : MasterPageViewModelDTO, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.SupplierForm.SupplierFormViewModel>
    {

        [JsonConstructor]
        public SupplierFormViewModelDTO() { }
        public SupplierFormViewModelDTO(DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.SupplierForm.SupplierFormViewModel original, bool parentIsDirty = false)  : base(original)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            Supplier = original.Supplier == null ? null : new Supplier_SupplierDTO(original.Supplier);
            Evaluation = original.Evaluation;
            Passed = original.Passed;
            TestRunned = original.TestRunned;
            Rerun = original.Rerun;
            PolicyTerms = original.PolicyTerms;
            Link = original.Link;
            Evaluation1 = original.Evaluation1;
            Evaluation2 = original.Evaluation2;
            Evaluation3 = original.Evaluation3;
            Evaluation4 = original.Evaluation4;
            Evaluation5 = original.Evaluation5;
            Evaluation6 = original.Evaluation6;
            EvaluationCount = original.EvaluationCount;
            SupplierReceivables = original.SupplierReceivables;
            IsSupplier = original.IsSupplier;
            Agreements = original.Agreements?.Select(x => new Agreements_AgreementDTO(x)).ToList();
            Investor = original.Investor == null ? null : new Investor_InvestorDTO(original.Investor);
            Step1To2 = original.Step1To2;
            Step1 = original.Step1;
            Step2To3 = original.Step2To3;
            Step3To4 = original.Step3To4;
            Step4To5 = original.Step4To5;
            FinishButton = original.FinishButton;
            GuestFinish = original.GuestFinish;
            txtBusiness7SelectedItemKeys = original.txtBusiness7SelectedItems == null
                                           ? null
                                           : original.txtBusiness7SelectedItems.Select(x => new SelectedItemInfo<string>(x.SelectedItems.Select(y => y).ToList(), x.Indexes, x.FullRecordsetSelected)).ToList();
            OptionButtonSelectedItemKeys = original.OptionButtonSelectedItems == null
                                           ? null
                                           : original.OptionButtonSelectedItems.Select(x => new SelectedItemInfo<string>(x.SelectedItems.Select(y => y).ToList(), x.Indexes, x.FullRecordsetSelected)).ToList();
            OptionButton1SelectedItemKeys = original.OptionButton1SelectedItems == null
                                            ? null
                                            : original.OptionButton1SelectedItems.Select(x => new SelectedItemInfo<string>(x.SelectedItems.Select(y => y).ToList(), x.Indexes, x.FullRecordsetSelected)).ToList();
            OptionButton2SelectedItemKeys = original.OptionButton2SelectedItems == null
                                            ? null
                                            : original.OptionButton2SelectedItems.Select(x => new SelectedItemInfo<string>(x.SelectedItems.Select(y => y).ToList(), x.Indexes, x.FullRecordsetSelected)).ToList();
            OptionButton3SelectedItemKeys = original.OptionButton3SelectedItems == null
                                            ? null
                                            : original.OptionButton3SelectedItems.Select(x => new SelectedItemInfo<string>(x.SelectedItems.Select(y => y).ToList(), x.Indexes, x.FullRecordsetSelected)).ToList();
            OptionButton4SelectedItemKeys = original.OptionButton4SelectedItems == null
                                            ? null
                                            : original.OptionButton4SelectedItems.Select(x => new SelectedItemInfo<string>(x.SelectedItems.Select(y => y).ToList(), x.Indexes, x.FullRecordsetSelected)).ToList();
            OptionButton5SelectedItemKeys = original.OptionButton5SelectedItems == null
                                            ? null
                                            : original.OptionButton5SelectedItems.Select(x => new SelectedItemInfo<string>(x.SelectedItems.Select(y => y).ToList(), x.Indexes, x.FullRecordsetSelected)).ToList();
            txtApplicableCommercialLawSelectedItemKeys = original.txtApplicableCommercialLawSelectedItems == null
                    ? null
                    : original.txtApplicableCommercialLawSelectedItems.Select(x => new SelectedItemInfo<string>(x.SelectedItems.Select(y => y).ToList(), x.Indexes, x.FullRecordsetSelected)).ToList();
        }
        public Supplier_SupplierDTO Supplier;
        public bool Evaluation;
        public string Passed;
        public bool TestRunned;
        public bool Rerun;
        public bool PolicyTerms;
        public string Link;
        public bool Evaluation1;
        public bool Evaluation2;
        public bool Evaluation3;
        public bool Evaluation4;
        public bool Evaluation5;
        public bool Evaluation6;
        public int? EvaluationCount;
        public bool SupplierReceivables;
        public bool IsSupplier;
        public List<Agreements_AgreementDTO> Agreements;
        public Investor_InvestorDTO Investor;
        public bool Step1To2;
        public bool Step1;
        public bool Step2To3;
        public bool Step3To4;
        public bool Step4To5;
        public bool FinishButton;
        public bool GuestFinish;
        public new string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.SupplierForm.SupplierFormViewModel).FullName;
        public List<SelectedItemInfo<string>> txtBusiness7SelectedItemKeys;
        public List<SelectedItemInfo<string>> OptionButtonSelectedItemKeys;
        public List<SelectedItemInfo<string>> OptionButton1SelectedItemKeys;
        public List<SelectedItemInfo<string>> OptionButton2SelectedItemKeys;
        public List<SelectedItemInfo<string>> OptionButton3SelectedItemKeys;
        public List<SelectedItemInfo<string>> OptionButton4SelectedItemKeys;
        public List<SelectedItemInfo<string>> OptionButton5SelectedItemKeys;
        public List<SelectedItemInfo<string>> txtApplicableCommercialLawSelectedItemKeys;

        public new DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.SupplierForm.SupplierFormViewModel GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.SupplierForm.SupplierFormViewModel>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            return new DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.SupplierForm.SupplierFormViewModel();
        }
        new  public DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.SupplierForm.SupplierFormViewModel Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.SupplierForm.SupplierFormViewModel();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.SupplierForm.SupplierFormViewModel original)
        {
            if (original == null) return;
            base.Hydrate(original);
            original.Supplier = Supplier == null
                                ? null
                                : Supplier.Convert();
            original.Evaluation = Evaluation;
            original.Passed = Passed;
            original.TestRunned = TestRunned;
            original.Rerun = Rerun;
            original.PolicyTerms = PolicyTerms;
            original.Link = Link;
            original.Evaluation1 = Evaluation1;
            original.Evaluation2 = Evaluation2;
            original.Evaluation3 = Evaluation3;
            original.Evaluation4 = Evaluation4;
            original.Evaluation5 = Evaluation5;
            original.Evaluation6 = Evaluation6;
            original.EvaluationCount = EvaluationCount;
            original.SupplierReceivables = SupplierReceivables;
            original.IsSupplier = IsSupplier;
            original.Agreements = Agreements == null
                                  ? null
                                  : Agreements.Select(q => q.Convert()).ToList();
            original.Investor = Investor == null
                                ? null
                                : Investor.Convert();
            original.Step1To2 = Step1To2;
            original.Step1 = Step1;
            original.Step2To3 = Step2To3;
            original.Step3To4 = Step3To4;
            original.Step4To5 = Step4To5;
            original.FinishButton = FinishButton;
            original.GuestFinish = GuestFinish;
            original.txtBusiness7SelectedItems = txtBusiness7SelectedItemKeys == null
                                                 ? new List<SelectedItemInfo<string>>()
                                                 : txtBusiness7SelectedItemKeys.Select(x => new SelectedItemInfo<string>(x.SelectedItems.Select(y => y).ToList(), x.Indexes, x.FullRecordsetSelected)).ToList();
            original.OptionButtonSelectedItems = OptionButtonSelectedItemKeys == null
                                                 ? new List<SelectedItemInfo<string>>()
                                                 : OptionButtonSelectedItemKeys.Select(x => new SelectedItemInfo<string>(x.SelectedItems.Select(y => y).ToList(), x.Indexes, x.FullRecordsetSelected)).ToList();
            original.OptionButton1SelectedItems = OptionButton1SelectedItemKeys == null
                                                  ? new List<SelectedItemInfo<string>>()
                                                  : OptionButton1SelectedItemKeys.Select(x => new SelectedItemInfo<string>(x.SelectedItems.Select(y => y).ToList(), x.Indexes, x.FullRecordsetSelected)).ToList();
            original.OptionButton2SelectedItems = OptionButton2SelectedItemKeys == null
                                                  ? new List<SelectedItemInfo<string>>()
                                                  : OptionButton2SelectedItemKeys.Select(x => new SelectedItemInfo<string>(x.SelectedItems.Select(y => y).ToList(), x.Indexes, x.FullRecordsetSelected)).ToList();
            original.OptionButton3SelectedItems = OptionButton3SelectedItemKeys == null
                                                  ? new List<SelectedItemInfo<string>>()
                                                  : OptionButton3SelectedItemKeys.Select(x => new SelectedItemInfo<string>(x.SelectedItems.Select(y => y).ToList(), x.Indexes, x.FullRecordsetSelected)).ToList();
            original.OptionButton4SelectedItems = OptionButton4SelectedItemKeys == null
                                                  ? new List<SelectedItemInfo<string>>()
                                                  : OptionButton4SelectedItemKeys.Select(x => new SelectedItemInfo<string>(x.SelectedItems.Select(y => y).ToList(), x.Indexes, x.FullRecordsetSelected)).ToList();
            original.OptionButton5SelectedItems = OptionButton5SelectedItemKeys == null
                                                  ? new List<SelectedItemInfo<string>>()
                                                  : OptionButton5SelectedItemKeys.Select(x => new SelectedItemInfo<string>(x.SelectedItems.Select(y => y).ToList(), x.Indexes, x.FullRecordsetSelected)).ToList();
            original.txtApplicableCommercialLawSelectedItems = txtApplicableCommercialLawSelectedItemKeys == null
                    ? new List<SelectedItemInfo<string>>()
                    : txtApplicableCommercialLawSelectedItemKeys.Select(x => new SelectedItemInfo<string>(x.SelectedItems.Select(y => y).ToList(), x.Indexes, x.FullRecordsetSelected)).ToList();
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.Supplier))]
    public class Supplier_SupplierDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.Supplier>
    {

        [JsonConstructor]
        public Supplier_SupplierDTO() { }
        public Supplier_SupplierDTO(DSS5_SupplyChainFinancialsOptimisation.BO.Supplier original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.UserName as object;
            AcceptedPolicyTerms = original.AcceptedPolicyTerms;
            AdditionalComments = original.AdditionalComments;
            AdditionalCommentsStep2 = original.AdditionalCommentsStep2;
            AdditionalCommentsStep3 = original.AdditionalCommentsStep3;
            AnnualTurnover = original.AnnualTurnover;
            Average = original.Average;
            BEnvironment = original.BEnvironment;
            Business = original.Business;
            Company = original.Company;
            CompanyLogo = original.CompanyLogo;
            DomainFocus = original.DomainFocus;
            Email = original.Email;
            EqRatio = original.EqRatio;
            EvaluationCountResult = original.EvaluationCountResult;
            EvaluationResult = original.EvaluationResult;
            InvoiceValue = original.InvoiceValue;
            MarketSegment = original.MarketSegment;
            PTerms = original.PTerms;
            SupplierStatus = original.SupplierStatus;
            UserName = original.UserName;
            VATNumber = original.VATNumber;
            WebSite = original.WebSite;
            SupplierBusinessStructureData = original.SupplierBusinessStructureData == null ? null : new Supplier_Supplier_SupplierBusinessStructureData_SupplierBusinessStructureDataDTO(original.SupplierBusinessStructureData);
            SupplierReceivables = original.SupplierReceivables == null ? null : new Supplier_Supplier_SupplierReceivables_SupplierReceivablesDTO(original.SupplierReceivables);
            SupplierContactInformation = original.SupplierContactInformation == null ? null : new Supplier_Supplier_SupplierContactInformation_SupplierContactInformationDTO(original.SupplierContactInformation);
            SupplierTurnover = original.SupplierTurnover == null ? null : new Supplier_Supplier_SupplierTurnover_SupplierTurnoverDTO(original.SupplierTurnover);
            SupplierExtraInformation = original.SupplierExtraInformation == null ? null : new Supplier_Supplier_SupplierExtraInformation_SupplierExtraInformationDTO(original.SupplierExtraInformation);
            FinancialStatements = original.FinancialStatements?.Select(x => new Supplier_Supplier_FinancialStatements_SupplierUploadsDTO(x)).ToList();
            EconomicEvaluations = original.EconomicEvaluations?.Select(x => new Supplier_Supplier_EconomicEvaluations_SupplierUploadsDTO(x)).ToList();
            BusinessPlans = original.BusinessPlans?.Select(x => new Supplier_Supplier_BusinessPlans_SupplierUploadsDTO(x)).ToList();
            PriorOutstandingBalances = original.PriorOutstandingBalances?.Select(x => new Supplier_Supplier_PriorOutstandingBalances_SupplierUploadsDTO(x)).ToList();
            OutstandingBalances = original.OutstandingBalances?.Select(x => new Supplier_Supplier_OutstandingBalances_SupplierUploadsDTO(x)).ToList();
            CurrentSituations = original.CurrentSituations?.Select(x => new Supplier_Supplier_CurrentSituations_SupplierUploadsDTO(x)).ToList();
            CurrentStatements = original.CurrentStatements?.Select(x => new Supplier_Supplier_CurrentStatements_SupplierUploadsDTO(x)).ToList();
            CurrentCredits = original.CurrentCredits?.Select(x => new Supplier_Supplier_CurrentCredits_SupplierUploadsDTO(x)).ToList();
            FactoringAgreements = original.FactoringAgreements?.Select(x => new Supplier_Supplier_FactoringAgreements_SupplierUploadsDTO(x)).ToList();
            CustomerAgreements = original.CustomerAgreements?.Select(x => new Supplier_Supplier_CustomerAgreements_SupplierUploadsDTO(x)).ToList();
            GeneralConstractuals = original.GeneralConstractuals?.Select(x => new Supplier_Supplier_GeneralConstractuals_SupplierUploadsDTO(x)).ToList();
            OrganizationalCharts = original.OrganizationalCharts?.Select(x => new Supplier_Supplier_OrganizationalCharts_SupplierUploadsDTO(x)).ToList();
            InvoicesForms = original.InvoicesForms?.Select(x => new Supplier_Supplier_InvoicesForms_SupplierUploadsDTO(x)).ToList();
            Declarations = original.Declarations?.Select(x => new Supplier_Supplier_Declarations_SupplierUploadsDTO(x)).ToList();
            SupplierEvaluation = original.SupplierEvaluation == null ? null : new Supplier_Supplier_SupplierEvaluation_SupplierEvaluationDTO(original.SupplierEvaluation);
            Agreements = original.Agreements?.Select(x => new Supplier_Supplier_Agreements_AgreementDTO(x)).ToList();
            _clientKey = DTOHelper.GetClientKey(original, UserName);
        }
        public bool AcceptedPolicyTerms;
        public string AdditionalComments;
        public string AdditionalCommentsStep2;
        public string AdditionalCommentsStep3;
        public bool AnnualTurnover;
        public bool Average;
        public bool BEnvironment;
        public string Business;
        public string Company;
        public string CompanyLogo;
        public string DomainFocus;
        public string Email;
        public bool EqRatio;
        public int? EvaluationCountResult;
        public string EvaluationResult;
        public bool InvoiceValue;
        public string MarketSegment;
        public bool PTerms;
        public string SupplierStatus;
        public string UserName;
        public new object _key
        {
            get;
            set;
        }
        public string VATNumber;
        public string WebSite;
        public Supplier_Supplier_SupplierBusinessStructureData_SupplierBusinessStructureDataDTO SupplierBusinessStructureData;
        public Supplier_Supplier_SupplierReceivables_SupplierReceivablesDTO SupplierReceivables;
        public Supplier_Supplier_SupplierContactInformation_SupplierContactInformationDTO SupplierContactInformation;
        public Supplier_Supplier_SupplierTurnover_SupplierTurnoverDTO SupplierTurnover;
        public Supplier_Supplier_SupplierExtraInformation_SupplierExtraInformationDTO SupplierExtraInformation;
        public List<Supplier_Supplier_FinancialStatements_SupplierUploadsDTO> FinancialStatements;
        public List<Supplier_Supplier_EconomicEvaluations_SupplierUploadsDTO> EconomicEvaluations;
        public List<Supplier_Supplier_BusinessPlans_SupplierUploadsDTO> BusinessPlans;
        public List<Supplier_Supplier_PriorOutstandingBalances_SupplierUploadsDTO> PriorOutstandingBalances;
        public List<Supplier_Supplier_OutstandingBalances_SupplierUploadsDTO> OutstandingBalances;
        public List<Supplier_Supplier_CurrentSituations_SupplierUploadsDTO> CurrentSituations;
        public List<Supplier_Supplier_CurrentStatements_SupplierUploadsDTO> CurrentStatements;
        public List<Supplier_Supplier_CurrentCredits_SupplierUploadsDTO> CurrentCredits;
        public List<Supplier_Supplier_FactoringAgreements_SupplierUploadsDTO> FactoringAgreements;
        public List<Supplier_Supplier_CustomerAgreements_SupplierUploadsDTO> CustomerAgreements;
        public List<Supplier_Supplier_GeneralConstractuals_SupplierUploadsDTO> GeneralConstractuals;
        public List<Supplier_Supplier_OrganizationalCharts_SupplierUploadsDTO> OrganizationalCharts;
        public List<Supplier_Supplier_InvoicesForms_SupplierUploadsDTO> InvoicesForms;
        public List<Supplier_Supplier_Declarations_SupplierUploadsDTO> Declarations;
        public Supplier_Supplier_SupplierEvaluation_SupplierEvaluationDTO SupplierEvaluation;
        public List<Supplier_Supplier_Agreements_AgreementDTO> Agreements;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.Supplier).FullName;
        public override List<string> _baseClasses => new List<string> {typeof(zAppDev.DotNet.Framework.Identity.Model.ApplicationUser).FullName};
        public DSS5_SupplyChainFinancialsOptimisation.BO.Supplier GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.Supplier>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = (rawKey);
            if (parsedKey == default(string) || Equals(parsedKey, default(string)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.Supplier();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Supplier>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.Supplier Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.Supplier();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.Supplier original)
        {
            if (original == null) return;
            original.AcceptedPolicyTerms = AcceptedPolicyTerms;
            original.AdditionalComments = AdditionalComments;
            original.AdditionalCommentsStep2 = AdditionalCommentsStep2;
            original.AdditionalCommentsStep3 = AdditionalCommentsStep3;
            original.AnnualTurnover = AnnualTurnover;
            original.Average = Average;
            original.BEnvironment = BEnvironment;
            original.Business = Business;
            original.Company = Company;
            original.CompanyLogo = CompanyLogo;
            original.DomainFocus = DomainFocus;
            original.Email = Email;
            original.EqRatio = EqRatio;
            original.EvaluationCountResult = EvaluationCountResult;
            original.EvaluationResult = EvaluationResult;
            original.InvoiceValue = InvoiceValue;
            original.MarketSegment = MarketSegment;
            original.PTerms = PTerms;
            original.SupplierStatus = SupplierStatus;
            original.UserName = UserName ?? "";
            original.VATNumber = VATNumber;
            original.WebSite = WebSite;
            original.SupplierBusinessStructureData = SupplierBusinessStructureData == null
                    ? null
                    : SupplierBusinessStructureData.Convert();
            original.SupplierReceivables = SupplierReceivables == null
                                           ? null
                                           : SupplierReceivables.Convert();
            original.SupplierContactInformation = SupplierContactInformation == null
                                                  ? null
                                                  : SupplierContactInformation.Convert();
            original.SupplierTurnover = SupplierTurnover == null
                                        ? null
                                        : SupplierTurnover.Convert();
            original.SupplierExtraInformation = SupplierExtraInformation == null
                                                ? null
                                                : SupplierExtraInformation.Convert();
            original.FinancialStatements = FinancialStatements == null
                                           ? null
                                           : FinancialStatements.Select(q => q.Convert()).ToList();
            original.EconomicEvaluations = EconomicEvaluations == null
                                           ? null
                                           : EconomicEvaluations.Select(q => q.Convert()).ToList();
            original.BusinessPlans = BusinessPlans == null
                                     ? null
                                     : BusinessPlans.Select(q => q.Convert()).ToList();
            original.PriorOutstandingBalances = PriorOutstandingBalances == null
                                                ? null
                                                : PriorOutstandingBalances.Select(q => q.Convert()).ToList();
            original.OutstandingBalances = OutstandingBalances == null
                                           ? null
                                           : OutstandingBalances.Select(q => q.Convert()).ToList();
            original.CurrentSituations = CurrentSituations == null
                                         ? null
                                         : CurrentSituations.Select(q => q.Convert()).ToList();
            original.CurrentStatements = CurrentStatements == null
                                         ? null
                                         : CurrentStatements.Select(q => q.Convert()).ToList();
            original.CurrentCredits = CurrentCredits == null
                                      ? null
                                      : CurrentCredits.Select(q => q.Convert()).ToList();
            original.FactoringAgreements = FactoringAgreements == null
                                           ? null
                                           : FactoringAgreements.Select(q => q.Convert()).ToList();
            original.CustomerAgreements = CustomerAgreements == null
                                          ? null
                                          : CustomerAgreements.Select(q => q.Convert()).ToList();
            original.GeneralConstractuals = GeneralConstractuals == null
                                            ? null
                                            : GeneralConstractuals.Select(q => q.Convert()).ToList();
            original.OrganizationalCharts = OrganizationalCharts == null
                                            ? null
                                            : OrganizationalCharts.Select(q => q.Convert()).ToList();
            original.InvoicesForms = InvoicesForms == null
                                     ? null
                                     : InvoicesForms.Select(q => q.Convert()).ToList();
            original.Declarations = Declarations == null
                                    ? null
                                    : Declarations.Select(q => q.Convert()).ToList();
            original.SupplierEvaluation = SupplierEvaluation == null
                                          ? null
                                          : SupplierEvaluation.Convert();
            original.Agreements = Agreements == null
                                  ? null
                                  : Agreements.Select(q => q.Convert()).ToList();
        }
        public static Supplier_SupplierDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = (rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Supplier>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Supplier_SupplierDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierBusinessStructureData))]
    public class Supplier_Supplier_SupplierBusinessStructureData_SupplierBusinessStructureDataDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierBusinessStructureData>
    {

        [JsonConstructor]
        public Supplier_Supplier_SupplierBusinessStructureData_SupplierBusinessStructureDataDTO() { }
        public Supplier_Supplier_SupplierBusinessStructureData_SupplierBusinessStructureDataDTO(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierBusinessStructureData original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            ApplicableCommercialLaw = original.ApplicableCommercialLaw;
            Id = original.Id;
            Jurisdiction = original.Jurisdiction;
            NumOfCustomers = original.NumOfCustomers;
            NumOfCustomersAbroad = original.NumOfCustomersAbroad;
            NumOfCustomersD = original.NumOfCustomersD;
            NumOfCustomersEU = original.NumOfCustomersEU;
            NumOfEmployeesAbroad = original.NumOfEmployeesAbroad;
            NumOfEmployeesD = original.NumOfEmployeesD;
            NumOfInvoices = original.NumOfInvoices;
            NumOfInvoicesAbroad = original.NumOfInvoicesAbroad;
            NumOfInvoicesD = original.NumOfInvoicesD;
            NumOfInvoicesEU = original.NumOfInvoicesEU;
            NumOfOccasionalCust = original.NumOfOccasionalCust;
            NumOfOccasionalCustAbroad = original.NumOfOccasionalCustAbroad;
            NumOfOccasionalCustD = original.NumOfOccasionalCustD;
            NumOfOccasionalCustEU = original.NumOfOccasionalCustEU;
            NumOpenBalance = original.NumOpenBalance;
            NumOpenBalanceAboad = original.NumOpenBalanceAboad;
            NumOpenBalanceD = original.NumOpenBalanceD;
            NumOpenBalanceEU = original.NumOpenBalanceEU;
            NumTransCust = original.NumTransCust;
            NumTransCustAbroad = original.NumTransCustAbroad;
            NumTransCustD = original.NumTransCustD;
            NumTransCustEU = original.NumTransCustEU;
            ThereofActive = original.ThereofActive;
            ThereofActiveAbroad = original.ThereofActiveAbroad;
            ThereofActiveD = original.ThereofActiveD;
            ThereofActiveEU = original.ThereofActiveEU;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public string ApplicableCommercialLaw;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string Jurisdiction;
        public int? NumOfCustomers;
        public int? NumOfCustomersAbroad;
        public int? NumOfCustomersD;
        public int? NumOfCustomersEU;
        public int? NumOfEmployeesAbroad;
        public int? NumOfEmployeesD;
        public int? NumOfInvoices;
        public int? NumOfInvoicesAbroad;
        public int? NumOfInvoicesD;
        public int? NumOfInvoicesEU;
        public int? NumOfOccasionalCust;
        public int? NumOfOccasionalCustAbroad;
        public int? NumOfOccasionalCustD;
        public int? NumOfOccasionalCustEU;
        public int? NumOpenBalance;
        public int? NumOpenBalanceAboad;
        public int? NumOpenBalanceD;
        public int? NumOpenBalanceEU;
        public int? NumTransCust;
        public int? NumTransCustAbroad;
        public int? NumTransCustD;
        public int? NumTransCustEU;
        public int? ThereofActive;
        public int? ThereofActiveAbroad;
        public int? ThereofActiveD;
        public int? ThereofActiveEU;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierBusinessStructureData).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.SupplierBusinessStructureData GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierBusinessStructureData>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.SupplierBusinessStructureData();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierBusinessStructureData>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.SupplierBusinessStructureData Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.SupplierBusinessStructureData();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierBusinessStructureData original)
        {
            if (original == null) return;
            original.ApplicableCommercialLaw = ApplicableCommercialLaw;
            original.Id = Id ?? 0;
            original.Jurisdiction = Jurisdiction;
            original.NumOfCustomers = NumOfCustomers;
            original.NumOfCustomersAbroad = NumOfCustomersAbroad;
            original.NumOfCustomersD = NumOfCustomersD;
            original.NumOfCustomersEU = NumOfCustomersEU;
            original.NumOfEmployeesAbroad = NumOfEmployeesAbroad;
            original.NumOfEmployeesD = NumOfEmployeesD;
            original.NumOfInvoices = NumOfInvoices;
            original.NumOfInvoicesAbroad = NumOfInvoicesAbroad;
            original.NumOfInvoicesD = NumOfInvoicesD;
            original.NumOfInvoicesEU = NumOfInvoicesEU;
            original.NumOfOccasionalCust = NumOfOccasionalCust;
            original.NumOfOccasionalCustAbroad = NumOfOccasionalCustAbroad;
            original.NumOfOccasionalCustD = NumOfOccasionalCustD;
            original.NumOfOccasionalCustEU = NumOfOccasionalCustEU;
            original.NumOpenBalance = NumOpenBalance;
            original.NumOpenBalanceAboad = NumOpenBalanceAboad;
            original.NumOpenBalanceD = NumOpenBalanceD;
            original.NumOpenBalanceEU = NumOpenBalanceEU;
            original.NumTransCust = NumTransCust;
            original.NumTransCustAbroad = NumTransCustAbroad;
            original.NumTransCustD = NumTransCustD;
            original.NumTransCustEU = NumTransCustEU;
            original.ThereofActive = ThereofActive;
            original.ThereofActiveAbroad = ThereofActiveAbroad;
            original.ThereofActiveD = ThereofActiveD;
            original.ThereofActiveEU = ThereofActiveEU;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static Supplier_Supplier_SupplierBusinessStructureData_SupplierBusinessStructureDataDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierBusinessStructureData>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Supplier_Supplier_SupplierBusinessStructureData_SupplierBusinessStructureDataDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierReceivables))]
    public class Supplier_Supplier_SupplierReceivables_SupplierReceivablesDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierReceivables>
    {

        [JsonConstructor]
        public Supplier_Supplier_SupplierReceivables_SupplierReceivablesDTO() { }
        public Supplier_Supplier_SupplierReceivables_SupplierReceivablesDTO(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierReceivables original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            DomesticCustomersPresent = original.DomesticCustomersPresent;
            DomesticCustomersPrior = original.DomesticCustomersPrior;
            EUCustomersPresent = original.EUCustomersPresent;
            EUCustomersPrior = original.EUCustomersPrior;
            Id = original.Id;
            ThirdCountryCustomersPresent = original.ThirdCountryCustomersPresent;
            ThirdCountryCustomersPrior = original.ThirdCountryCustomersPrior;
            TotalPresent = original.TotalPresent;
            TotalPrior = original.TotalPrior;
            WillUploadFiles = original.WillUploadFiles;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public decimal? DomesticCustomersPresent;
        public decimal? DomesticCustomersPrior;
        public decimal? EUCustomersPresent;
        public decimal? EUCustomersPrior;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public decimal? ThirdCountryCustomersPresent;
        public decimal? ThirdCountryCustomersPrior;
        public decimal? TotalPresent;
        public decimal? TotalPrior;
        public bool WillUploadFiles;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierReceivables).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.SupplierReceivables GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierReceivables>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.SupplierReceivables();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierReceivables>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.SupplierReceivables Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.SupplierReceivables();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierReceivables original)
        {
            if (original == null) return;
            original.DomesticCustomersPresent = DomesticCustomersPresent;
            original.DomesticCustomersPrior = DomesticCustomersPrior;
            original.EUCustomersPresent = EUCustomersPresent;
            original.EUCustomersPrior = EUCustomersPrior;
            original.Id = Id ?? 0;
            original.ThirdCountryCustomersPresent = ThirdCountryCustomersPresent;
            original.ThirdCountryCustomersPrior = ThirdCountryCustomersPrior;
            original.TotalPresent = TotalPresent;
            original.TotalPrior = TotalPrior;
            original.WillUploadFiles = WillUploadFiles;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static Supplier_Supplier_SupplierReceivables_SupplierReceivablesDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierReceivables>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Supplier_Supplier_SupplierReceivables_SupplierReceivablesDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierContactInformation))]
    public class Supplier_Supplier_SupplierContactInformation_SupplierContactInformationDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierContactInformation>
    {

        [JsonConstructor]
        public Supplier_Supplier_SupplierContactInformation_SupplierContactInformationDTO() { }
        public Supplier_Supplier_SupplierContactInformation_SupplierContactInformationDTO(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierContactInformation original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            AddressOne = original.AddressOne;
            ContactPerson = original.ContactPerson;
            EstablishedIn = original.EstablishedIn;
            Id = original.Id;
            ManagingDirector = original.ManagingDirector;
            Telephone = original.Telephone;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public string AddressOne;
        public string ContactPerson;
        public string EstablishedIn;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string ManagingDirector;
        public string Telephone;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierContactInformation).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.SupplierContactInformation GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierContactInformation>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.SupplierContactInformation();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierContactInformation>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.SupplierContactInformation Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.SupplierContactInformation();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierContactInformation original)
        {
            if (original == null) return;
            original.AddressOne = AddressOne;
            original.ContactPerson = ContactPerson;
            original.EstablishedIn = EstablishedIn;
            original.Id = Id ?? 0;
            original.ManagingDirector = ManagingDirector;
            original.Telephone = Telephone;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static Supplier_Supplier_SupplierContactInformation_SupplierContactInformationDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierContactInformation>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Supplier_Supplier_SupplierContactInformation_SupplierContactInformationDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierTurnover))]
    public class Supplier_Supplier_SupplierTurnover_SupplierTurnoverDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierTurnover>
    {

        [JsonConstructor]
        public Supplier_Supplier_SupplierTurnover_SupplierTurnoverDTO() { }
        public Supplier_Supplier_SupplierTurnover_SupplierTurnoverDTO(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierTurnover original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            ActualPreviousYear = original.ActualPreviousYear;
            ActualPreviousYearAbroad = original.ActualPreviousYearAbroad;
            ActualPreviousYearD = original.ActualPreviousYearD;
            ActualPreviousYearEU = original.ActualPreviousYearEU;
            Id = original.Id;
            PercentageAbroad = original.PercentageAbroad;
            PercentageCN = original.PercentageCN;
            PercentageCNAbroad = original.PercentageCNAbroad;
            PercentageCND = original.PercentageCND;
            PercentageCNEU = original.PercentageCNEU;
            PercentageD = original.PercentageD;
            PercentageEU = original.PercentageEU;
            PercentageSales = original.PercentageSales;
            PlannedCurrentYear = original.PlannedCurrentYear;
            PlannedCurrentYearAbroad = original.PlannedCurrentYearAbroad;
            PlannedCurrentYearD = original.PlannedCurrentYearD;
            PlannedCurrentYearEU = original.PlannedCurrentYearEU;
            PlannedNextYear = original.PlannedNextYear;
            PlannedNextYearAbroad = original.PlannedNextYearAbroad;
            PlannedNextYearD = original.PlannedNextYearD;
            PlannedNextYearEU = original.PlannedNextYearEU;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public decimal? ActualPreviousYear;
        public decimal? ActualPreviousYearAbroad;
        public decimal? ActualPreviousYearD;
        public decimal? ActualPreviousYearEU;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public decimal? PercentageAbroad;
        public decimal? PercentageCN;
        public decimal? PercentageCNAbroad;
        public decimal? PercentageCND;
        public decimal? PercentageCNEU;
        public decimal? PercentageD;
        public decimal? PercentageEU;
        public decimal? PercentageSales;
        public decimal? PlannedCurrentYear;
        public decimal? PlannedCurrentYearAbroad;
        public decimal? PlannedCurrentYearD;
        public decimal? PlannedCurrentYearEU;
        public decimal? PlannedNextYear;
        public decimal? PlannedNextYearAbroad;
        public decimal? PlannedNextYearD;
        public decimal? PlannedNextYearEU;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierTurnover).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.SupplierTurnover GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierTurnover>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.SupplierTurnover();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierTurnover>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.SupplierTurnover Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.SupplierTurnover();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierTurnover original)
        {
            if (original == null) return;
            original.ActualPreviousYear = ActualPreviousYear;
            original.ActualPreviousYearAbroad = ActualPreviousYearAbroad;
            original.ActualPreviousYearD = ActualPreviousYearD;
            original.ActualPreviousYearEU = ActualPreviousYearEU;
            original.Id = Id ?? 0;
            original.PercentageAbroad = PercentageAbroad;
            original.PercentageCN = PercentageCN;
            original.PercentageCNAbroad = PercentageCNAbroad;
            original.PercentageCND = PercentageCND;
            original.PercentageCNEU = PercentageCNEU;
            original.PercentageD = PercentageD;
            original.PercentageEU = PercentageEU;
            original.PercentageSales = PercentageSales;
            original.PlannedCurrentYear = PlannedCurrentYear;
            original.PlannedCurrentYearAbroad = PlannedCurrentYearAbroad;
            original.PlannedCurrentYearD = PlannedCurrentYearD;
            original.PlannedCurrentYearEU = PlannedCurrentYearEU;
            original.PlannedNextYear = PlannedNextYear;
            original.PlannedNextYearAbroad = PlannedNextYearAbroad;
            original.PlannedNextYearD = PlannedNextYearD;
            original.PlannedNextYearEU = PlannedNextYearEU;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static Supplier_Supplier_SupplierTurnover_SupplierTurnoverDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierTurnover>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Supplier_Supplier_SupplierTurnover_SupplierTurnoverDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierExtraInformation))]
    public class Supplier_Supplier_SupplierExtraInformation_SupplierExtraInformationDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierExtraInformation>
    {

        [JsonConstructor]
        public Supplier_Supplier_SupplierExtraInformation_SupplierExtraInformationDTO() { }
        public Supplier_Supplier_SupplierExtraInformation_SupplierExtraInformationDTO(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierExtraInformation original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            AreCompanyReceivables = original.AreCompanyReceivables;
            ExistenceCounterClaims = original.ExistenceCounterClaims;
            HasCompanyAssigned = original.HasCompanyAssigned;
            Id = original.Id;
            OccurenceBadDebts = original.OccurenceBadDebts;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public string AreCompanyReceivables;
        public string ExistenceCounterClaims;
        public string HasCompanyAssigned;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string OccurenceBadDebts;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierExtraInformation).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.SupplierExtraInformation GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierExtraInformation>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.SupplierExtraInformation();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierExtraInformation>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.SupplierExtraInformation Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.SupplierExtraInformation();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierExtraInformation original)
        {
            if (original == null) return;
            original.AreCompanyReceivables = AreCompanyReceivables;
            original.ExistenceCounterClaims = ExistenceCounterClaims;
            original.HasCompanyAssigned = HasCompanyAssigned;
            original.Id = Id ?? 0;
            original.OccurenceBadDebts = OccurenceBadDebts;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static Supplier_Supplier_SupplierExtraInformation_SupplierExtraInformationDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierExtraInformation>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Supplier_Supplier_SupplierExtraInformation_SupplierExtraInformationDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads))]
    public class Supplier_Supplier_FinancialStatements_SupplierUploadsDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>
    {

        [JsonConstructor]
        public Supplier_Supplier_FinancialStatements_SupplierUploadsDTO() { }
        public Supplier_Supplier_FinancialStatements_SupplierUploadsDTO(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            Id = original.Id;
            Path = original.Path;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string Path;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads original)
        {
            if (original == null) return;
            original.Id = Id ?? 0;
            original.Path = Path;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static Supplier_Supplier_FinancialStatements_SupplierUploadsDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Supplier_Supplier_FinancialStatements_SupplierUploadsDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads))]
    public class Supplier_Supplier_EconomicEvaluations_SupplierUploadsDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>
    {

        [JsonConstructor]
        public Supplier_Supplier_EconomicEvaluations_SupplierUploadsDTO() { }
        public Supplier_Supplier_EconomicEvaluations_SupplierUploadsDTO(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            Id = original.Id;
            Path = original.Path;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string Path;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads original)
        {
            if (original == null) return;
            original.Id = Id ?? 0;
            original.Path = Path;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static Supplier_Supplier_EconomicEvaluations_SupplierUploadsDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Supplier_Supplier_EconomicEvaluations_SupplierUploadsDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads))]
    public class Supplier_Supplier_BusinessPlans_SupplierUploadsDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>
    {

        [JsonConstructor]
        public Supplier_Supplier_BusinessPlans_SupplierUploadsDTO() { }
        public Supplier_Supplier_BusinessPlans_SupplierUploadsDTO(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            Id = original.Id;
            Path = original.Path;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string Path;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads original)
        {
            if (original == null) return;
            original.Id = Id ?? 0;
            original.Path = Path;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static Supplier_Supplier_BusinessPlans_SupplierUploadsDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Supplier_Supplier_BusinessPlans_SupplierUploadsDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads))]
    public class Supplier_Supplier_PriorOutstandingBalances_SupplierUploadsDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>
    {

        [JsonConstructor]
        public Supplier_Supplier_PriorOutstandingBalances_SupplierUploadsDTO() { }
        public Supplier_Supplier_PriorOutstandingBalances_SupplierUploadsDTO(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            Id = original.Id;
            Path = original.Path;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string Path;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads original)
        {
            if (original == null) return;
            original.Id = Id ?? 0;
            original.Path = Path;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static Supplier_Supplier_PriorOutstandingBalances_SupplierUploadsDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Supplier_Supplier_PriorOutstandingBalances_SupplierUploadsDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads))]
    public class Supplier_Supplier_OutstandingBalances_SupplierUploadsDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>
    {

        [JsonConstructor]
        public Supplier_Supplier_OutstandingBalances_SupplierUploadsDTO() { }
        public Supplier_Supplier_OutstandingBalances_SupplierUploadsDTO(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            Id = original.Id;
            Path = original.Path;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string Path;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads original)
        {
            if (original == null) return;
            original.Id = Id ?? 0;
            original.Path = Path;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static Supplier_Supplier_OutstandingBalances_SupplierUploadsDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Supplier_Supplier_OutstandingBalances_SupplierUploadsDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads))]
    public class Supplier_Supplier_CurrentSituations_SupplierUploadsDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>
    {

        [JsonConstructor]
        public Supplier_Supplier_CurrentSituations_SupplierUploadsDTO() { }
        public Supplier_Supplier_CurrentSituations_SupplierUploadsDTO(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            Id = original.Id;
            Path = original.Path;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string Path;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads original)
        {
            if (original == null) return;
            original.Id = Id ?? 0;
            original.Path = Path;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static Supplier_Supplier_CurrentSituations_SupplierUploadsDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Supplier_Supplier_CurrentSituations_SupplierUploadsDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads))]
    public class Supplier_Supplier_CurrentStatements_SupplierUploadsDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>
    {

        [JsonConstructor]
        public Supplier_Supplier_CurrentStatements_SupplierUploadsDTO() { }
        public Supplier_Supplier_CurrentStatements_SupplierUploadsDTO(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            Id = original.Id;
            Path = original.Path;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string Path;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads original)
        {
            if (original == null) return;
            original.Id = Id ?? 0;
            original.Path = Path;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static Supplier_Supplier_CurrentStatements_SupplierUploadsDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Supplier_Supplier_CurrentStatements_SupplierUploadsDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads))]
    public class Supplier_Supplier_CurrentCredits_SupplierUploadsDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>
    {

        [JsonConstructor]
        public Supplier_Supplier_CurrentCredits_SupplierUploadsDTO() { }
        public Supplier_Supplier_CurrentCredits_SupplierUploadsDTO(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            Id = original.Id;
            Path = original.Path;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string Path;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads original)
        {
            if (original == null) return;
            original.Id = Id ?? 0;
            original.Path = Path;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static Supplier_Supplier_CurrentCredits_SupplierUploadsDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Supplier_Supplier_CurrentCredits_SupplierUploadsDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads))]
    public class Supplier_Supplier_FactoringAgreements_SupplierUploadsDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>
    {

        [JsonConstructor]
        public Supplier_Supplier_FactoringAgreements_SupplierUploadsDTO() { }
        public Supplier_Supplier_FactoringAgreements_SupplierUploadsDTO(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            Id = original.Id;
            Path = original.Path;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string Path;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads original)
        {
            if (original == null) return;
            original.Id = Id ?? 0;
            original.Path = Path;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static Supplier_Supplier_FactoringAgreements_SupplierUploadsDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Supplier_Supplier_FactoringAgreements_SupplierUploadsDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads))]
    public class Supplier_Supplier_CustomerAgreements_SupplierUploadsDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>
    {

        [JsonConstructor]
        public Supplier_Supplier_CustomerAgreements_SupplierUploadsDTO() { }
        public Supplier_Supplier_CustomerAgreements_SupplierUploadsDTO(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            Id = original.Id;
            Path = original.Path;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string Path;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads original)
        {
            if (original == null) return;
            original.Id = Id ?? 0;
            original.Path = Path;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static Supplier_Supplier_CustomerAgreements_SupplierUploadsDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Supplier_Supplier_CustomerAgreements_SupplierUploadsDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads))]
    public class Supplier_Supplier_GeneralConstractuals_SupplierUploadsDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>
    {

        [JsonConstructor]
        public Supplier_Supplier_GeneralConstractuals_SupplierUploadsDTO() { }
        public Supplier_Supplier_GeneralConstractuals_SupplierUploadsDTO(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            Id = original.Id;
            Path = original.Path;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string Path;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads original)
        {
            if (original == null) return;
            original.Id = Id ?? 0;
            original.Path = Path;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static Supplier_Supplier_GeneralConstractuals_SupplierUploadsDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Supplier_Supplier_GeneralConstractuals_SupplierUploadsDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads))]
    public class Supplier_Supplier_OrganizationalCharts_SupplierUploadsDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>
    {

        [JsonConstructor]
        public Supplier_Supplier_OrganizationalCharts_SupplierUploadsDTO() { }
        public Supplier_Supplier_OrganizationalCharts_SupplierUploadsDTO(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            Id = original.Id;
            Path = original.Path;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string Path;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads original)
        {
            if (original == null) return;
            original.Id = Id ?? 0;
            original.Path = Path;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static Supplier_Supplier_OrganizationalCharts_SupplierUploadsDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Supplier_Supplier_OrganizationalCharts_SupplierUploadsDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads))]
    public class Supplier_Supplier_InvoicesForms_SupplierUploadsDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>
    {

        [JsonConstructor]
        public Supplier_Supplier_InvoicesForms_SupplierUploadsDTO() { }
        public Supplier_Supplier_InvoicesForms_SupplierUploadsDTO(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            Id = original.Id;
            Path = original.Path;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string Path;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads original)
        {
            if (original == null) return;
            original.Id = Id ?? 0;
            original.Path = Path;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static Supplier_Supplier_InvoicesForms_SupplierUploadsDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Supplier_Supplier_InvoicesForms_SupplierUploadsDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads))]
    public class Supplier_Supplier_Declarations_SupplierUploadsDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>
    {

        [JsonConstructor]
        public Supplier_Supplier_Declarations_SupplierUploadsDTO() { }
        public Supplier_Supplier_Declarations_SupplierUploadsDTO(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            Id = original.Id;
            Path = original.Path;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string Path;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads original)
        {
            if (original == null) return;
            original.Id = Id ?? 0;
            original.Path = Path;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static Supplier_Supplier_Declarations_SupplierUploadsDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierUploads>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Supplier_Supplier_Declarations_SupplierUploadsDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierEvaluation))]
    public class Supplier_Supplier_SupplierEvaluation_SupplierEvaluationDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierEvaluation>
    {

        [JsonConstructor]
        public Supplier_Supplier_SupplierEvaluation_SupplierEvaluationDTO() { }
        public Supplier_Supplier_SupplierEvaluation_SupplierEvaluationDTO(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierEvaluation original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            Average = original.Average;
            AverageInvoiceValue = original.AverageInvoiceValue;
            ContractualPaymentTerms = original.ContractualPaymentTerms;
            Environment = original.Environment;
            EquityRatio = original.EquityRatio;
            Id = original.Id;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public decimal? Average;
        public decimal? AverageInvoiceValue;
        public decimal? ContractualPaymentTerms;
        public string Environment;
        public decimal? EquityRatio;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierEvaluation).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.SupplierEvaluation GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierEvaluation>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.SupplierEvaluation();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierEvaluation>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.SupplierEvaluation Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.SupplierEvaluation();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.SupplierEvaluation original)
        {
            if (original == null) return;
            original.Average = Average;
            original.AverageInvoiceValue = AverageInvoiceValue;
            original.ContractualPaymentTerms = ContractualPaymentTerms;
            original.Environment = Environment;
            original.EquityRatio = EquityRatio;
            original.Id = Id ?? 0;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static Supplier_Supplier_SupplierEvaluation_SupplierEvaluationDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.SupplierEvaluation>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Supplier_Supplier_SupplierEvaluation_SupplierEvaluationDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.Agreement))]
    public class Supplier_Supplier_Agreements_AgreementDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.Agreement>
    {

        [JsonConstructor]
        public Supplier_Supplier_Agreements_AgreementDTO() { }
        public Supplier_Supplier_Agreements_AgreementDTO(DSS5_SupplyChainFinancialsOptimisation.BO.Agreement original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            Id = original.Id;
            Investor = original.Investor == null ? null : new Supplier_Supplier_Agreements_Agreement_Investor_InvestorDTO(original.Investor);
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public Supplier_Supplier_Agreements_Agreement_Investor_InvestorDTO Investor;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.Agreement).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.Agreement GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.Agreement>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.Agreement();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Agreement>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.Agreement Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.Agreement();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.Agreement original)
        {
            if (original == null) return;
            original.Id = Id ?? 0;
            original.Investor = Investor == null
                                ? null
                                : Investor.Convert();
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static Supplier_Supplier_Agreements_AgreementDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Agreement>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Supplier_Supplier_Agreements_AgreementDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.Investor))]
    public class Supplier_Supplier_Agreements_Agreement_Investor_InvestorDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.Investor>
    {

        [JsonConstructor]
        public Supplier_Supplier_Agreements_Agreement_Investor_InvestorDTO() { }
        public Supplier_Supplier_Agreements_Agreement_Investor_InvestorDTO(DSS5_SupplyChainFinancialsOptimisation.BO.Investor original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.UserName as object;
            UserName = original.UserName;
            _clientKey = DTOHelper.GetClientKey(original, UserName);
        }
        public string UserName;
        public new object _key
        {
            get;
            set;
        }
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.Investor).FullName;
        public override List<string> _baseClasses => new List<string> {typeof(zAppDev.DotNet.Framework.Identity.Model.ApplicationUser).FullName};
        public DSS5_SupplyChainFinancialsOptimisation.BO.Investor GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.Investor>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = (rawKey);
            if (parsedKey == default(string) || Equals(parsedKey, default(string)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.Investor();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Investor>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.Investor Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.Investor();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.Investor original)
        {
            if (original == null) return;
            original.UserName = UserName ?? "";
        }
        public static Supplier_Supplier_Agreements_Agreement_Investor_InvestorDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = (rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Investor>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Supplier_Supplier_Agreements_Agreement_Investor_InvestorDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.Agreement))]
    public class Agreements_AgreementDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.Agreement>
    {

        [JsonConstructor]
        public Agreements_AgreementDTO() { }
        public Agreements_AgreementDTO(DSS5_SupplyChainFinancialsOptimisation.BO.Agreement original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            Id = original.Id;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.Agreement).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.Agreement GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.Agreement>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.Agreement();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Agreement>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.Agreement Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.Agreement();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.Agreement original)
        {
            if (original == null) return;
            original.Id = Id ?? 0;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static Agreements_AgreementDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Agreement>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Agreements_AgreementDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.Investor))]
    public class Investor_InvestorDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.Investor>
    {

        [JsonConstructor]
        public Investor_InvestorDTO() { }
        public Investor_InvestorDTO(DSS5_SupplyChainFinancialsOptimisation.BO.Investor original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.UserName as object;
            UserName = original.UserName;
            _clientKey = DTOHelper.GetClientKey(original, UserName);
        }
        public string UserName;
        public new object _key
        {
            get;
            set;
        }
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.Investor).FullName;
        public override List<string> _baseClasses => new List<string> {typeof(zAppDev.DotNet.Framework.Identity.Model.ApplicationUser).FullName};
        public DSS5_SupplyChainFinancialsOptimisation.BO.Investor GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.Investor>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = (rawKey);
            if (parsedKey == default(string) || Equals(parsedKey, default(string)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.Investor();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Investor>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.Investor Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.Investor();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.Investor original)
        {
            if (original == null) return;
            original.UserName = UserName ?? "";
        }
        public static Investor_InvestorDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = (rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Investor>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Investor_InvestorDTO(foundEntry);
            }
            return null;
        }
    }


    #region Datasource DTOs










    #endregion

}
