// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).
using System;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Linq;
using DSS5_SupplyChainFinancialsOptimisation.BO;
using DSS5_SupplyChainFinancialsOptimisation.UI.Controllers.PaymentForm;
using AppCode;
using zAppDev.DotNet.Framework.Data;
using zAppDev.DotNet.Framework.Utilities;
using zAppDev.DotNet.Framework.Data.Domain;
using zAppDev.DotNet.Framework.Mvc;
using System.ComponentModel.DataAnnotations;
using DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.MasterPage;
using DSS5_SupplyChainFinancialsOptimisation.UI.Controllers.MasterPage;
namespace DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.PaymentForm
{
    public class PaymentFormViewModel : MasterPageViewModel
    {
        public DSS5_SupplyChainFinancialsOptimisation.BO.Payment Payment;
        public List<SelectedItemInfo<string>> txtPaymentMethod0SelectedItems;
        public List<SelectedItemInfo<string>> txtExpirationMonth4SelectedItems;
        public List<SelectedItemInfo<string>> txtExpirationYear5SelectedItems;


        public PaymentFormViewModel()
        {
            Payment = new DSS5_SupplyChainFinancialsOptimisation.BO.Payment();
        }


        public override void Evict()
        {
            var manager = MiniSessionManager.Instance;
            if (manager.Session.Contains(Payment))
            {
                manager.Session.Evict(Payment);
            }
        }

    }


    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.PaymentForm.PaymentFormViewModel))]
    public class PaymentFormViewModelDTO : MasterPageViewModelDTO, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.PaymentForm.PaymentFormViewModel>
    {

        [JsonConstructor]
        public PaymentFormViewModelDTO() { }
        public PaymentFormViewModelDTO(DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.PaymentForm.PaymentFormViewModel original, bool parentIsDirty = false)  : base(original)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            Payment = original.Payment == null ? null : new Payment_PaymentDTO(original.Payment);
            txtPaymentMethod0SelectedItemKeys = original.txtPaymentMethod0SelectedItems == null
                                                ? null
                                                : original.txtPaymentMethod0SelectedItems.Select(x => new SelectedItemInfo<string>(x.SelectedItems.Select(y => y).ToList(), x.Indexes, x.FullRecordsetSelected)).ToList();
            txtExpirationMonth4SelectedItemKeys = original.txtExpirationMonth4SelectedItems == null
                                                  ? null
                                                  : original.txtExpirationMonth4SelectedItems.Select(x => new SelectedItemInfo<string>(x.SelectedItems.Select(y => y).ToList(), x.Indexes, x.FullRecordsetSelected)).ToList();
            txtExpirationYear5SelectedItemKeys = original.txtExpirationYear5SelectedItems == null
                                                 ? null
                                                 : original.txtExpirationYear5SelectedItems.Select(x => new SelectedItemInfo<string>(x.SelectedItems.Select(y => y).ToList(), x.Indexes, x.FullRecordsetSelected)).ToList();
        }
        public Payment_PaymentDTO Payment;
        public new string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.PaymentForm.PaymentFormViewModel).FullName;
        public List<SelectedItemInfo<string>> txtPaymentMethod0SelectedItemKeys;
        public List<SelectedItemInfo<string>> txtExpirationMonth4SelectedItemKeys;
        public List<SelectedItemInfo<string>> txtExpirationYear5SelectedItemKeys;

        public new DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.PaymentForm.PaymentFormViewModel GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.PaymentForm.PaymentFormViewModel>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            return new DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.PaymentForm.PaymentFormViewModel();
        }
        new  public DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.PaymentForm.PaymentFormViewModel Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.PaymentForm.PaymentFormViewModel();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.PaymentForm.PaymentFormViewModel original)
        {
            if (original == null) return;
            base.Hydrate(original);
            original.Payment = Payment == null
                               ? null
                               : Payment.Convert();
            original.txtPaymentMethod0SelectedItems = txtPaymentMethod0SelectedItemKeys == null
                    ? new List<SelectedItemInfo<string>>()
                    : txtPaymentMethod0SelectedItemKeys.Select(x => new SelectedItemInfo<string>(x.SelectedItems.Select(y => y).ToList(), x.Indexes, x.FullRecordsetSelected)).ToList();
            original.txtExpirationMonth4SelectedItems = txtExpirationMonth4SelectedItemKeys == null
                    ? new List<SelectedItemInfo<string>>()
                    : txtExpirationMonth4SelectedItemKeys.Select(x => new SelectedItemInfo<string>(x.SelectedItems.Select(y => y).ToList(), x.Indexes, x.FullRecordsetSelected)).ToList();
            original.txtExpirationYear5SelectedItems = txtExpirationYear5SelectedItemKeys == null
                    ? new List<SelectedItemInfo<string>>()
                    : txtExpirationYear5SelectedItemKeys.Select(x => new SelectedItemInfo<string>(x.SelectedItems.Select(y => y).ToList(), x.Indexes, x.FullRecordsetSelected)).ToList();
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.Payment))]
    public class Payment_PaymentDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.Payment>
    {

        [JsonConstructor]
        public Payment_PaymentDTO() { }
        public Payment_PaymentDTO(DSS5_SupplyChainFinancialsOptimisation.BO.Payment original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            BankName = original.BankName;
            CardholderName = original.CardholderName;
            CardNumber = original.CardNumber;
            CCV = original.CCV;
            ExpirationMonth = original.ExpirationMonth;
            ExpirationYear = original.ExpirationYear;
            IBANNumber = original.IBANNumber;
            Id = original.Id;
            PaymentMethod = original.PaymentMethod;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public string BankName;
        public string CardholderName;
        public string CardNumber;
        public string CCV;
        public string ExpirationMonth;
        public string ExpirationYear;
        public string IBANNumber;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string PaymentMethod;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.Payment).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.Payment GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.Payment>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.Payment();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Payment>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.Payment Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.Payment();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.Payment original)
        {
            if (original == null) return;
            original.BankName = BankName;
            original.CardholderName = CardholderName;
            original.CardNumber = CardNumber;
            original.CCV = CCV;
            original.ExpirationMonth = ExpirationMonth;
            original.ExpirationYear = ExpirationYear;
            original.IBANNumber = IBANNumber;
            original.Id = Id ?? 0;
            original.PaymentMethod = PaymentMethod;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static Payment_PaymentDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Payment>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Payment_PaymentDTO(foundEntry);
            }
            return null;
        }
    }


    #region Datasource DTOs



    #endregion

}
