// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).
using System;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Linq;
using DSS5_SupplyChainFinancialsOptimisation.BO;
using DSS5_SupplyChainFinancialsOptimisation.UI.Controllers.BillOfLanding;
using AppCode;
using zAppDev.DotNet.Framework.Data;
using zAppDev.DotNet.Framework.Utilities;
using zAppDev.DotNet.Framework.Data.Domain;
using zAppDev.DotNet.Framework.Mvc;
using System.ComponentModel.DataAnnotations;
using DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.MasterPage;
using DSS5_SupplyChainFinancialsOptimisation.UI.Controllers.MasterPage;
namespace DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.BillOfLanding
{
    public class BillOfLandingViewModel : MasterPageViewModel
    {
        public DSS5_SupplyChainFinancialsOptimisation.BO.BillOfLanding BillOfLanding;
        public int? TransactionId;
        public DSS5_SupplyChainFinancialsOptimisation.BO.Intermediary ChoosenIntermediary;
        public List<DSS5_SupplyChainFinancialsOptimisation.BO.OrderProduct> Products;
        public List<SelectedItemInfo<DSS5_SupplyChainFinancialsOptimisation.BO.Order>> PickList1SelectedItems;
        public List<SelectedItemInfo<DSS5_SupplyChainFinancialsOptimisation.BO.Intermediary>> PickListSelectedItems;
        public List<SelectedItemInfo<DSS5_SupplyChainFinancialsOptimisation.BO.MeanOfTransport>> btnSelectMeanOfTransportSelectedItems;


        public BillOfLandingViewModel()
        {
            BillOfLanding = new DSS5_SupplyChainFinancialsOptimisation.BO.BillOfLanding();
            ChoosenIntermediary = new DSS5_SupplyChainFinancialsOptimisation.BO.Intermediary();
            Products = new List<DSS5_SupplyChainFinancialsOptimisation.BO.OrderProduct>();
        }


        public override void Evict()
        {
            var manager = MiniSessionManager.Instance;
            if (manager.Session.Contains(BillOfLanding))
            {
                manager.Session.Evict(BillOfLanding);
            }
            if (manager.Session.Contains(ChoosenIntermediary))
            {
                manager.Session.Evict(ChoosenIntermediary);
            }
            if (Products != null)
            {
                foreach (var item in Products)
                {
                    if (manager.Session.Contains(item))
                    {
                        manager.Session.Evict(item);
                    }
                }
            }
        }

    }


    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.BillOfLanding.BillOfLandingViewModel))]
    public class BillOfLandingViewModelDTO : MasterPageViewModelDTO, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.BillOfLanding.BillOfLandingViewModel>
    {

        [JsonConstructor]
        public BillOfLandingViewModelDTO() { }
        public BillOfLandingViewModelDTO(DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.BillOfLanding.BillOfLandingViewModel original, bool parentIsDirty = false)  : base(original)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            BillOfLanding = original.BillOfLanding == null ? null : new BillOfLanding_BillOfLandingDTO(original.BillOfLanding);
            TransactionId = original.TransactionId;
            ChoosenIntermediary = original.ChoosenIntermediary == null ? null : new ChoosenIntermediary_IntermediaryDTO(original.ChoosenIntermediary);
            Products = original.Products?.Select(x => new Products_OrderProductDTO(x)).ToList();
            PickList1SelectedItemKeys = original.PickList1SelectedItems == null
                                        ? null
                                        : original.PickList1SelectedItems.Select(x => new SelectedItemInfo<int?>(x.SelectedItems.Select(y => y.Id).ToList(), x.Indexes, x.FullRecordsetSelected)).ToList();
            PickListSelectedItemKeys = original.PickListSelectedItems == null
                                       ? null
                                       : original.PickListSelectedItems.Select(x => new SelectedItemInfo<int?>(x.SelectedItems.Select(y => y.Id).ToList(), x.Indexes, x.FullRecordsetSelected)).ToList();
            btnSelectMeanOfTransportSelectedItemKeys = original.btnSelectMeanOfTransportSelectedItems == null
                    ? null
                    : original.btnSelectMeanOfTransportSelectedItems.Select(x => new SelectedItemInfo<int?>(x.SelectedItems.Select(y => y.Id).ToList(), x.Indexes, x.FullRecordsetSelected)).ToList();
        }
        public BillOfLanding_BillOfLandingDTO BillOfLanding;
        public int? TransactionId;
        public ChoosenIntermediary_IntermediaryDTO ChoosenIntermediary;
        public List<Products_OrderProductDTO> Products;
        public new string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.BillOfLanding.BillOfLandingViewModel).FullName;
        public List<SelectedItemInfo<int?>> PickList1SelectedItemKeys;
        public List<SelectedItemInfo<int?>> PickListSelectedItemKeys;
        public List<SelectedItemInfo<int?>> btnSelectMeanOfTransportSelectedItemKeys;

        public new DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.BillOfLanding.BillOfLandingViewModel GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.BillOfLanding.BillOfLandingViewModel>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            return new DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.BillOfLanding.BillOfLandingViewModel();
        }
        new  public DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.BillOfLanding.BillOfLandingViewModel Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.BillOfLanding.BillOfLandingViewModel();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.BillOfLanding.BillOfLandingViewModel original)
        {
            if (original == null) return;
            base.Hydrate(original);
            original.BillOfLanding = BillOfLanding == null
                                     ? null
                                     : BillOfLanding.Convert();
            original.TransactionId = TransactionId;
            original.ChoosenIntermediary = ChoosenIntermediary == null
                                           ? null
                                           : ChoosenIntermediary.Convert();
            original.Products = Products == null
                                ? null
                                : Products.Select(q => q.Convert()).ToList();
            original.PickList1SelectedItems = PickList1SelectedItemKeys == null
                                              ? new List<SelectedItemInfo<DSS5_SupplyChainFinancialsOptimisation.BO.Order>>()
                                              : PickList1SelectedItemKeys.Select(x => new SelectedItemInfo<DSS5_SupplyChainFinancialsOptimisation.BO.Order>(x.SelectedItems.Select(y => ViewModels.BillOfLanding.OrderDataSet_OrderDTO.GetModelByKey(y)).ToList(), x.Indexes, x.FullRecordsetSelected)).ToList();
            original.PickListSelectedItems = PickListSelectedItemKeys == null
                                             ? new List<SelectedItemInfo<DSS5_SupplyChainFinancialsOptimisation.BO.Intermediary>>()
                                             : PickListSelectedItemKeys.Select(x => new SelectedItemInfo<DSS5_SupplyChainFinancialsOptimisation.BO.Intermediary>(x.SelectedItems.Select(y => ViewModels.BillOfLanding.IntermediaryDataSet_IntermediaryDTO.GetModelByKey(y)).ToList(), x.Indexes, x.FullRecordsetSelected)).ToList();
            original.btnSelectMeanOfTransportSelectedItems = btnSelectMeanOfTransportSelectedItemKeys == null
                    ? new List<SelectedItemInfo<DSS5_SupplyChainFinancialsOptimisation.BO.MeanOfTransport>>()
                    : btnSelectMeanOfTransportSelectedItemKeys.Select(x => new SelectedItemInfo<DSS5_SupplyChainFinancialsOptimisation.BO.MeanOfTransport>(x.SelectedItems.Select(y => ViewModels.BillOfLanding.MeanOfTransportDataSet_MeanOfTransportDTO.GetModelByKey(y)).ToList(), x.Indexes, x.FullRecordsetSelected)).ToList();
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.BillOfLanding))]
    public class BillOfLanding_BillOfLandingDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.BillOfLanding>
    {

        [JsonConstructor]
        public BillOfLanding_BillOfLandingDTO() { }
        public BillOfLanding_BillOfLandingDTO(DSS5_SupplyChainFinancialsOptimisation.BO.BillOfLanding original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            DeliveryDate = original.DeliveryDate;
            DeliveryPlace = original.DeliveryPlace;
            DOCNumber = original.DOCNumber;
            Id = original.Id;
            IsBuyerReceiving = original.IsBuyerReceiving;
            LandingDate = original.LandingDate;
            LandingPlace = original.LandingPlace;
            ReceivingPartyId = original.ReceivingPartyId;
            Orders = original.Orders?.Select(x => new BillOfLanding_BillOfLanding_Orders_OrderDTO(x)).ToList();
            Transaction = original.Transaction == null ? null : new BillOfLanding_BillOfLanding_Transaction_TransactionDTO(original.Transaction);
            MeanOfTransport = original.MeanOfTransport == null ? null : new BillOfLanding_BillOfLanding_MeanOfTransport_MeanOfTransportDTO(original.MeanOfTransport);
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public DateTime? DeliveryDate;
        public string DeliveryPlace;
        public int? DOCNumber;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public bool IsBuyerReceiving;
        public DateTime? LandingDate;
        public string LandingPlace;
        public int? ReceivingPartyId;
        public List<BillOfLanding_BillOfLanding_Orders_OrderDTO> Orders;
        public BillOfLanding_BillOfLanding_Transaction_TransactionDTO Transaction;
        public BillOfLanding_BillOfLanding_MeanOfTransport_MeanOfTransportDTO MeanOfTransport;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.BillOfLanding).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.BillOfLanding GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.BillOfLanding>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.BillOfLanding();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.BillOfLanding>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.BillOfLanding Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.BillOfLanding();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.BillOfLanding original)
        {
            if (original == null) return;
            original.DeliveryDate = DeliveryDate;
            original.DeliveryPlace = DeliveryPlace;
            original.DOCNumber = DOCNumber;
            original.Id = Id ?? 0;
            original.IsBuyerReceiving = IsBuyerReceiving;
            original.LandingDate = LandingDate;
            original.LandingPlace = LandingPlace;
            original.ReceivingPartyId = ReceivingPartyId;
            original.Orders = Orders == null
                              ? null
                              : Orders.Select(q => q.Convert()).ToList();
            original.Transaction = Transaction == null
                                   ? null
                                   : Transaction.Convert();
            original.MeanOfTransport = MeanOfTransport == null
                                       ? null
                                       : MeanOfTransport.Convert();
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static BillOfLanding_BillOfLandingDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.BillOfLanding>(parsedKey, true);
            if(foundEntry != null)
            {
                return new BillOfLanding_BillOfLandingDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.Order))]
    public class BillOfLanding_BillOfLanding_Orders_OrderDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.Order>
    {

        [JsonConstructor]
        public BillOfLanding_BillOfLanding_Orders_OrderDTO() { }
        public BillOfLanding_BillOfLanding_Orders_OrderDTO(DSS5_SupplyChainFinancialsOptimisation.BO.Order original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            DateOfOrder = original.DateOfOrder;
            DeliveryTo = original.DeliveryTo;
            EstimatedDateOfDelivery = original.EstimatedDateOfDelivery;
            From = original.From;
            Id = original.Id;
            IntermediateParty = original.IntermediateParty;
            IsCancelled = original.IsCancelled;
            OrderAmount = original.OrderAmount;
            OrderAttachment = original.OrderAttachment;
            OrderNumber = original.OrderNumber;
            PaymentTerms = original.PaymentTerms;
            Status = original.Status;
            TotalPrice = original.TotalPrice;
            CommercialAgreement = original.CommercialAgreement == null ? null : new BillOfLanding_BillOfLanding_Orders_Order_CommercialAgreement_CommercialAgreementDTO(original.CommercialAgreement);
            OrderProducts = original.OrderProducts?.Select(x => new BillOfLanding_BillOfLanding_Orders_Order_OrderProducts_OrderProductDTO(x)).ToList();
            ProofOfDeliveries = original.ProofOfDeliveries?.Select(x => new BillOfLanding_BillOfLanding_Orders_Order_ProofOfDeliveries_ProofOfDeliveryDTO(x)).ToList();
            Invoices = original.Invoices?.Select(x => new BillOfLanding_BillOfLanding_Orders_Order_Invoices_InvoiceDTO(x)).ToList();
            DeliveryNotes = original.DeliveryNotes?.Select(x => new BillOfLanding_BillOfLanding_Orders_Order_DeliveryNotes_DeliveryNoteDTO(x)).ToList();
            OrderStatus = original.OrderStatus == null ? null : new BillOfLanding_BillOfLanding_Orders_Order_OrderStatus_OrderStatusDTO(original.OrderStatus);
            FinalAcceptanceCertificate = original.FinalAcceptanceCertificate == null ? null : new BillOfLanding_BillOfLanding_Orders_Order_FinalAcceptanceCertificate_FinalAcceptanceCertificateDTO(original.FinalAcceptanceCertificate);
            CreditNotes = original.CreditNotes?.Select(x => new BillOfLanding_BillOfLanding_Orders_Order_CreditNotes_CreditNoteDTO(x)).ToList();
            OrderPayment = original.OrderPayment?.Select(x => new BillOfLanding_BillOfLanding_Orders_Order_OrderPayment_OrderPaymentDTO(x)).ToList();
            LetterOfCredits = original.LetterOfCredits?.Select(x => new BillOfLanding_BillOfLanding_Orders_Order_LetterOfCredits_LetterOfCreditDTO(x)).ToList();
            BillOfLandings = original.BillOfLandings?.Select(x => new BillOfLanding_BillOfLanding_Orders_Order_BillOfLandings_BillOfLandingDTO(x)).ToList();
            Transaction = original.Transaction == null ? null : new BillOfLanding_BillOfLanding_Orders_Order_Transaction_TransactionDTO(original.Transaction);
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public DateTime? DateOfOrder;
        public string DeliveryTo;
        public DateTime? EstimatedDateOfDelivery;
        public string From;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public bool IntermediateParty;
        public bool IsCancelled;
        public decimal? OrderAmount;
        public string OrderAttachment;
        public string OrderNumber;
        public string PaymentTerms;
        public DSS5_SupplyChainFinancialsOptimisation.BO.Status? Status;
        public decimal? TotalPrice;
        public BillOfLanding_BillOfLanding_Orders_Order_CommercialAgreement_CommercialAgreementDTO CommercialAgreement;
        public List<BillOfLanding_BillOfLanding_Orders_Order_OrderProducts_OrderProductDTO> OrderProducts;
        public List<BillOfLanding_BillOfLanding_Orders_Order_ProofOfDeliveries_ProofOfDeliveryDTO> ProofOfDeliveries;
        public List<BillOfLanding_BillOfLanding_Orders_Order_Invoices_InvoiceDTO> Invoices;
        public List<BillOfLanding_BillOfLanding_Orders_Order_DeliveryNotes_DeliveryNoteDTO> DeliveryNotes;
        public BillOfLanding_BillOfLanding_Orders_Order_OrderStatus_OrderStatusDTO OrderStatus;
        public BillOfLanding_BillOfLanding_Orders_Order_FinalAcceptanceCertificate_FinalAcceptanceCertificateDTO FinalAcceptanceCertificate;
        public List<BillOfLanding_BillOfLanding_Orders_Order_CreditNotes_CreditNoteDTO> CreditNotes;
        public List<BillOfLanding_BillOfLanding_Orders_Order_OrderPayment_OrderPaymentDTO> OrderPayment;
        public List<BillOfLanding_BillOfLanding_Orders_Order_LetterOfCredits_LetterOfCreditDTO> LetterOfCredits;
        public List<BillOfLanding_BillOfLanding_Orders_Order_BillOfLandings_BillOfLandingDTO> BillOfLandings;
        public BillOfLanding_BillOfLanding_Orders_Order_Transaction_TransactionDTO Transaction;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.Order).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.Order GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.Order>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.Order();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Order>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.Order Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.Order();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.Order original)
        {
            if (original == null) return;
            original.DateOfOrder = DateOfOrder;
            original.DeliveryTo = DeliveryTo;
            original.EstimatedDateOfDelivery = EstimatedDateOfDelivery;
            original.From = From;
            original.Id = Id ?? 0;
            original.IntermediateParty = IntermediateParty;
            original.IsCancelled = IsCancelled;
            original.OrderAmount = OrderAmount;
            original.OrderAttachment = OrderAttachment;
            original.OrderNumber = OrderNumber;
            original.PaymentTerms = PaymentTerms;
            original.Status = Status;
            original.TotalPrice = TotalPrice;
            original.CommercialAgreement = CommercialAgreement == null
                                           ? null
                                           : CommercialAgreement.Convert();
            original.OrderProducts = OrderProducts == null
                                     ? null
                                     : OrderProducts.Select(q => q.Convert()).ToList();
            original.ProofOfDeliveries = ProofOfDeliveries == null
                                         ? null
                                         : ProofOfDeliveries.Select(q => q.Convert()).ToList();
            original.Invoices = Invoices == null
                                ? null
                                : Invoices.Select(q => q.Convert()).ToList();
            original.DeliveryNotes = DeliveryNotes == null
                                     ? null
                                     : DeliveryNotes.Select(q => q.Convert()).ToList();
            original.OrderStatus = OrderStatus == null
                                   ? null
                                   : OrderStatus.Convert();
            original.FinalAcceptanceCertificate = FinalAcceptanceCertificate == null
                                                  ? null
                                                  : FinalAcceptanceCertificate.Convert();
            original.CreditNotes = CreditNotes == null
                                   ? null
                                   : CreditNotes.Select(q => q.Convert()).ToList();
            original.OrderPayment = OrderPayment == null
                                    ? null
                                    : OrderPayment.Select(q => q.Convert()).ToList();
            original.LetterOfCredits = LetterOfCredits == null
                                       ? null
                                       : LetterOfCredits.Select(q => q.Convert()).ToList();
            original.BillOfLandings = BillOfLandings == null
                                      ? null
                                      : BillOfLandings.Select(q => q.Convert()).ToList();
            original.Transaction = Transaction == null
                                   ? null
                                   : Transaction.Convert();
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static BillOfLanding_BillOfLanding_Orders_OrderDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Order>(parsedKey, true);
            if(foundEntry != null)
            {
                return new BillOfLanding_BillOfLanding_Orders_OrderDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.CommercialAgreement))]
    public class BillOfLanding_BillOfLanding_Orders_Order_CommercialAgreement_CommercialAgreementDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.CommercialAgreement>
    {

        [JsonConstructor]
        public BillOfLanding_BillOfLanding_Orders_Order_CommercialAgreement_CommercialAgreementDTO() { }
        public BillOfLanding_BillOfLanding_Orders_Order_CommercialAgreement_CommercialAgreementDTO(DSS5_SupplyChainFinancialsOptimisation.BO.CommercialAgreement original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            Id = original.Id;
            PaymentTerms = original.PaymentTerms;
            ProductCategory = original.ProductCategory;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string PaymentTerms;
        public string ProductCategory;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.CommercialAgreement).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.CommercialAgreement GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.CommercialAgreement>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.CommercialAgreement();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.CommercialAgreement>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.CommercialAgreement Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.CommercialAgreement();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.CommercialAgreement original)
        {
            if (original == null) return;
            original.Id = Id ?? 0;
            original.PaymentTerms = PaymentTerms;
            original.ProductCategory = ProductCategory;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static BillOfLanding_BillOfLanding_Orders_Order_CommercialAgreement_CommercialAgreementDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.CommercialAgreement>(parsedKey, true);
            if(foundEntry != null)
            {
                return new BillOfLanding_BillOfLanding_Orders_Order_CommercialAgreement_CommercialAgreementDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.OrderProduct))]
    public class BillOfLanding_BillOfLanding_Orders_Order_OrderProducts_OrderProductDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.OrderProduct>
    {

        [JsonConstructor]
        public BillOfLanding_BillOfLanding_Orders_Order_OrderProducts_OrderProductDTO() { }
        public BillOfLanding_BillOfLanding_Orders_Order_OrderProducts_OrderProductDTO(DSS5_SupplyChainFinancialsOptimisation.BO.OrderProduct original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            Code = original.Code;
            Description = original.Description;
            Id = original.Id;
            LineTotalPrice = original.LineTotalPrice;
            MeasurementUnit = original.MeasurementUnit;
            Price = original.Price;
            Quantity = original.Quantity;
            UnitValue = original.UnitValue;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public string Code;
        public string Description;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public decimal? LineTotalPrice;
        public string MeasurementUnit;
        public decimal? Price;
        public decimal? Quantity;
        public string UnitValue;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.OrderProduct).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.OrderProduct GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.OrderProduct>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.OrderProduct();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.OrderProduct>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.OrderProduct Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.OrderProduct();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.OrderProduct original)
        {
            if (original == null) return;
            original.Code = Code;
            original.Description = Description;
            original.Id = Id ?? 0;
            original.LineTotalPrice = LineTotalPrice;
            original.MeasurementUnit = MeasurementUnit;
            original.Price = Price;
            original.Quantity = Quantity;
            original.UnitValue = UnitValue;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static BillOfLanding_BillOfLanding_Orders_Order_OrderProducts_OrderProductDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.OrderProduct>(parsedKey, true);
            if(foundEntry != null)
            {
                return new BillOfLanding_BillOfLanding_Orders_Order_OrderProducts_OrderProductDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.ProofOfDelivery))]
    public class BillOfLanding_BillOfLanding_Orders_Order_ProofOfDeliveries_ProofOfDeliveryDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.ProofOfDelivery>
    {

        [JsonConstructor]
        public BillOfLanding_BillOfLanding_Orders_Order_ProofOfDeliveries_ProofOfDeliveryDTO() { }
        public BillOfLanding_BillOfLanding_Orders_Order_ProofOfDeliveries_ProofOfDeliveryDTO(DSS5_SupplyChainFinancialsOptimisation.BO.ProofOfDelivery original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            Comments = original.Comments;
            DateIssued = original.DateIssued;
            DeliveryStatus = original.DeliveryStatus;
            Id = original.Id;
            PODAttachment = original.PODAttachment;
            PODNumber = original.PODNumber;
            QualityStatus = original.QualityStatus;
            QuantityStatus = original.QuantityStatus;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public string Comments;
        public DateTime? DateIssued;
        public string DeliveryStatus;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string PODAttachment;
        public string PODNumber;
        public string QualityStatus;
        public string QuantityStatus;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.ProofOfDelivery).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.ProofOfDelivery GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.ProofOfDelivery>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.ProofOfDelivery();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.ProofOfDelivery>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.ProofOfDelivery Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.ProofOfDelivery();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.ProofOfDelivery original)
        {
            if (original == null) return;
            original.Comments = Comments;
            original.DateIssued = DateIssued;
            original.DeliveryStatus = DeliveryStatus;
            original.Id = Id ?? 0;
            original.PODAttachment = PODAttachment;
            original.PODNumber = PODNumber;
            original.QualityStatus = QualityStatus;
            original.QuantityStatus = QuantityStatus;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static BillOfLanding_BillOfLanding_Orders_Order_ProofOfDeliveries_ProofOfDeliveryDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.ProofOfDelivery>(parsedKey, true);
            if(foundEntry != null)
            {
                return new BillOfLanding_BillOfLanding_Orders_Order_ProofOfDeliveries_ProofOfDeliveryDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.Invoice))]
    public class BillOfLanding_BillOfLanding_Orders_Order_Invoices_InvoiceDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.Invoice>
    {

        [JsonConstructor]
        public BillOfLanding_BillOfLanding_Orders_Order_Invoices_InvoiceDTO() { }
        public BillOfLanding_BillOfLanding_Orders_Order_Invoices_InvoiceDTO(DSS5_SupplyChainFinancialsOptimisation.BO.Invoice original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            Amount = original.Amount;
            Attribute = original.Attribute;
            CumulativeBalance = original.CumulativeBalance;
            CustomerType = original.CustomerType;
            DateIssued = original.DateIssued;
            Description = original.Description;
            DescriptionTwo = original.DescriptionTwo;
            Id = original.Id;
            InvoiceAttachment = original.InvoiceAttachment;
            InvoiceNumber = original.InvoiceNumber;
            Status = original.Status;
            TotalPrice = original.TotalPrice;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public decimal? Amount;
        public string Attribute;
        public decimal? CumulativeBalance;
        public string CustomerType;
        public DateTime? DateIssued;
        public string Description;
        public string DescriptionTwo;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string InvoiceAttachment;
        public string InvoiceNumber;
        public DSS5_SupplyChainFinancialsOptimisation.BO.Status? Status;
        public decimal? TotalPrice;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.Invoice).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.Invoice GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.Invoice>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.Invoice();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Invoice>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.Invoice Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.Invoice();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.Invoice original)
        {
            if (original == null) return;
            original.Amount = Amount;
            original.Attribute = Attribute;
            original.CumulativeBalance = CumulativeBalance;
            original.CustomerType = CustomerType;
            original.DateIssued = DateIssued;
            original.Description = Description;
            original.DescriptionTwo = DescriptionTwo;
            original.Id = Id ?? 0;
            original.InvoiceAttachment = InvoiceAttachment;
            original.InvoiceNumber = InvoiceNumber;
            original.Status = Status;
            original.TotalPrice = TotalPrice;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static BillOfLanding_BillOfLanding_Orders_Order_Invoices_InvoiceDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Invoice>(parsedKey, true);
            if(foundEntry != null)
            {
                return new BillOfLanding_BillOfLanding_Orders_Order_Invoices_InvoiceDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.DeliveryNote))]
    public class BillOfLanding_BillOfLanding_Orders_Order_DeliveryNotes_DeliveryNoteDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.DeliveryNote>
    {

        [JsonConstructor]
        public BillOfLanding_BillOfLanding_Orders_Order_DeliveryNotes_DeliveryNoteDTO() { }
        public BillOfLanding_BillOfLanding_Orders_Order_DeliveryNotes_DeliveryNoteDTO(DSS5_SupplyChainFinancialsOptimisation.BO.DeliveryNote original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            Amount = original.Amount;
            DateIssued = original.DateIssued;
            DeliveryNoteNumber = original.DeliveryNoteNumber;
            Description = original.Description;
            DNoteAttachment = original.DNoteAttachment;
            Id = original.Id;
            Status = original.Status;
            TotalPrice = original.TotalPrice;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public decimal? Amount;
        public DateTime? DateIssued;
        public string DeliveryNoteNumber;
        public string Description;
        public string DNoteAttachment;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.Status? Status;
        public decimal? TotalPrice;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.DeliveryNote).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.DeliveryNote GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.DeliveryNote>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.DeliveryNote();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.DeliveryNote>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.DeliveryNote Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.DeliveryNote();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.DeliveryNote original)
        {
            if (original == null) return;
            original.Amount = Amount;
            original.DateIssued = DateIssued;
            original.DeliveryNoteNumber = DeliveryNoteNumber;
            original.Description = Description;
            original.DNoteAttachment = DNoteAttachment;
            original.Id = Id ?? 0;
            original.Status = Status;
            original.TotalPrice = TotalPrice;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static BillOfLanding_BillOfLanding_Orders_Order_DeliveryNotes_DeliveryNoteDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.DeliveryNote>(parsedKey, true);
            if(foundEntry != null)
            {
                return new BillOfLanding_BillOfLanding_Orders_Order_DeliveryNotes_DeliveryNoteDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.OrderStatus))]
    public class BillOfLanding_BillOfLanding_Orders_Order_OrderStatus_OrderStatusDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.OrderStatus>
    {

        [JsonConstructor]
        public BillOfLanding_BillOfLanding_Orders_Order_OrderStatus_OrderStatusDTO() { }
        public BillOfLanding_BillOfLanding_Orders_Order_OrderStatus_OrderStatusDTO(DSS5_SupplyChainFinancialsOptimisation.BO.OrderStatus original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            FinalOrdered = original.FinalOrdered;
            Id = original.Id;
            InitialOrdered = original.InitialOrdered;
            OrderdDateOccured = original.OrderdDateOccured;
            PaymentStatus = original.PaymentStatus;
            Status = original.Status;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public bool FinalOrdered;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public bool InitialOrdered;
        public DateTime? OrderdDateOccured;
        public bool PaymentStatus;
        public string Status;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.OrderStatus).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.OrderStatus GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.OrderStatus>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.OrderStatus();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.OrderStatus>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.OrderStatus Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.OrderStatus();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.OrderStatus original)
        {
            if (original == null) return;
            original.FinalOrdered = FinalOrdered;
            original.Id = Id ?? 0;
            original.InitialOrdered = InitialOrdered;
            original.OrderdDateOccured = OrderdDateOccured;
            original.PaymentStatus = PaymentStatus;
            original.Status = Status;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static BillOfLanding_BillOfLanding_Orders_Order_OrderStatus_OrderStatusDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.OrderStatus>(parsedKey, true);
            if(foundEntry != null)
            {
                return new BillOfLanding_BillOfLanding_Orders_Order_OrderStatus_OrderStatusDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.FinalAcceptanceCertificate))]
    public class BillOfLanding_BillOfLanding_Orders_Order_FinalAcceptanceCertificate_FinalAcceptanceCertificateDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.FinalAcceptanceCertificate>
    {

        [JsonConstructor]
        public BillOfLanding_BillOfLanding_Orders_Order_FinalAcceptanceCertificate_FinalAcceptanceCertificateDTO() { }
        public BillOfLanding_BillOfLanding_Orders_Order_FinalAcceptanceCertificate_FinalAcceptanceCertificateDTO(DSS5_SupplyChainFinancialsOptimisation.BO.FinalAcceptanceCertificate original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            Certificate = original.Certificate;
            Id = original.Id;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public string Certificate;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.FinalAcceptanceCertificate).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.FinalAcceptanceCertificate GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.FinalAcceptanceCertificate>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.FinalAcceptanceCertificate();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.FinalAcceptanceCertificate>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.FinalAcceptanceCertificate Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.FinalAcceptanceCertificate();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.FinalAcceptanceCertificate original)
        {
            if (original == null) return;
            original.Certificate = Certificate;
            original.Id = Id ?? 0;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static BillOfLanding_BillOfLanding_Orders_Order_FinalAcceptanceCertificate_FinalAcceptanceCertificateDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.FinalAcceptanceCertificate>(parsedKey, true);
            if(foundEntry != null)
            {
                return new BillOfLanding_BillOfLanding_Orders_Order_FinalAcceptanceCertificate_FinalAcceptanceCertificateDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.CreditNote))]
    public class BillOfLanding_BillOfLanding_Orders_Order_CreditNotes_CreditNoteDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.CreditNote>
    {

        [JsonConstructor]
        public BillOfLanding_BillOfLanding_Orders_Order_CreditNotes_CreditNoteDTO() { }
        public BillOfLanding_BillOfLanding_Orders_Order_CreditNotes_CreditNoteDTO(DSS5_SupplyChainFinancialsOptimisation.BO.CreditNote original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            Amount = original.Amount;
            CNoteAttachment = original.CNoteAttachment;
            CreditNoteDocument = original.CreditNoteDocument;
            CreditNoteNumber = original.CreditNoteNumber;
            DateIssued = original.DateIssued;
            Description = original.Description;
            Id = original.Id;
            Status = original.Status;
            TotalPrice = original.TotalPrice;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public decimal? Amount;
        public string CNoteAttachment;
        public string CreditNoteDocument;
        public string CreditNoteNumber;
        public DateTime? DateIssued;
        public string Description;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.Status? Status;
        public decimal? TotalPrice;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.CreditNote).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.CreditNote GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.CreditNote>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.CreditNote();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.CreditNote>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.CreditNote Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.CreditNote();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.CreditNote original)
        {
            if (original == null) return;
            original.Amount = Amount;
            original.CNoteAttachment = CNoteAttachment;
            original.CreditNoteDocument = CreditNoteDocument;
            original.CreditNoteNumber = CreditNoteNumber;
            original.DateIssued = DateIssued;
            original.Description = Description;
            original.Id = Id ?? 0;
            original.Status = Status;
            original.TotalPrice = TotalPrice;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static BillOfLanding_BillOfLanding_Orders_Order_CreditNotes_CreditNoteDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.CreditNote>(parsedKey, true);
            if(foundEntry != null)
            {
                return new BillOfLanding_BillOfLanding_Orders_Order_CreditNotes_CreditNoteDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.OrderPayment))]
    public class BillOfLanding_BillOfLanding_Orders_Order_OrderPayment_OrderPaymentDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.OrderPayment>
    {

        [JsonConstructor]
        public BillOfLanding_BillOfLanding_Orders_Order_OrderPayment_OrderPaymentDTO() { }
        public BillOfLanding_BillOfLanding_Orders_Order_OrderPayment_OrderPaymentDTO(DSS5_SupplyChainFinancialsOptimisation.BO.OrderPayment original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            DateIssued = original.DateIssued;
            Id = original.Id;
            PaymentAmount = original.PaymentAmount;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public DateTime? DateIssued;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public decimal? PaymentAmount;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.OrderPayment).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.OrderPayment GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.OrderPayment>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.OrderPayment();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.OrderPayment>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.OrderPayment Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.OrderPayment();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.OrderPayment original)
        {
            if (original == null) return;
            original.DateIssued = DateIssued;
            original.Id = Id ?? 0;
            original.PaymentAmount = PaymentAmount;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static BillOfLanding_BillOfLanding_Orders_Order_OrderPayment_OrderPaymentDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.OrderPayment>(parsedKey, true);
            if(foundEntry != null)
            {
                return new BillOfLanding_BillOfLanding_Orders_Order_OrderPayment_OrderPaymentDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.LetterOfCredit))]
    public class BillOfLanding_BillOfLanding_Orders_Order_LetterOfCredits_LetterOfCreditDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.LetterOfCredit>
    {

        [JsonConstructor]
        public BillOfLanding_BillOfLanding_Orders_Order_LetterOfCredits_LetterOfCreditDTO() { }
        public BillOfLanding_BillOfLanding_Orders_Order_LetterOfCredits_LetterOfCreditDTO(DSS5_SupplyChainFinancialsOptimisation.BO.LetterOfCredit original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            Calculated = original.Calculated;
            DateOfExpiry = original.DateOfExpiry;
            DateOfValidity = original.DateOfValidity;
            Detail = original.Detail;
            Id = original.Id;
            IssuingBank = original.IssuingBank;
            UploadOfScan = original.UploadOfScan;
            ValueOfLoC = original.ValueOfLoC;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public decimal? Calculated;
        public DateTime? DateOfExpiry;
        public DateTime? DateOfValidity;
        public string Detail;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string IssuingBank;
        public string UploadOfScan;
        public decimal? ValueOfLoC;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.LetterOfCredit).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.LetterOfCredit GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.LetterOfCredit>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.LetterOfCredit();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.LetterOfCredit>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.LetterOfCredit Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.LetterOfCredit();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.LetterOfCredit original)
        {
            if (original == null) return;
            original.Calculated = Calculated;
            original.DateOfExpiry = DateOfExpiry;
            original.DateOfValidity = DateOfValidity;
            original.Detail = Detail;
            original.Id = Id ?? 0;
            original.IssuingBank = IssuingBank;
            original.UploadOfScan = UploadOfScan;
            original.ValueOfLoC = ValueOfLoC;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static BillOfLanding_BillOfLanding_Orders_Order_LetterOfCredits_LetterOfCreditDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.LetterOfCredit>(parsedKey, true);
            if(foundEntry != null)
            {
                return new BillOfLanding_BillOfLanding_Orders_Order_LetterOfCredits_LetterOfCreditDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.BillOfLanding))]
    public class BillOfLanding_BillOfLanding_Orders_Order_BillOfLandings_BillOfLandingDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.BillOfLanding>
    {

        [JsonConstructor]
        public BillOfLanding_BillOfLanding_Orders_Order_BillOfLandings_BillOfLandingDTO() { }
        public BillOfLanding_BillOfLanding_Orders_Order_BillOfLandings_BillOfLandingDTO(DSS5_SupplyChainFinancialsOptimisation.BO.BillOfLanding original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            DeliveryDate = original.DeliveryDate;
            DeliveryPlace = original.DeliveryPlace;
            DOCNumber = original.DOCNumber;
            Id = original.Id;
            IsBuyerReceiving = original.IsBuyerReceiving;
            LandingDate = original.LandingDate;
            LandingPlace = original.LandingPlace;
            ReceivingPartyId = original.ReceivingPartyId;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public DateTime? DeliveryDate;
        public string DeliveryPlace;
        public int? DOCNumber;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public bool IsBuyerReceiving;
        public DateTime? LandingDate;
        public string LandingPlace;
        public int? ReceivingPartyId;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.BillOfLanding).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.BillOfLanding GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.BillOfLanding>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.BillOfLanding();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.BillOfLanding>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.BillOfLanding Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.BillOfLanding();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.BillOfLanding original)
        {
            if (original == null) return;
            original.DeliveryDate = DeliveryDate;
            original.DeliveryPlace = DeliveryPlace;
            original.DOCNumber = DOCNumber;
            original.Id = Id ?? 0;
            original.IsBuyerReceiving = IsBuyerReceiving;
            original.LandingDate = LandingDate;
            original.LandingPlace = LandingPlace;
            original.ReceivingPartyId = ReceivingPartyId;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static BillOfLanding_BillOfLanding_Orders_Order_BillOfLandings_BillOfLandingDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.BillOfLanding>(parsedKey, true);
            if(foundEntry != null)
            {
                return new BillOfLanding_BillOfLanding_Orders_Order_BillOfLandings_BillOfLandingDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.Transaction))]
    public class BillOfLanding_BillOfLanding_Orders_Order_Transaction_TransactionDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.Transaction>
    {

        [JsonConstructor]
        public BillOfLanding_BillOfLanding_Orders_Order_Transaction_TransactionDTO() { }
        public BillOfLanding_BillOfLanding_Orders_Order_Transaction_TransactionDTO(DSS5_SupplyChainFinancialsOptimisation.BO.Transaction original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            FundedAmount = original.FundedAmount;
            Id = original.Id;
            InvoicedDate = original.InvoicedDate;
            PaidByBuyer = original.PaidByBuyer;
            PaymentDate = original.PaymentDate;
            PaymentStatus = original.PaymentStatus;
            RestPaymentAmount = original.RestPaymentAmount;
            ToBePaidAmount = original.ToBePaidAmount;
            TransactionDateOccured = original.TransactionDateOccured;
            TransactionValue = original.TransactionValue;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public decimal? FundedAmount;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public DateTime? InvoicedDate;
        public bool PaidByBuyer;
        public DateTime? PaymentDate;
        public string PaymentStatus;
        public decimal? RestPaymentAmount;
        public decimal? ToBePaidAmount;
        public DateTime? TransactionDateOccured;
        public decimal? TransactionValue;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.Transaction).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.Transaction GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.Transaction>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.Transaction();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Transaction>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.Transaction Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.Transaction();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.Transaction original)
        {
            if (original == null) return;
            original.FundedAmount = FundedAmount;
            original.Id = Id ?? 0;
            original.InvoicedDate = InvoicedDate;
            original.PaidByBuyer = PaidByBuyer;
            original.PaymentDate = PaymentDate;
            original.PaymentStatus = PaymentStatus;
            original.RestPaymentAmount = RestPaymentAmount;
            original.ToBePaidAmount = ToBePaidAmount;
            original.TransactionDateOccured = TransactionDateOccured;
            original.TransactionValue = TransactionValue;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static BillOfLanding_BillOfLanding_Orders_Order_Transaction_TransactionDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Transaction>(parsedKey, true);
            if(foundEntry != null)
            {
                return new BillOfLanding_BillOfLanding_Orders_Order_Transaction_TransactionDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.Transaction))]
    public class BillOfLanding_BillOfLanding_Transaction_TransactionDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.Transaction>
    {

        [JsonConstructor]
        public BillOfLanding_BillOfLanding_Transaction_TransactionDTO() { }
        public BillOfLanding_BillOfLanding_Transaction_TransactionDTO(DSS5_SupplyChainFinancialsOptimisation.BO.Transaction original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            FundedAmount = original.FundedAmount;
            Id = original.Id;
            InvoicedDate = original.InvoicedDate;
            PaidByBuyer = original.PaidByBuyer;
            PaymentDate = original.PaymentDate;
            PaymentStatus = original.PaymentStatus;
            RestPaymentAmount = original.RestPaymentAmount;
            ToBePaidAmount = original.ToBePaidAmount;
            TransactionDateOccured = original.TransactionDateOccured;
            TransactionValue = original.TransactionValue;
            ImportedBuyer = original.ImportedBuyer == null ? null : new BillOfLanding_BillOfLanding_Transaction_Transaction_ImportedBuyer_ImportedBuyerDTO(original.ImportedBuyer);
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public decimal? FundedAmount;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public DateTime? InvoicedDate;
        public bool PaidByBuyer;
        public DateTime? PaymentDate;
        public string PaymentStatus;
        public decimal? RestPaymentAmount;
        public decimal? ToBePaidAmount;
        public DateTime? TransactionDateOccured;
        public decimal? TransactionValue;
        public BillOfLanding_BillOfLanding_Transaction_Transaction_ImportedBuyer_ImportedBuyerDTO ImportedBuyer;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.Transaction).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.Transaction GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.Transaction>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.Transaction();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Transaction>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.Transaction Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.Transaction();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.Transaction original)
        {
            if (original == null) return;
            original.FundedAmount = FundedAmount;
            original.Id = Id ?? 0;
            original.InvoicedDate = InvoicedDate;
            original.PaidByBuyer = PaidByBuyer;
            original.PaymentDate = PaymentDate;
            original.PaymentStatus = PaymentStatus;
            original.RestPaymentAmount = RestPaymentAmount;
            original.ToBePaidAmount = ToBePaidAmount;
            original.TransactionDateOccured = TransactionDateOccured;
            original.TransactionValue = TransactionValue;
            original.ImportedBuyer = ImportedBuyer == null
                                     ? null
                                     : ImportedBuyer.Convert();
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static BillOfLanding_BillOfLanding_Transaction_TransactionDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Transaction>(parsedKey, true);
            if(foundEntry != null)
            {
                return new BillOfLanding_BillOfLanding_Transaction_TransactionDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer))]
    public class BillOfLanding_BillOfLanding_Transaction_Transaction_ImportedBuyer_ImportedBuyerDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer>
    {

        [JsonConstructor]
        public BillOfLanding_BillOfLanding_Transaction_Transaction_ImportedBuyer_ImportedBuyerDTO() { }
        public BillOfLanding_BillOfLanding_Transaction_Transaction_ImportedBuyer_ImportedBuyerDTO(DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            AddressOne = original.AddressOne;
            AddressTwo = original.AddressTwo;
            Code = original.Code;
            Company = original.Company;
            Id = original.Id;
            Phone = original.Phone;
            VATNumber = original.VATNumber;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public string AddressOne;
        public string AddressTwo;
        public string Code;
        public string Company;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string Phone;
        public string VATNumber;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer original)
        {
            if (original == null) return;
            original.AddressOne = AddressOne;
            original.AddressTwo = AddressTwo;
            original.Code = Code;
            original.Company = Company;
            original.Id = Id ?? 0;
            original.Phone = Phone;
            original.VATNumber = VATNumber;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static BillOfLanding_BillOfLanding_Transaction_Transaction_ImportedBuyer_ImportedBuyerDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer>(parsedKey, true);
            if(foundEntry != null)
            {
                return new BillOfLanding_BillOfLanding_Transaction_Transaction_ImportedBuyer_ImportedBuyerDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.MeanOfTransport))]
    public class BillOfLanding_BillOfLanding_MeanOfTransport_MeanOfTransportDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.MeanOfTransport>
    {

        [JsonConstructor]
        public BillOfLanding_BillOfLanding_MeanOfTransport_MeanOfTransportDTO() { }
        public BillOfLanding_BillOfLanding_MeanOfTransport_MeanOfTransportDTO(DSS5_SupplyChainFinancialsOptimisation.BO.MeanOfTransport original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            ContainerId = original.ContainerId;
            Id = original.Id;
            LicensePlate = original.LicensePlate;
            ShipId = original.ShipId;
            TrainId = original.TrainId;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public string ContainerId;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string LicensePlate;
        public string ShipId;
        public string TrainId;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.MeanOfTransport).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.MeanOfTransport GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.MeanOfTransport>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.MeanOfTransport();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.MeanOfTransport>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.MeanOfTransport Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.MeanOfTransport();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.MeanOfTransport original)
        {
            if (original == null) return;
            original.ContainerId = ContainerId;
            original.Id = Id ?? 0;
            original.LicensePlate = LicensePlate;
            original.ShipId = ShipId;
            original.TrainId = TrainId;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static BillOfLanding_BillOfLanding_MeanOfTransport_MeanOfTransportDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.MeanOfTransport>(parsedKey, true);
            if(foundEntry != null)
            {
                return new BillOfLanding_BillOfLanding_MeanOfTransport_MeanOfTransportDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.Intermediary))]
    public class ChoosenIntermediary_IntermediaryDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.Intermediary>
    {

        [JsonConstructor]
        public ChoosenIntermediary_IntermediaryDTO() { }
        public ChoosenIntermediary_IntermediaryDTO(DSS5_SupplyChainFinancialsOptimisation.BO.Intermediary original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            Company = original.Company;
            EMail = original.EMail;
            GUID = original.GUID;
            Id = original.Id;
            IntermediaryType = original.IntermediaryType;
            OtherDescription = original.OtherDescription;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public string Company;
        public string EMail;
        public string GUID;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.IntermediaryType? IntermediaryType;
        public string OtherDescription;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.Intermediary).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.Intermediary GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.Intermediary>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.Intermediary();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Intermediary>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.Intermediary Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.Intermediary();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.Intermediary original)
        {
            if (original == null) return;
            original.Company = Company;
            original.EMail = EMail;
            original.GUID = GUID;
            original.Id = Id ?? 0;
            original.IntermediaryType = IntermediaryType;
            original.OtherDescription = OtherDescription;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static ChoosenIntermediary_IntermediaryDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Intermediary>(parsedKey, true);
            if(foundEntry != null)
            {
                return new ChoosenIntermediary_IntermediaryDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.OrderProduct))]
    public class Products_OrderProductDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.OrderProduct>
    {

        [JsonConstructor]
        public Products_OrderProductDTO() { }
        public Products_OrderProductDTO(DSS5_SupplyChainFinancialsOptimisation.BO.OrderProduct original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            Code = original.Code;
            Description = original.Description;
            Id = original.Id;
            LineTotalPrice = original.LineTotalPrice;
            MeasurementUnit = original.MeasurementUnit;
            Price = original.Price;
            Quantity = original.Quantity;
            UnitValue = original.UnitValue;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public string Code;
        public string Description;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public decimal? LineTotalPrice;
        public string MeasurementUnit;
        public decimal? Price;
        public decimal? Quantity;
        public string UnitValue;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.OrderProduct).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.OrderProduct GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.OrderProduct>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.OrderProduct();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.OrderProduct>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.OrderProduct Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.OrderProduct();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.OrderProduct original)
        {
            if (original == null) return;
            original.Code = Code;
            original.Description = Description;
            original.Id = Id ?? 0;
            original.LineTotalPrice = LineTotalPrice;
            original.MeasurementUnit = MeasurementUnit;
            original.Price = Price;
            original.Quantity = Quantity;
            original.UnitValue = UnitValue;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static Products_OrderProductDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.OrderProduct>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Products_OrderProductDTO(foundEntry);
            }
            return null;
        }
    }
    #region Controller Action DTOS
    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.Order))]
    public class OrderDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.Order>
    {
        public  string _runtimeType;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string OrderNumber;
        public DateTime? EstimatedDateOfDelivery;
        public DateTime? DateOfOrder;
        public decimal? OrderAmount;
        public decimal? TotalPrice;
        public string From;
        public string DeliveryTo;
        public List<OrderProductDTO> OrderProducts;


        [JsonConstructor]
        public OrderDTO() : base() {}
        public  static OrderDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Order>(parsedKey, false);
            if(foundEntry == null && !string.IsNullOrWhiteSpace(jbID))
            {
                if(int.TryParse(rawKey, out int _uniqueKey))
                {
                    var controller = new BillOfLandingController();
                    var method = controller.GetType().GetMethod($"Get_{jbID}_DatasourceQueryable");
                    var records = method.Invoke(controller, new object[] { null }) as IQueryable<DSS5_SupplyChainFinancialsOptimisation.BO.Order>;
                    foundEntry = records.Where(c => c._GetUniqueIdentifier() == _uniqueKey).FirstOrDefault();
                }
            }
            if(foundEntry != null)
            {
                return new OrderDTO(foundEntry);
            }
            return null;
        }
        public OrderDTO(DSS5_SupplyChainFinancialsOptimisation.BO.Order original, bool assignClientKey) : this(original)
        {
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public OrderDTO(DSS5_SupplyChainFinancialsOptimisation.BO.Order original)
        {
            if(original == null) throw new ApplicationException(BaseViewPage<object>.GetResourceValue("GlobalResources", "RES_DATASOURCE_Null_Value_In_Resultset", null, "The resultset of your DataSource contains null values."));
            _key = (original.Id == 0) ? original._GetUniqueIdentifier() as object : original.Id as object;
            _runtimeType = original?.GetType().FullName;
            Id = original.Id;
            if (!DTOHelper.SeenDTOInstances.ContainsKey(original))
            {
                DTOHelper.SeenDTOInstances.Add(original, this);
            }
            OrderNumber = original.OrderNumber;
            EstimatedDateOfDelivery = original.EstimatedDateOfDelivery;
            DateOfOrder = original.DateOfOrder;
            OrderAmount = original.OrderAmount;
            TotalPrice = original.TotalPrice;
            From = original.From;
            DeliveryTo = original.DeliveryTo;
            OrderProducts = original.OrderProducts == null
                            ? new List<OrderProductDTO>()
                            : original.OrderProducts.Select(q => DTOHelper.GetDTOFromModel<OrderProductDTO>(q as DSS5_SupplyChainFinancialsOptimisation.BO.OrderProduct)).ToList();
        }

        public static DSS5_SupplyChainFinancialsOptimisation.BO.Order GetModelByKey(object _key)
        {
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Order>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.Order Convert()
        {
            var model = new DSS5_SupplyChainFinancialsOptimisation.BO.Order();
            if (_key != null && _key.ToString() != "0")
            {
                var rawKey = _key.ToString();
                var parsedKey = int.Parse(rawKey);
                model = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Order>(parsedKey, false) ?? model;
            }
            if (!DTOHelper.SeenModelInstances.ContainsKey(this))
            {
                DTOHelper.SeenModelInstances.Add(this, model);
            }
            model.Id = Id ?? 0;
            model.OrderNumber = OrderNumber;
            model.EstimatedDateOfDelivery = EstimatedDateOfDelivery;
            model.DateOfOrder = DateOfOrder;
            model.OrderAmount = OrderAmount;
            model.TotalPrice = TotalPrice;
            model.From = From;
            model.DeliveryTo = DeliveryTo;
            model.OrderProducts = OrderProducts == null
                                  ? null
                                  : OrderProducts.Select(q => DTOHelper.GetModelFromDTO<DSS5_SupplyChainFinancialsOptimisation.BO.OrderProduct>(q)).ToList();
            DTOHelper.UpdateSeenModelInstances(this, model);
            return model;
        }

    }
    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.OrderProduct))]
    public class OrderProductDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.OrderProduct>
    {
        public  string _runtimeType;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string Code;
        public decimal? Quantity;
        public string Description;
        public string UnitValue;
        public string MeasurementUnit;


        [JsonConstructor]
        public OrderProductDTO() : base() {}
        public  static OrderProductDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.OrderProduct>(parsedKey, false);
            if(foundEntry == null && !string.IsNullOrWhiteSpace(jbID))
            {
                if(int.TryParse(rawKey, out int _uniqueKey))
                {
                    var controller = new BillOfLandingController();
                    var method = controller.GetType().GetMethod($"Get_{jbID}_DatasourceQueryable");
                    var records = method.Invoke(controller, new object[] { null }) as IQueryable<DSS5_SupplyChainFinancialsOptimisation.BO.OrderProduct>;
                    foundEntry = records.Where(c => c._GetUniqueIdentifier() == _uniqueKey).FirstOrDefault();
                }
            }
            if(foundEntry != null)
            {
                return new OrderProductDTO(foundEntry);
            }
            return null;
        }
        public OrderProductDTO(DSS5_SupplyChainFinancialsOptimisation.BO.OrderProduct original, bool assignClientKey) : this(original)
        {
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public OrderProductDTO(DSS5_SupplyChainFinancialsOptimisation.BO.OrderProduct original)
        {
            if(original == null) throw new ApplicationException(BaseViewPage<object>.GetResourceValue("GlobalResources", "RES_DATASOURCE_Null_Value_In_Resultset", null, "The resultset of your DataSource contains null values."));
            _key = (original.Id == 0) ? original._GetUniqueIdentifier() as object : original.Id as object;
            _runtimeType = original?.GetType().FullName;
            Id = original.Id;
            if (!DTOHelper.SeenDTOInstances.ContainsKey(original))
            {
                DTOHelper.SeenDTOInstances.Add(original, this);
            }
            Code = original.Code;
            Quantity = original.Quantity;
            Description = original.Description;
            UnitValue = original.UnitValue;
            MeasurementUnit = original.MeasurementUnit;
        }

        public static DSS5_SupplyChainFinancialsOptimisation.BO.OrderProduct GetModelByKey(object _key)
        {
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.OrderProduct>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.OrderProduct Convert()
        {
            var model = new DSS5_SupplyChainFinancialsOptimisation.BO.OrderProduct();
            if (_key != null && _key.ToString() != "0")
            {
                var rawKey = _key.ToString();
                var parsedKey = int.Parse(rawKey);
                model = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.OrderProduct>(parsedKey, false) ?? model;
            }
            if (!DTOHelper.SeenModelInstances.ContainsKey(this))
            {
                DTOHelper.SeenModelInstances.Add(this, model);
            }
            model.Id = Id ?? 0;
            model.Code = Code;
            model.Quantity = Quantity;
            model.Description = Description;
            model.UnitValue = UnitValue;
            model.MeasurementUnit = MeasurementUnit;
            DTOHelper.UpdateSeenModelInstances(this, model);
            return model;
        }

    }


    #endregion

    #region Unbound Datasource DTOS

    #endregion

    #region Datasource DTOs
    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.Order))]
    [DataSetDTO]
    public class OrderDataSet_OrderDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.Order>
    {
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.Order).FullName;
        public string _versionTimestamp;
        public  string _runtimeType;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string OrderNumber;
        public DateTime? DateOfOrder;
        public decimal? OrderAmount;
        public decimal? TotalPrice;


        [JsonConstructor]
        public OrderDataSet_OrderDTO() : base() {}
        public  static OrderDataSet_OrderDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Order>(parsedKey, false);
            if(foundEntry == null && !string.IsNullOrWhiteSpace(jbID))
            {
                if(int.TryParse(rawKey, out int _uniqueKey))
                {
                    var controller = new BillOfLandingController();
                    var method = controller.GetType().GetMethod($"Get_{jbID}_DatasourceQueryable");
                    var records = method.Invoke(controller, new object[] { null }) as IQueryable<DSS5_SupplyChainFinancialsOptimisation.BO.Order>;
                    foundEntry = records.Where(c => c._GetUniqueIdentifier() == _uniqueKey).FirstOrDefault();
                }
            }
            if(foundEntry != null)
            {
                return new OrderDataSet_OrderDTO(foundEntry);
            }
            return null;
        }
        public OrderDataSet_OrderDTO(DSS5_SupplyChainFinancialsOptimisation.BO.Order original, bool assignClientKey) : this(original)
        {
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public OrderDataSet_OrderDTO(DSS5_SupplyChainFinancialsOptimisation.BO.Order original)
        {
            if(original == null) throw new ApplicationException(BaseViewPage<object>.GetResourceValue("GlobalResources", "RES_DATASOURCE_Null_Value_In_Resultset", null, "The resultset of your DataSource contains null values."));
            _key = (original.Id == 0) ? original._GetUniqueIdentifier() as object : original.Id as object;
            _runtimeType = original?.GetType().FullName;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            Id = original.Id;
            if (!DTOHelper.SeenDTOInstances.ContainsKey(original))
            {
                DTOHelper.SeenDTOInstances.Add(original, this);
            }
            OrderNumber = original.OrderNumber;
            DateOfOrder = original.DateOfOrder;
            OrderAmount = original.OrderAmount;
            TotalPrice = original.TotalPrice;
        }

        public static DSS5_SupplyChainFinancialsOptimisation.BO.Order GetModelByKey(object _key)
        {
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Order>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.Order Convert()
        {
            var model = new DSS5_SupplyChainFinancialsOptimisation.BO.Order();
            if (_key != null && _key.ToString() != "0")
            {
                var rawKey = _key.ToString();
                var parsedKey = int.Parse(rawKey);
                model = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Order>(parsedKey, false) ?? model;
            }
            if (!DTOHelper.SeenModelInstances.ContainsKey(this))
            {
                DTOHelper.SeenModelInstances.Add(this, model);
            }
            model.Id = Id ?? 0;
            model.OrderNumber = OrderNumber;
            model.DateOfOrder = DateOfOrder;
            model.OrderAmount = OrderAmount;
            model.TotalPrice = TotalPrice;
            DTOHelper.UpdateSeenModelInstances(this, model);
            return model;
        }

    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.Intermediary))]
    [DataSetDTO]
    public class IntermediaryDataSet_IntermediaryDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.Intermediary>
    {
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.Intermediary).FullName;
        public string _versionTimestamp;
        public  string _runtimeType;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string Company;


        [JsonConstructor]
        public IntermediaryDataSet_IntermediaryDTO() : base() {}
        public  static IntermediaryDataSet_IntermediaryDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Intermediary>(parsedKey, false);
            if(foundEntry == null && !string.IsNullOrWhiteSpace(jbID))
            {
                if(int.TryParse(rawKey, out int _uniqueKey))
                {
                    var controller = new BillOfLandingController();
                    var method = controller.GetType().GetMethod($"Get_{jbID}_DatasourceQueryable");
                    var records = method.Invoke(controller, new object[] { null }) as IQueryable<DSS5_SupplyChainFinancialsOptimisation.BO.Intermediary>;
                    foundEntry = records.Where(c => c._GetUniqueIdentifier() == _uniqueKey).FirstOrDefault();
                }
            }
            if(foundEntry != null)
            {
                return new IntermediaryDataSet_IntermediaryDTO(foundEntry);
            }
            return null;
        }
        public IntermediaryDataSet_IntermediaryDTO(DSS5_SupplyChainFinancialsOptimisation.BO.Intermediary original, bool assignClientKey) : this(original)
        {
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public IntermediaryDataSet_IntermediaryDTO(DSS5_SupplyChainFinancialsOptimisation.BO.Intermediary original)
        {
            if(original == null) throw new ApplicationException(BaseViewPage<object>.GetResourceValue("GlobalResources", "RES_DATASOURCE_Null_Value_In_Resultset", null, "The resultset of your DataSource contains null values."));
            _key = (original.Id == 0) ? original._GetUniqueIdentifier() as object : original.Id as object;
            _runtimeType = original?.GetType().FullName;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            Id = original.Id;
            if (!DTOHelper.SeenDTOInstances.ContainsKey(original))
            {
                DTOHelper.SeenDTOInstances.Add(original, this);
            }
            Company = original.Company;
        }

        public static DSS5_SupplyChainFinancialsOptimisation.BO.Intermediary GetModelByKey(object _key)
        {
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Intermediary>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.Intermediary Convert()
        {
            var model = new DSS5_SupplyChainFinancialsOptimisation.BO.Intermediary();
            if (_key != null && _key.ToString() != "0")
            {
                var rawKey = _key.ToString();
                var parsedKey = int.Parse(rawKey);
                model = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Intermediary>(parsedKey, false) ?? model;
            }
            if (!DTOHelper.SeenModelInstances.ContainsKey(this))
            {
                DTOHelper.SeenModelInstances.Add(this, model);
            }
            model.Id = Id ?? 0;
            model.Company = Company;
            DTOHelper.UpdateSeenModelInstances(this, model);
            return model;
        }

    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.MeanOfTransport))]
    [DataSetDTO]
    public class MeanOfTransportDataSet_MeanOfTransportDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.MeanOfTransport>
    {
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.MeanOfTransport).FullName;
        public string _versionTimestamp;
        public  string _runtimeType;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string LicensePlate;
        public string ContainerId;
        public string ShipId;
        public string TrainId;


        [JsonConstructor]
        public MeanOfTransportDataSet_MeanOfTransportDTO() : base() {}
        public  static MeanOfTransportDataSet_MeanOfTransportDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.MeanOfTransport>(parsedKey, false);
            if(foundEntry == null && !string.IsNullOrWhiteSpace(jbID))
            {
                if(int.TryParse(rawKey, out int _uniqueKey))
                {
                    var controller = new BillOfLandingController();
                    var method = controller.GetType().GetMethod($"Get_{jbID}_DatasourceQueryable");
                    var records = method.Invoke(controller, new object[] { null }) as IQueryable<DSS5_SupplyChainFinancialsOptimisation.BO.MeanOfTransport>;
                    foundEntry = records.Where(c => c._GetUniqueIdentifier() == _uniqueKey).FirstOrDefault();
                }
            }
            if(foundEntry != null)
            {
                return new MeanOfTransportDataSet_MeanOfTransportDTO(foundEntry);
            }
            return null;
        }
        public MeanOfTransportDataSet_MeanOfTransportDTO(DSS5_SupplyChainFinancialsOptimisation.BO.MeanOfTransport original, bool assignClientKey) : this(original)
        {
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public MeanOfTransportDataSet_MeanOfTransportDTO(DSS5_SupplyChainFinancialsOptimisation.BO.MeanOfTransport original)
        {
            if(original == null) throw new ApplicationException(BaseViewPage<object>.GetResourceValue("GlobalResources", "RES_DATASOURCE_Null_Value_In_Resultset", null, "The resultset of your DataSource contains null values."));
            _key = (original.Id == 0) ? original._GetUniqueIdentifier() as object : original.Id as object;
            _runtimeType = original?.GetType().FullName;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            Id = original.Id;
            if (!DTOHelper.SeenDTOInstances.ContainsKey(original))
            {
                DTOHelper.SeenDTOInstances.Add(original, this);
            }
            LicensePlate = original.LicensePlate;
            ContainerId = original.ContainerId;
            ShipId = original.ShipId;
            TrainId = original.TrainId;
        }

        public static DSS5_SupplyChainFinancialsOptimisation.BO.MeanOfTransport GetModelByKey(object _key)
        {
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.MeanOfTransport>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.MeanOfTransport Convert()
        {
            var model = new DSS5_SupplyChainFinancialsOptimisation.BO.MeanOfTransport();
            if (_key != null && _key.ToString() != "0")
            {
                var rawKey = _key.ToString();
                var parsedKey = int.Parse(rawKey);
                model = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.MeanOfTransport>(parsedKey, false) ?? model;
            }
            if (!DTOHelper.SeenModelInstances.ContainsKey(this))
            {
                DTOHelper.SeenModelInstances.Add(this, model);
            }
            model.Id = Id ?? 0;
            model.LicensePlate = LicensePlate;
            model.ContainerId = ContainerId;
            model.ShipId = ShipId;
            model.TrainId = TrainId;
            DTOHelper.UpdateSeenModelInstances(this, model);
            return model;
        }

    }

    #endregion

}
