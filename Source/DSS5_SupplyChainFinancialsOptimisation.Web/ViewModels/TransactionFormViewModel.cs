// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).
using System;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Linq;
using DSS5_SupplyChainFinancialsOptimisation.BO;
using DSS5_SupplyChainFinancialsOptimisation.UI.Controllers.TransactionForm;
using AppCode;
using zAppDev.DotNet.Framework.Data;
using zAppDev.DotNet.Framework.Utilities;
using zAppDev.DotNet.Framework.Data.Domain;
using zAppDev.DotNet.Framework.Mvc;
using System.ComponentModel.DataAnnotations;
using DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.MasterPage;
using DSS5_SupplyChainFinancialsOptimisation.UI.Controllers.MasterPage;
namespace DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.TransactionForm
{
    public class TransactionFormViewModel : MasterPageViewModel
    {
        public DSS5_SupplyChainFinancialsOptimisation.BO.Transaction Transaction;
        public string CodeText;
        public bool IsSupplier;
        public List<SelectedItemInfo<DSS5_SupplyChainFinancialsOptimisation.BO.CommercialAgreement>> btnSelectCommercialAgreementSelectedItems;


        public TransactionFormViewModel()
        {
            Transaction = new DSS5_SupplyChainFinancialsOptimisation.BO.Transaction();
        }


        public override void Evict()
        {
            var manager = MiniSessionManager.Instance;
            if (manager.Session.Contains(Transaction))
            {
                manager.Session.Evict(Transaction);
            }
        }

    }


    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.TransactionForm.TransactionFormViewModel))]
    public class TransactionFormViewModelDTO : MasterPageViewModelDTO, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.TransactionForm.TransactionFormViewModel>
    {

        [JsonConstructor]
        public TransactionFormViewModelDTO() { }
        public TransactionFormViewModelDTO(DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.TransactionForm.TransactionFormViewModel original, bool parentIsDirty = false)  : base(original)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            Transaction = original.Transaction == null ? null : new Transaction_TransactionDTO(original.Transaction);
            CodeText = original.CodeText;
            IsSupplier = original.IsSupplier;
            btnSelectCommercialAgreementSelectedItemKeys = original.btnSelectCommercialAgreementSelectedItems == null
                    ? null
                    : original.btnSelectCommercialAgreementSelectedItems.Select(x => new SelectedItemInfo<int?>(x.SelectedItems.Select(y => y.Id).ToList(), x.Indexes, x.FullRecordsetSelected)).ToList();
        }
        public Transaction_TransactionDTO Transaction;
        public string CodeText;
        public bool IsSupplier;
        public new string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.TransactionForm.TransactionFormViewModel).FullName;
        public List<SelectedItemInfo<int?>> btnSelectCommercialAgreementSelectedItemKeys;

        public new DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.TransactionForm.TransactionFormViewModel GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.TransactionForm.TransactionFormViewModel>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            return new DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.TransactionForm.TransactionFormViewModel();
        }
        new  public DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.TransactionForm.TransactionFormViewModel Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.TransactionForm.TransactionFormViewModel();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.TransactionForm.TransactionFormViewModel original)
        {
            if (original == null) return;
            base.Hydrate(original);
            original.Transaction = Transaction == null
                                   ? null
                                   : Transaction.Convert();
            original.CodeText = CodeText;
            original.IsSupplier = IsSupplier;
            original.btnSelectCommercialAgreementSelectedItems = btnSelectCommercialAgreementSelectedItemKeys == null
                    ? new List<SelectedItemInfo<DSS5_SupplyChainFinancialsOptimisation.BO.CommercialAgreement>>()
                    : btnSelectCommercialAgreementSelectedItemKeys.Select(x => new SelectedItemInfo<DSS5_SupplyChainFinancialsOptimisation.BO.CommercialAgreement>(x.SelectedItems.Select(y => ViewModels.TransactionForm.CommercialAgreementDataSource_CommercialAgreementDTO.GetModelByKey(y)).ToList(), x.Indexes, x.FullRecordsetSelected)).ToList();
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.Transaction))]
    public class Transaction_TransactionDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.Transaction>
    {

        [JsonConstructor]
        public Transaction_TransactionDTO() { }
        public Transaction_TransactionDTO(DSS5_SupplyChainFinancialsOptimisation.BO.Transaction original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            FundedAmount = original.FundedAmount;
            Id = original.Id;
            PaidByBuyer = original.PaidByBuyer;
            PaymentStatus = original.PaymentStatus;
            RestPaymentAmount = original.RestPaymentAmount;
            ToBePaidAmount = original.ToBePaidAmount;
            TransactionDateOccured = original.TransactionDateOccured;
            TransactionValue = original.TransactionValue;
            CommercialAgreement = original.CommercialAgreement == null ? null : new Transaction_Transaction_CommercialAgreement_CommercialAgreementDTO(original.CommercialAgreement);
            Orders = original.Orders?.Select(x => new Transaction_Transaction_Orders_OrderDTO(x)).ToList();
            CreditNotes = original.CreditNotes?.Select(x => new Transaction_Transaction_CreditNotes_CreditNoteDTO(x)).ToList();
            DeliveryNotes = original.DeliveryNotes?.Select(x => new Transaction_Transaction_DeliveryNotes_DeliveryNoteDTO(x)).ToList();
            Invoices = original.Invoices?.Select(x => new Transaction_Transaction_Invoices_InvoiceDTO(x)).ToList();
            ProofOfDeliveries = original.ProofOfDeliveries?.Select(x => new Transaction_Transaction_ProofOfDeliveries_ProofOfDeliveryDTO(x)).ToList();
            TransactionStatus = original.TransactionStatus == null ? null : new Transaction_Transaction_TransactionStatus_TransactionStatusDTO(original.TransactionStatus);
            ImportedBuyer = original.ImportedBuyer == null ? null : new Transaction_Transaction_ImportedBuyer_ImportedBuyerDTO(original.ImportedBuyer);
            Supplier = original.Supplier == null ? null : new Transaction_Transaction_Supplier_SupplierDTO(original.Supplier);
            LetterOfCredits = original.LetterOfCredits?.Select(x => new Transaction_Transaction_LetterOfCredits_LetterOfCreditDTO(x)).ToList();
            BillOfLandings = original.BillOfLandings?.Select(x => new Transaction_Transaction_BillOfLandings_BillOfLandingDTO(x)).ToList();
            CustomsClearingDocumentations = original.CustomsClearingDocumentations?.Select(x => new Transaction_Transaction_CustomsClearingDocumentations_CustomsClearingDocumentationDTO(x)).ToList();
            PartialProofOfDeliveries = original.PartialProofOfDeliveries?.Select(x => new Transaction_Transaction_PartialProofOfDeliveries_PartialProofOfDeliveryDTO(x)).ToList();
            TransactionOverview = original.TransactionOverview == null ? null : new Transaction_Transaction_TransactionOverview_TransactionOverviewDTO(original.TransactionOverview);
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public decimal? FundedAmount;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public bool PaidByBuyer;
        public string PaymentStatus;
        public decimal? RestPaymentAmount;
        public decimal? ToBePaidAmount;
        public DateTime? TransactionDateOccured;
        public decimal? TransactionValue;
        public Transaction_Transaction_CommercialAgreement_CommercialAgreementDTO CommercialAgreement;
        public List<Transaction_Transaction_Orders_OrderDTO> Orders;
        public List<Transaction_Transaction_CreditNotes_CreditNoteDTO> CreditNotes;
        public List<Transaction_Transaction_DeliveryNotes_DeliveryNoteDTO> DeliveryNotes;
        public List<Transaction_Transaction_Invoices_InvoiceDTO> Invoices;
        public List<Transaction_Transaction_ProofOfDeliveries_ProofOfDeliveryDTO> ProofOfDeliveries;
        public Transaction_Transaction_TransactionStatus_TransactionStatusDTO TransactionStatus;
        public Transaction_Transaction_ImportedBuyer_ImportedBuyerDTO ImportedBuyer;
        public Transaction_Transaction_Supplier_SupplierDTO Supplier;
        public List<Transaction_Transaction_LetterOfCredits_LetterOfCreditDTO> LetterOfCredits;
        public List<Transaction_Transaction_BillOfLandings_BillOfLandingDTO> BillOfLandings;
        public List<Transaction_Transaction_CustomsClearingDocumentations_CustomsClearingDocumentationDTO> CustomsClearingDocumentations;
        public List<Transaction_Transaction_PartialProofOfDeliveries_PartialProofOfDeliveryDTO> PartialProofOfDeliveries;
        public Transaction_Transaction_TransactionOverview_TransactionOverviewDTO TransactionOverview;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.Transaction).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.Transaction GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.Transaction>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.Transaction();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Transaction>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.Transaction Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.Transaction();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.Transaction original)
        {
            if (original == null) return;
            original.FundedAmount = FundedAmount;
            original.Id = Id ?? 0;
            original.PaidByBuyer = PaidByBuyer;
            original.PaymentStatus = PaymentStatus;
            original.RestPaymentAmount = RestPaymentAmount;
            original.ToBePaidAmount = ToBePaidAmount;
            original.TransactionDateOccured = TransactionDateOccured;
            original.TransactionValue = TransactionValue;
            original.CommercialAgreement = CommercialAgreement == null
                                           ? null
                                           : CommercialAgreement.Convert();
            original.Orders = Orders == null
                              ? null
                              : Orders.Select(q => q.Convert()).ToList();
            original.CreditNotes = CreditNotes == null
                                   ? null
                                   : CreditNotes.Select(q => q.Convert()).ToList();
            original.DeliveryNotes = DeliveryNotes == null
                                     ? null
                                     : DeliveryNotes.Select(q => q.Convert()).ToList();
            original.Invoices = Invoices == null
                                ? null
                                : Invoices.Select(q => q.Convert()).ToList();
            original.ProofOfDeliveries = ProofOfDeliveries == null
                                         ? null
                                         : ProofOfDeliveries.Select(q => q.Convert()).ToList();
            original.TransactionStatus = TransactionStatus == null
                                         ? null
                                         : TransactionStatus.Convert();
            original.ImportedBuyer = ImportedBuyer == null
                                     ? null
                                     : ImportedBuyer.Convert();
            original.Supplier = Supplier == null
                                ? null
                                : Supplier.Convert();
            original.LetterOfCredits = LetterOfCredits == null
                                       ? null
                                       : LetterOfCredits.Select(q => q.Convert()).ToList();
            original.BillOfLandings = BillOfLandings == null
                                      ? null
                                      : BillOfLandings.Select(q => q.Convert()).ToList();
            original.CustomsClearingDocumentations = CustomsClearingDocumentations == null
                    ? null
                    : CustomsClearingDocumentations.Select(q => q.Convert()).ToList();
            original.PartialProofOfDeliveries = PartialProofOfDeliveries == null
                                                ? null
                                                : PartialProofOfDeliveries.Select(q => q.Convert()).ToList();
            original.TransactionOverview = TransactionOverview == null
                                           ? null
                                           : TransactionOverview.Convert();
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static Transaction_TransactionDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Transaction>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Transaction_TransactionDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.CommercialAgreement))]
    public class Transaction_Transaction_CommercialAgreement_CommercialAgreementDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.CommercialAgreement>
    {

        [JsonConstructor]
        public Transaction_Transaction_CommercialAgreement_CommercialAgreementDTO() { }
        public Transaction_Transaction_CommercialAgreement_CommercialAgreementDTO(DSS5_SupplyChainFinancialsOptimisation.BO.CommercialAgreement original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            Id = original.Id;
            PaymentTerms = original.PaymentTerms;
            ImportedBuyer = original.ImportedBuyer == null ? null : new Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerDTO(original.ImportedBuyer);
            Agreement = original.Agreement == null ? null : new Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_AgreementDTO(original.Agreement);
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string PaymentTerms;
        public Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerDTO ImportedBuyer;
        public Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_AgreementDTO Agreement;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.CommercialAgreement).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.CommercialAgreement GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.CommercialAgreement>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.CommercialAgreement();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.CommercialAgreement>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.CommercialAgreement Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.CommercialAgreement();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.CommercialAgreement original)
        {
            if (original == null) return;
            original.Id = Id ?? 0;
            original.PaymentTerms = PaymentTerms;
            original.ImportedBuyer = ImportedBuyer == null
                                     ? null
                                     : ImportedBuyer.Convert();
            original.Agreement = Agreement == null
                                 ? null
                                 : Agreement.Convert();
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static Transaction_Transaction_CommercialAgreement_CommercialAgreementDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.CommercialAgreement>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Transaction_Transaction_CommercialAgreement_CommercialAgreementDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer))]
    public class Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer>
    {

        [JsonConstructor]
        public Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerDTO() { }
        public Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerDTO(DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            Code = original.Code;
            Company = original.Company;
            Id = original.Id;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public string Code;
        public string Company;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer original)
        {
            if (original == null) return;
            original.Code = Code;
            original.Company = Company;
            original.Id = Id ?? 0;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Transaction_Transaction_CommercialAgreement_CommercialAgreement_ImportedBuyer_ImportedBuyerDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.Agreement))]
    public class Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_AgreementDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.Agreement>
    {

        [JsonConstructor]
        public Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_AgreementDTO() { }
        public Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_AgreementDTO(DSS5_SupplyChainFinancialsOptimisation.BO.Agreement original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            FundedRate = original.FundedRate;
            Id = original.Id;
            InterestRate = original.InterestRate;
            Investor = original.Investor == null ? null : new Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_Agreement_Investor_InvestorDTO(original.Investor);
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public decimal? FundedRate;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public decimal? InterestRate;
        public Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_Agreement_Investor_InvestorDTO Investor;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.Agreement).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.Agreement GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.Agreement>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.Agreement();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Agreement>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.Agreement Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.Agreement();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.Agreement original)
        {
            if (original == null) return;
            original.FundedRate = FundedRate;
            original.Id = Id ?? 0;
            original.InterestRate = InterestRate;
            original.Investor = Investor == null
                                ? null
                                : Investor.Convert();
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_AgreementDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Agreement>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_AgreementDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.Investor))]
    public class Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_Agreement_Investor_InvestorDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.Investor>
    {

        [JsonConstructor]
        public Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_Agreement_Investor_InvestorDTO() { }
        public Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_Agreement_Investor_InvestorDTO(DSS5_SupplyChainFinancialsOptimisation.BO.Investor original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.UserName as object;
            Name = original.Name;
            UserName = original.UserName;
            _clientKey = DTOHelper.GetClientKey(original, UserName);
        }
        public string Name;
        public string UserName;
        public new object _key
        {
            get;
            set;
        }
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.Investor).FullName;
        public override List<string> _baseClasses => new List<string> {typeof(zAppDev.DotNet.Framework.Identity.Model.ApplicationUser).FullName};
        public DSS5_SupplyChainFinancialsOptimisation.BO.Investor GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.Investor>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = (rawKey);
            if (parsedKey == default(string) || Equals(parsedKey, default(string)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.Investor();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Investor>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.Investor Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.Investor();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.Investor original)
        {
            if (original == null) return;
            original.Name = Name;
            original.UserName = UserName ?? "";
        }
        public static Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_Agreement_Investor_InvestorDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = (rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Investor>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Transaction_Transaction_CommercialAgreement_CommercialAgreement_Agreement_Agreement_Investor_InvestorDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.Order))]
    public class Transaction_Transaction_Orders_OrderDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.Order>
    {

        [JsonConstructor]
        public Transaction_Transaction_Orders_OrderDTO() { }
        public Transaction_Transaction_Orders_OrderDTO(DSS5_SupplyChainFinancialsOptimisation.BO.Order original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            DateOfOrder = original.DateOfOrder;
            DeliveryTo = original.DeliveryTo;
            From = original.From;
            Id = original.Id;
            OrderNumber = original.OrderNumber;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public DateTime? DateOfOrder;
        public string DeliveryTo;
        public string From;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string OrderNumber;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.Order).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.Order GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.Order>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.Order();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Order>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.Order Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.Order();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.Order original)
        {
            if (original == null) return;
            original.DateOfOrder = DateOfOrder;
            original.DeliveryTo = DeliveryTo;
            original.From = From;
            original.Id = Id ?? 0;
            original.OrderNumber = OrderNumber;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static Transaction_Transaction_Orders_OrderDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Order>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Transaction_Transaction_Orders_OrderDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.CreditNote))]
    public class Transaction_Transaction_CreditNotes_CreditNoteDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.CreditNote>
    {

        [JsonConstructor]
        public Transaction_Transaction_CreditNotes_CreditNoteDTO() { }
        public Transaction_Transaction_CreditNotes_CreditNoteDTO(DSS5_SupplyChainFinancialsOptimisation.BO.CreditNote original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            Amount = original.Amount;
            CreditNoteNumber = original.CreditNoteNumber;
            DateIssued = original.DateIssued;
            Description = original.Description;
            Id = original.Id;
            TotalPrice = original.TotalPrice;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public decimal? Amount;
        public string CreditNoteNumber;
        public DateTime? DateIssued;
        public string Description;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public decimal? TotalPrice;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.CreditNote).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.CreditNote GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.CreditNote>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.CreditNote();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.CreditNote>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.CreditNote Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.CreditNote();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.CreditNote original)
        {
            if (original == null) return;
            original.Amount = Amount;
            original.CreditNoteNumber = CreditNoteNumber;
            original.DateIssued = DateIssued;
            original.Description = Description;
            original.Id = Id ?? 0;
            original.TotalPrice = TotalPrice;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static Transaction_Transaction_CreditNotes_CreditNoteDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.CreditNote>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Transaction_Transaction_CreditNotes_CreditNoteDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.DeliveryNote))]
    public class Transaction_Transaction_DeliveryNotes_DeliveryNoteDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.DeliveryNote>
    {

        [JsonConstructor]
        public Transaction_Transaction_DeliveryNotes_DeliveryNoteDTO() { }
        public Transaction_Transaction_DeliveryNotes_DeliveryNoteDTO(DSS5_SupplyChainFinancialsOptimisation.BO.DeliveryNote original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            Amount = original.Amount;
            DateIssued = original.DateIssued;
            DeliveryNoteNumber = original.DeliveryNoteNumber;
            Id = original.Id;
            TotalPrice = original.TotalPrice;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public decimal? Amount;
        public DateTime? DateIssued;
        public string DeliveryNoteNumber;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public decimal? TotalPrice;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.DeliveryNote).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.DeliveryNote GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.DeliveryNote>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.DeliveryNote();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.DeliveryNote>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.DeliveryNote Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.DeliveryNote();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.DeliveryNote original)
        {
            if (original == null) return;
            original.Amount = Amount;
            original.DateIssued = DateIssued;
            original.DeliveryNoteNumber = DeliveryNoteNumber;
            original.Id = Id ?? 0;
            original.TotalPrice = TotalPrice;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static Transaction_Transaction_DeliveryNotes_DeliveryNoteDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.DeliveryNote>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Transaction_Transaction_DeliveryNotes_DeliveryNoteDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.Invoice))]
    public class Transaction_Transaction_Invoices_InvoiceDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.Invoice>
    {

        [JsonConstructor]
        public Transaction_Transaction_Invoices_InvoiceDTO() { }
        public Transaction_Transaction_Invoices_InvoiceDTO(DSS5_SupplyChainFinancialsOptimisation.BO.Invoice original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            Amount = original.Amount;
            DateIssued = original.DateIssued;
            Id = original.Id;
            InvoiceNumber = original.InvoiceNumber;
            TotalPrice = original.TotalPrice;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public decimal? Amount;
        public DateTime? DateIssued;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string InvoiceNumber;
        public decimal? TotalPrice;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.Invoice).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.Invoice GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.Invoice>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.Invoice();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Invoice>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.Invoice Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.Invoice();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.Invoice original)
        {
            if (original == null) return;
            original.Amount = Amount;
            original.DateIssued = DateIssued;
            original.Id = Id ?? 0;
            original.InvoiceNumber = InvoiceNumber;
            original.TotalPrice = TotalPrice;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static Transaction_Transaction_Invoices_InvoiceDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Invoice>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Transaction_Transaction_Invoices_InvoiceDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.ProofOfDelivery))]
    public class Transaction_Transaction_ProofOfDeliveries_ProofOfDeliveryDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.ProofOfDelivery>
    {

        [JsonConstructor]
        public Transaction_Transaction_ProofOfDeliveries_ProofOfDeliveryDTO() { }
        public Transaction_Transaction_ProofOfDeliveries_ProofOfDeliveryDTO(DSS5_SupplyChainFinancialsOptimisation.BO.ProofOfDelivery original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            DateIssued = original.DateIssued;
            DeliveryStatus = original.DeliveryStatus;
            Id = original.Id;
            PODNumber = original.PODNumber;
            QualityStatus = original.QualityStatus;
            QuantityStatus = original.QuantityStatus;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public DateTime? DateIssued;
        public string DeliveryStatus;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string PODNumber;
        public string QualityStatus;
        public string QuantityStatus;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.ProofOfDelivery).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.ProofOfDelivery GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.ProofOfDelivery>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.ProofOfDelivery();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.ProofOfDelivery>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.ProofOfDelivery Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.ProofOfDelivery();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.ProofOfDelivery original)
        {
            if (original == null) return;
            original.DateIssued = DateIssued;
            original.DeliveryStatus = DeliveryStatus;
            original.Id = Id ?? 0;
            original.PODNumber = PODNumber;
            original.QualityStatus = QualityStatus;
            original.QuantityStatus = QuantityStatus;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static Transaction_Transaction_ProofOfDeliveries_ProofOfDeliveryDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.ProofOfDelivery>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Transaction_Transaction_ProofOfDeliveries_ProofOfDeliveryDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.TransactionStatus))]
    public class Transaction_Transaction_TransactionStatus_TransactionStatusDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.TransactionStatus>
    {

        [JsonConstructor]
        public Transaction_Transaction_TransactionStatus_TransactionStatusDTO() { }
        public Transaction_Transaction_TransactionStatus_TransactionStatusDTO(DSS5_SupplyChainFinancialsOptimisation.BO.TransactionStatus original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            Cancelled = original.Cancelled;
            Delivered = original.Delivered;
            Id = original.Id;
            InitialOrderDate = original.InitialOrderDate;
            InTransit = original.InTransit;
            Invoiced = original.Invoiced;
            InvoicedDateOccured = original.InvoicedDateOccured;
            Ordered = original.Ordered;
            Picked = original.Picked;
            Shipped = original.Shipped;
            ShippedDateOccured = original.ShippedDateOccured;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public bool Cancelled;
        public bool Delivered;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public DateTime? InitialOrderDate;
        public bool InTransit;
        public bool Invoiced;
        public DateTime? InvoicedDateOccured;
        public bool Ordered;
        public bool Picked;
        public bool Shipped;
        public DateTime? ShippedDateOccured;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.TransactionStatus).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.TransactionStatus GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.TransactionStatus>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.TransactionStatus();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.TransactionStatus>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.TransactionStatus Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.TransactionStatus();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.TransactionStatus original)
        {
            if (original == null) return;
            original.Cancelled = Cancelled;
            original.Delivered = Delivered;
            original.Id = Id ?? 0;
            original.InitialOrderDate = InitialOrderDate;
            original.InTransit = InTransit;
            original.Invoiced = Invoiced;
            original.InvoicedDateOccured = InvoicedDateOccured;
            original.Ordered = Ordered;
            original.Picked = Picked;
            original.Shipped = Shipped;
            original.ShippedDateOccured = ShippedDateOccured;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static Transaction_Transaction_TransactionStatus_TransactionStatusDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.TransactionStatus>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Transaction_Transaction_TransactionStatus_TransactionStatusDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer))]
    public class Transaction_Transaction_ImportedBuyer_ImportedBuyerDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer>
    {

        [JsonConstructor]
        public Transaction_Transaction_ImportedBuyer_ImportedBuyerDTO() { }
        public Transaction_Transaction_ImportedBuyer_ImportedBuyerDTO(DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            Id = original.Id;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer original)
        {
            if (original == null) return;
            original.Id = Id ?? 0;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static Transaction_Transaction_ImportedBuyer_ImportedBuyerDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Transaction_Transaction_ImportedBuyer_ImportedBuyerDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.Supplier))]
    public class Transaction_Transaction_Supplier_SupplierDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.Supplier>
    {

        [JsonConstructor]
        public Transaction_Transaction_Supplier_SupplierDTO() { }
        public Transaction_Transaction_Supplier_SupplierDTO(DSS5_SupplyChainFinancialsOptimisation.BO.Supplier original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.UserName as object;
            UserName = original.UserName;
            _clientKey = DTOHelper.GetClientKey(original, UserName);
        }
        public string UserName;
        public new object _key
        {
            get;
            set;
        }
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.Supplier).FullName;
        public override List<string> _baseClasses => new List<string> {typeof(zAppDev.DotNet.Framework.Identity.Model.ApplicationUser).FullName};
        public DSS5_SupplyChainFinancialsOptimisation.BO.Supplier GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.Supplier>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = (rawKey);
            if (parsedKey == default(string) || Equals(parsedKey, default(string)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.Supplier();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Supplier>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.Supplier Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.Supplier();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.Supplier original)
        {
            if (original == null) return;
            original.UserName = UserName ?? "";
        }
        public static Transaction_Transaction_Supplier_SupplierDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = (rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Supplier>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Transaction_Transaction_Supplier_SupplierDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.LetterOfCredit))]
    public class Transaction_Transaction_LetterOfCredits_LetterOfCreditDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.LetterOfCredit>
    {

        [JsonConstructor]
        public Transaction_Transaction_LetterOfCredits_LetterOfCreditDTO() { }
        public Transaction_Transaction_LetterOfCredits_LetterOfCreditDTO(DSS5_SupplyChainFinancialsOptimisation.BO.LetterOfCredit original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            DateOfExpiry = original.DateOfExpiry;
            DateOfValidity = original.DateOfValidity;
            Detail = original.Detail;
            Id = original.Id;
            IssuingBank = original.IssuingBank;
            ValueOfLoC = original.ValueOfLoC;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public DateTime? DateOfExpiry;
        public DateTime? DateOfValidity;
        public string Detail;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string IssuingBank;
        public decimal? ValueOfLoC;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.LetterOfCredit).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.LetterOfCredit GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.LetterOfCredit>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.LetterOfCredit();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.LetterOfCredit>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.LetterOfCredit Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.LetterOfCredit();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.LetterOfCredit original)
        {
            if (original == null) return;
            original.DateOfExpiry = DateOfExpiry;
            original.DateOfValidity = DateOfValidity;
            original.Detail = Detail;
            original.Id = Id ?? 0;
            original.IssuingBank = IssuingBank;
            original.ValueOfLoC = ValueOfLoC;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static Transaction_Transaction_LetterOfCredits_LetterOfCreditDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.LetterOfCredit>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Transaction_Transaction_LetterOfCredits_LetterOfCreditDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.BillOfLanding))]
    public class Transaction_Transaction_BillOfLandings_BillOfLandingDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.BillOfLanding>
    {

        [JsonConstructor]
        public Transaction_Transaction_BillOfLandings_BillOfLandingDTO() { }
        public Transaction_Transaction_BillOfLandings_BillOfLandingDTO(DSS5_SupplyChainFinancialsOptimisation.BO.BillOfLanding original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            DeliveryDate = original.DeliveryDate;
            DeliveryPlace = original.DeliveryPlace;
            Id = original.Id;
            LandingDate = original.LandingDate;
            LandingPlace = original.LandingPlace;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public DateTime? DeliveryDate;
        public string DeliveryPlace;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public DateTime? LandingDate;
        public string LandingPlace;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.BillOfLanding).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.BillOfLanding GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.BillOfLanding>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.BillOfLanding();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.BillOfLanding>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.BillOfLanding Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.BillOfLanding();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.BillOfLanding original)
        {
            if (original == null) return;
            original.DeliveryDate = DeliveryDate;
            original.DeliveryPlace = DeliveryPlace;
            original.Id = Id ?? 0;
            original.LandingDate = LandingDate;
            original.LandingPlace = LandingPlace;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static Transaction_Transaction_BillOfLandings_BillOfLandingDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.BillOfLanding>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Transaction_Transaction_BillOfLandings_BillOfLandingDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.CustomsClearingDocumentation))]
    public class Transaction_Transaction_CustomsClearingDocumentations_CustomsClearingDocumentationDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.CustomsClearingDocumentation>
    {

        [JsonConstructor]
        public Transaction_Transaction_CustomsClearingDocumentations_CustomsClearingDocumentationDTO() { }
        public Transaction_Transaction_CustomsClearingDocumentations_CustomsClearingDocumentationDTO(DSS5_SupplyChainFinancialsOptimisation.BO.CustomsClearingDocumentation original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            BuyerName = original.BuyerName;
            CustomsClearingDate = original.CustomsClearingDate;
            ExportingCountry = original.ExportingCountry;
            Id = original.Id;
            ImportingCountry = original.ImportingCountry;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public string BuyerName;
        public DateTime? CustomsClearingDate;
        public string ExportingCountry;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string ImportingCountry;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.CustomsClearingDocumentation).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.CustomsClearingDocumentation GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.CustomsClearingDocumentation>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.CustomsClearingDocumentation();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.CustomsClearingDocumentation>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.CustomsClearingDocumentation Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.CustomsClearingDocumentation();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.CustomsClearingDocumentation original)
        {
            if (original == null) return;
            original.BuyerName = BuyerName;
            original.CustomsClearingDate = CustomsClearingDate;
            original.ExportingCountry = ExportingCountry;
            original.Id = Id ?? 0;
            original.ImportingCountry = ImportingCountry;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static Transaction_Transaction_CustomsClearingDocumentations_CustomsClearingDocumentationDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.CustomsClearingDocumentation>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Transaction_Transaction_CustomsClearingDocumentations_CustomsClearingDocumentationDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.PartialProofOfDelivery))]
    public class Transaction_Transaction_PartialProofOfDeliveries_PartialProofOfDeliveryDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.PartialProofOfDelivery>
    {

        [JsonConstructor]
        public Transaction_Transaction_PartialProofOfDeliveries_PartialProofOfDeliveryDTO() { }
        public Transaction_Transaction_PartialProofOfDeliveries_PartialProofOfDeliveryDTO(DSS5_SupplyChainFinancialsOptimisation.BO.PartialProofOfDelivery original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            DateIssued = original.DateIssued;
            DeliveryStatus = original.DeliveryStatus;
            Id = original.Id;
            PODNumber = original.PODNumber;
            QualityStatus = original.QualityStatus;
            QuantityStatus = original.QuantityStatus;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public DateTime? DateIssued;
        public string DeliveryStatus;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string PODNumber;
        public string QualityStatus;
        public string QuantityStatus;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.PartialProofOfDelivery).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.PartialProofOfDelivery GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.PartialProofOfDelivery>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.PartialProofOfDelivery();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.PartialProofOfDelivery>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.PartialProofOfDelivery Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.PartialProofOfDelivery();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.PartialProofOfDelivery original)
        {
            if (original == null) return;
            original.DateIssued = DateIssued;
            original.DeliveryStatus = DeliveryStatus;
            original.Id = Id ?? 0;
            original.PODNumber = PODNumber;
            original.QualityStatus = QualityStatus;
            original.QuantityStatus = QuantityStatus;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static Transaction_Transaction_PartialProofOfDeliveries_PartialProofOfDeliveryDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.PartialProofOfDelivery>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Transaction_Transaction_PartialProofOfDeliveries_PartialProofOfDeliveryDTO(foundEntry);
            }
            return null;
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.TransactionOverview))]
    public class Transaction_Transaction_TransactionOverview_TransactionOverviewDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.TransactionOverview>
    {

        [JsonConstructor]
        public Transaction_Transaction_TransactionOverview_TransactionOverviewDTO() { }
        public Transaction_Transaction_TransactionOverview_TransactionOverviewDTO(DSS5_SupplyChainFinancialsOptimisation.BO.TransactionOverview original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.Id as object;
            CreditNoteNumber = original.CreditNoteNumber;
            DeliveryDate = original.DeliveryDate;
            FundedRate = original.FundedRate;
            Id = original.Id;
            InterestRate = original.InterestRate;
            InvoiceDate = original.InvoiceDate;
            InvoiceId = original.InvoiceId;
            OrderDate = original.OrderDate;
            OrderQuantity = original.OrderQuantity;
            PayementDate = original.PayementDate;
            PaymentId = original.PaymentId;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public string CreditNoteNumber;
        public DateTime? DeliveryDate;
        public decimal? FundedRate;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public decimal? InterestRate;
        public DateTime? InvoiceDate;
        public int? InvoiceId;
        public DateTime? OrderDate;
        public decimal? OrderQuantity;
        public DateTime? PayementDate;
        public int? PaymentId;
        public string _versionTimestamp;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.TransactionOverview).FullName;
        public override List<string> _baseClasses => null;
        public DSS5_SupplyChainFinancialsOptimisation.BO.TransactionOverview GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.TransactionOverview>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            if (parsedKey == default(int) || Equals(parsedKey, default(int)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.TransactionOverview();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.TransactionOverview>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.TransactionOverview Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.TransactionOverview();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.TransactionOverview original)
        {
            if (original == null) return;
            original.CreditNoteNumber = CreditNoteNumber;
            original.DeliveryDate = DeliveryDate;
            original.FundedRate = FundedRate;
            original.Id = Id ?? 0;
            original.InterestRate = InterestRate;
            original.InvoiceDate = InvoiceDate;
            original.InvoiceId = InvoiceId;
            original.OrderDate = OrderDate;
            original.OrderQuantity = OrderQuantity;
            original.PayementDate = PayementDate;
            original.PaymentId = PaymentId;
            original.VersionTimestamp = string.IsNullOrEmpty(this._versionTimestamp) ? null : BitConverter.GetBytes(Int64.Parse(this._versionTimestamp));
        }
        public static Transaction_Transaction_TransactionOverview_TransactionOverviewDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.TransactionOverview>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Transaction_Transaction_TransactionOverview_TransactionOverviewDTO(foundEntry);
            }
            return null;
        }
    }


    #region Datasource DTOs
    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.CommercialAgreement))]
    [DataSetDTO]
    public class CommercialAgreementDataSource_CommercialAgreementDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.CommercialAgreement>
    {
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.CommercialAgreement).FullName;
        public string _versionTimestamp;
        public  string _runtimeType;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string ProductCategory;
        public string PaymentTerms;
        public CommercialAgreementDataSource_ImportedBuyerDTO ImportedBuyer;


        [JsonConstructor]
        public CommercialAgreementDataSource_CommercialAgreementDTO() : base() {}
        public  static CommercialAgreementDataSource_CommercialAgreementDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.CommercialAgreement>(parsedKey, false);
            if(foundEntry == null && !string.IsNullOrWhiteSpace(jbID))
            {
                if(int.TryParse(rawKey, out int _uniqueKey))
                {
                    var controller = new TransactionFormController();
                    var method = controller.GetType().GetMethod($"Get_{jbID}_DatasourceQueryable");
                    var records = method.Invoke(controller, new object[] { null }) as IQueryable<DSS5_SupplyChainFinancialsOptimisation.BO.CommercialAgreement>;
                    foundEntry = records.Where(c => c._GetUniqueIdentifier() == _uniqueKey).FirstOrDefault();
                }
            }
            if(foundEntry != null)
            {
                return new CommercialAgreementDataSource_CommercialAgreementDTO(foundEntry);
            }
            return null;
        }
        public CommercialAgreementDataSource_CommercialAgreementDTO(DSS5_SupplyChainFinancialsOptimisation.BO.CommercialAgreement original, bool assignClientKey) : this(original)
        {
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public CommercialAgreementDataSource_CommercialAgreementDTO(DSS5_SupplyChainFinancialsOptimisation.BO.CommercialAgreement original)
        {
            if(original == null) throw new ApplicationException(BaseViewPage<object>.GetResourceValue("GlobalResources", "RES_DATASOURCE_Null_Value_In_Resultset", null, "The resultset of your DataSource contains null values."));
            _key = (original.Id == 0) ? original._GetUniqueIdentifier() as object : original.Id as object;
            _runtimeType = original?.GetType().FullName;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            Id = original.Id;
            if (!DTOHelper.SeenDTOInstances.ContainsKey(original))
            {
                DTOHelper.SeenDTOInstances.Add(original, this);
            }
            ProductCategory = original.ProductCategory;
            PaymentTerms = original.PaymentTerms;
            ImportedBuyer = original.ImportedBuyer == null
                            ? null
                            : DTOHelper.GetDTOFromModel<CommercialAgreementDataSource_ImportedBuyerDTO>(original.ImportedBuyer as DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer);
        }

        public static DSS5_SupplyChainFinancialsOptimisation.BO.CommercialAgreement GetModelByKey(object _key)
        {
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.CommercialAgreement>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.CommercialAgreement Convert()
        {
            var model = new DSS5_SupplyChainFinancialsOptimisation.BO.CommercialAgreement();
            if (_key != null && _key.ToString() != "0")
            {
                var rawKey = _key.ToString();
                var parsedKey = int.Parse(rawKey);
                model = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.CommercialAgreement>(parsedKey, false) ?? model;
            }
            if (!DTOHelper.SeenModelInstances.ContainsKey(this))
            {
                DTOHelper.SeenModelInstances.Add(this, model);
            }
            model.Id = Id ?? 0;
            model.ProductCategory = ProductCategory;
            model.PaymentTerms = PaymentTerms;
            model.ImportedBuyer = ImportedBuyer == null
                                  ? null
                                  : DTOHelper.GetModelFromDTO<DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer>(ImportedBuyer);
            DTOHelper.UpdateSeenModelInstances(this, model);
            return model;
        }

    }
    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer))]
    [DataSetDTO]
    public class CommercialAgreementDataSource_ImportedBuyerDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer>
    {
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer).FullName;
        public string _versionTimestamp;
        public  string _runtimeType;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }
        public string Company;


        [JsonConstructor]
        public CommercialAgreementDataSource_ImportedBuyerDTO() : base() {}
        public  static CommercialAgreementDataSource_ImportedBuyerDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer>(parsedKey, false);
            if(foundEntry == null && !string.IsNullOrWhiteSpace(jbID))
            {
                if(int.TryParse(rawKey, out int _uniqueKey))
                {
                    var controller = new TransactionFormController();
                    var method = controller.GetType().GetMethod($"Get_{jbID}_DatasourceQueryable");
                    var records = method.Invoke(controller, new object[] { null }) as IQueryable<DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer>;
                    foundEntry = records.Where(c => c._GetUniqueIdentifier() == _uniqueKey).FirstOrDefault();
                }
            }
            if(foundEntry != null)
            {
                return new CommercialAgreementDataSource_ImportedBuyerDTO(foundEntry);
            }
            return null;
        }
        public CommercialAgreementDataSource_ImportedBuyerDTO(DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer original, bool assignClientKey) : this(original)
        {
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public CommercialAgreementDataSource_ImportedBuyerDTO(DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer original)
        {
            if(original == null) throw new ApplicationException(BaseViewPage<object>.GetResourceValue("GlobalResources", "RES_DATASOURCE_Null_Value_In_Resultset", null, "The resultset of your DataSource contains null values."));
            _key = (original.Id == 0) ? original._GetUniqueIdentifier() as object : original.Id as object;
            _runtimeType = original?.GetType().FullName;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            Id = original.Id;
            if (!DTOHelper.SeenDTOInstances.ContainsKey(original))
            {
                DTOHelper.SeenDTOInstances.Add(original, this);
            }
            Company = original.Company;
        }

        public static DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer GetModelByKey(object _key)
        {
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer Convert()
        {
            var model = new DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer();
            if (_key != null && _key.ToString() != "0")
            {
                var rawKey = _key.ToString();
                var parsedKey = int.Parse(rawKey);
                model = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.ImportedBuyer>(parsedKey, false) ?? model;
            }
            if (!DTOHelper.SeenModelInstances.ContainsKey(this))
            {
                DTOHelper.SeenModelInstances.Add(this, model);
            }
            model.Id = Id ?? 0;
            model.Company = Company;
            DTOHelper.UpdateSeenModelInstances(this, model);
            return model;
        }

    }


    #endregion

}
