// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).
using System;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Linq;
using DSS5_SupplyChainFinancialsOptimisation.BO;
using DSS5_SupplyChainFinancialsOptimisation.UI.Controllers.BuyerForm;
using AppCode;
using zAppDev.DotNet.Framework.Data;
using zAppDev.DotNet.Framework.Utilities;
using zAppDev.DotNet.Framework.Data.Domain;
using zAppDev.DotNet.Framework.Mvc;
using System.ComponentModel.DataAnnotations;
using DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.MasterPage;
using DSS5_SupplyChainFinancialsOptimisation.UI.Controllers.MasterPage;
namespace DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.BuyerForm
{
    public class BuyerFormViewModel : MasterPageViewModel
    {
        public DSS5_SupplyChainFinancialsOptimisation.BO.Buyer Buyer;


        public BuyerFormViewModel()
        {
            Buyer = new DSS5_SupplyChainFinancialsOptimisation.BO.Buyer();
        }


        public override void Evict()
        {
            var manager = MiniSessionManager.Instance;
            if (manager.Session.Contains(Buyer))
            {
                manager.Session.Evict(Buyer);
            }
        }

    }


    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.BuyerForm.BuyerFormViewModel))]
    public class BuyerFormViewModelDTO : MasterPageViewModelDTO, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.BuyerForm.BuyerFormViewModel>
    {

        [JsonConstructor]
        public BuyerFormViewModelDTO() { }
        public BuyerFormViewModelDTO(DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.BuyerForm.BuyerFormViewModel original, bool parentIsDirty = false)  : base(original)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            Buyer = original.Buyer == null ? null : new Buyer_BuyerDTO(original.Buyer);
        }
        public Buyer_BuyerDTO Buyer;
        public new string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.BuyerForm.BuyerFormViewModel).FullName;

        public new DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.BuyerForm.BuyerFormViewModel GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.BuyerForm.BuyerFormViewModel>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            return new DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.BuyerForm.BuyerFormViewModel();
        }
        new  public DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.BuyerForm.BuyerFormViewModel Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.BuyerForm.BuyerFormViewModel();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.UI.ViewModels.BuyerForm.BuyerFormViewModel original)
        {
            if (original == null) return;
            base.Hydrate(original);
            original.Buyer = Buyer == null
                             ? null
                             : Buyer.Convert();
        }
    }

    [OriginalType(typeof(DSS5_SupplyChainFinancialsOptimisation.BO.Buyer))]
    public class Buyer_BuyerDTO : ViewModelDTOBase, IViewModelDTO<DSS5_SupplyChainFinancialsOptimisation.BO.Buyer>
    {

        [JsonConstructor]
        public Buyer_BuyerDTO() { }
        public Buyer_BuyerDTO(DSS5_SupplyChainFinancialsOptimisation.BO.Buyer original, bool parentIsDirty = false)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            _key = original.UserName as object;
            AddressOne = original.AddressOne;
            AddressTwo = original.AddressTwo;
            AnnualTurnOver = original.AnnualTurnOver;
            Company = original.Company;
            ContactPerson = original.ContactPerson;
            CreditInsurance = original.CreditInsurance;
            Email = original.Email;
            LegalRepresentative = original.LegalRepresentative;
            Logo = original.Logo;
            PrimaryPhone = original.PrimaryPhone;
            Rating = original.Rating;
            UserName = original.UserName;
            VatNumber = original.VatNumber;
            _clientKey = DTOHelper.GetClientKey(original, UserName);
        }
        public string AddressOne;
        public string AddressTwo;
        public decimal? AnnualTurnOver;
        public string Company;
        public string ContactPerson;
        public bool CreditInsurance;
        public string Email;
        public string LegalRepresentative;
        public string Logo;
        public string PrimaryPhone;
        public string Rating;
        public string UserName;
        public new object _key
        {
            get;
            set;
        }
        public string VatNumber;
        public  string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS5_SupplyChainFinancialsOptimisation.BO.Buyer).FullName;
        public override List<string> _baseClasses => new List<string> {typeof(zAppDev.DotNet.Framework.Identity.Model.ApplicationUser).FullName};
        public DSS5_SupplyChainFinancialsOptimisation.BO.Buyer GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS5_SupplyChainFinancialsOptimisation.BO.Buyer>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            if (_key == null) return null;
            var rawKey = _key.ToString();
            var parsedKey = (rawKey);
            if (parsedKey == default(string) || Equals(parsedKey, default(string)))
            {
                return new DSS5_SupplyChainFinancialsOptimisation.BO.Buyer();
            }
            return new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Buyer>(parsedKey, false);
        }
        public DSS5_SupplyChainFinancialsOptimisation.BO.Buyer Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS5_SupplyChainFinancialsOptimisation.BO.Buyer();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS5_SupplyChainFinancialsOptimisation.BO.Buyer original)
        {
            if (original == null) return;
            original.AddressOne = AddressOne;
            original.AddressTwo = AddressTwo;
            original.AnnualTurnOver = AnnualTurnOver;
            original.Company = Company;
            original.ContactPerson = ContactPerson;
            original.CreditInsurance = CreditInsurance;
            original.Email = Email;
            original.LegalRepresentative = LegalRepresentative;
            original.Logo = Logo;
            original.PrimaryPhone = PrimaryPhone;
            original.Rating = Rating;
            original.UserName = UserName ?? "";
            original.VatNumber = VatNumber;
        }
        public static Buyer_BuyerDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = (rawKey);
            var foundEntry = new DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.Buyer>(parsedKey, true);
            if(foundEntry != null)
            {
                return new Buyer_BuyerDTO(foundEntry);
            }
            return null;
        }
    }


    #region Datasource DTOs
    [OriginalType(typeof(zAppDev.DotNet.Framework.Identity.Model.Profile))]
    [DataSetDTO]
    public class ProfileDataSource_ProfileDTO : ViewModelDTOBase, IViewModelDTO<zAppDev.DotNet.Framework.Identity.Model.Profile>
    {
        public override string _originalTypeClassName => typeof(zAppDev.DotNet.Framework.Identity.Model.Profile).FullName;
        public string _versionTimestamp;
        public  string _runtimeType;
        public int? Id;
        public new object _key
        {
            get;
            set;
        }


        [JsonConstructor]
        public ProfileDataSource_ProfileDTO() : base() {}
        public  static ProfileDataSource_ProfileDTO GetInstance(object key, string jbID)
        {
            if (key == null) return null;
            var rawKey = key.ToString();
            var parsedKey = int.Parse(rawKey);
            var foundEntry = new DAL.Repository().GetById<zAppDev.DotNet.Framework.Identity.Model.Profile>(parsedKey, false);
            if(foundEntry == null && !string.IsNullOrWhiteSpace(jbID))
            {
                if(int.TryParse(rawKey, out int _uniqueKey))
                {
                    var controller = new BuyerFormController();
                    var method = controller.GetType().GetMethod($"Get_{jbID}_DatasourceQueryable");
                    var records = method.Invoke(controller, new object[] { null }) as IQueryable<zAppDev.DotNet.Framework.Identity.Model.Profile>;
                    foundEntry = records.Where(c => c._GetUniqueIdentifier() == _uniqueKey).FirstOrDefault();
                }
            }
            if(foundEntry != null)
            {
                return new ProfileDataSource_ProfileDTO(foundEntry);
            }
            return null;
        }
        public ProfileDataSource_ProfileDTO(zAppDev.DotNet.Framework.Identity.Model.Profile original, bool assignClientKey) : this(original)
        {
            _clientKey = DTOHelper.GetClientKey(original, Id);
        }
        public ProfileDataSource_ProfileDTO(zAppDev.DotNet.Framework.Identity.Model.Profile original)
        {
            if(original == null) throw new ApplicationException(BaseViewPage<object>.GetResourceValue("GlobalResources", "RES_DATASOURCE_Null_Value_In_Resultset", null, "The resultset of your DataSource contains null values."));
            _key = (original.Id == 0) ? original._GetUniqueIdentifier() as object : original.Id as object;
            _runtimeType = original?.GetType().FullName;
            if (original.VersionTimestamp != null && original.VersionTimestamp.Length > 0)
            {
                _versionTimestamp = BitConverter.ToInt64(original.VersionTimestamp, 0).ToString();
            }
            Id = original.Id;
            if (!DTOHelper.SeenDTOInstances.ContainsKey(original))
            {
                DTOHelper.SeenDTOInstances.Add(original, this);
            }
        }

        public static zAppDev.DotNet.Framework.Identity.Model.Profile GetModelByKey(object _key)
        {
            var rawKey = _key.ToString();
            var parsedKey = int.Parse(rawKey);
            return new DAL.Repository().GetById<zAppDev.DotNet.Framework.Identity.Model.Profile>(parsedKey, false);
        }
        public zAppDev.DotNet.Framework.Identity.Model.Profile Convert()
        {
            var model = new zAppDev.DotNet.Framework.Identity.Model.Profile();
            if (_key != null && _key.ToString() != "0")
            {
                var rawKey = _key.ToString();
                var parsedKey = int.Parse(rawKey);
                model = new DAL.Repository().GetById<zAppDev.DotNet.Framework.Identity.Model.Profile>(parsedKey, false) ?? model;
            }
            if (!DTOHelper.SeenModelInstances.ContainsKey(this))
            {
                DTOHelper.SeenModelInstances.Add(this, model);
            }
            model.Id = Id ?? 0;
            DTOHelper.UpdateSeenModelInstances(this, model);
            return model;
        }

    }

    #endregion

}
