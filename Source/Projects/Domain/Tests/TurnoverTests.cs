// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).

using System;
using System.Collections.Generic;
using System.Linq;
using NUnit.Framework;
using FluentNHibernate.Testing;
using DSS5_SupplyChainFinancialsOptimisation.BO;
using DSS5_SupplyChainFinancialsOptimisation.BoTesting.Tests.Common;
using DSS5_SupplyChainFinancialsOptimisation.DAL;

namespace DSS5_SupplyChainFinancialsOptimisation.BoTesting.Tests
{
    /// <summary>
    ///This is a test class for TurnoverTest and is intended
    ///to contain all TurnoverTest NUnit Tests
    ///</summary>
    [TestFixture]
    [Description("Turnover Repository Tests")]
    [Category("Turnover Repository Tests")]
    internal class TurnoverTests : NHibernateFixture
    {
        /// <summary>
        ///A test for testing the persistence of an object from Db
        ///</summary>
        [Test]
        [Description("This tests the persistence of `Turnover`")]
        [Order(0)]
        public void Turnover_persistence_test()
        {
            DateTime now = DateTime.Now;
            // Get datetime without milliseconds
            now = new DateTime(now.Ticks - (now.Ticks % TimeSpan.TicksPerSecond), now.Kind);
            var _turnover_turnoverstatistics_turnover = new DSS5_SupplyChainFinancialsOptimisation.BO.TurnoverStatistic
            {
                TotalAmount = 222222.22M,
                Year = 9510,
                Month = 3285,
                TotalAmountFunded = 222222.22M,
                TotalTransactions = 5261,
                TotalCreditNotes = 4285,
                CNAmount = 222222.22M,
            };
            var _turnover_turnoverstatistics_turnover2 = new DSS5_SupplyChainFinancialsOptimisation.BO.TurnoverStatistic
            {
                TotalAmount = 222222.22M,
                Year = 733,
                Month = 4084,
                TotalAmountFunded = 222222.22M,
                TotalTransactions = 426,
                TotalCreditNotes = 6252,
                CNAmount = 222222.22M,
            };
            new PersistenceSpecification<DSS5_SupplyChainFinancialsOptimisation.BO.Turnover>(Session)
            .CheckBag(p => p.TurnoverStatistics, (new List<DSS5_SupplyChainFinancialsOptimisation.BO.TurnoverStatistic>
            {
                _turnover_turnoverstatistics_turnover,
                _turnover_turnoverstatistics_turnover2
            }))
            .VerifyTheMappings();
        }

        /// <summary>
        ///A test for testing the filtering of an object from Db
        ///</summary>
        [Test]
        [Description("This tests the filtering of `Turnover`")]
        [Order(1)]
        public void Turnover_filtering_test()
        {
            DateTime now = DateTime.Now;
            // Get datetime without milliseconds
            now = new DateTime(now.Ticks - (now.Ticks % TimeSpan.TicksPerSecond), now.Kind);
            var repo = new Repository(Session);
            List<DSS5_SupplyChainFinancialsOptimisation.BO.Turnover> results = null;
            Assert.DoesNotThrow(() =>
            {
                results = repo.GetAsQueryable<DSS5_SupplyChainFinancialsOptimisation.BO.Turnover>(
                              a => true
                              && a.TurnoverStatistics.Any()
                              ,
                              cacheQuery: true)
                          .OrderBy(a => a)
                          .Skip(0)
                          .Take(3)
                          .ToList();
            });
            Assert.AreNotEqual(null, results);
        }
    }
}