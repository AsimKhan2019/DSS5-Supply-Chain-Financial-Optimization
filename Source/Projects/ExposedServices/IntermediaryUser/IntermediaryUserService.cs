// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).
using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.ServiceModel;
using System.Text;
using System.ServiceModel.Channels;
using System.Security.Permissions;
using System.Security.Principal;
using NHibernate;
using System.ServiceModel.Activation;
using zAppDev.DotNet.Framework.Utilities;
using zAppDev.DotNet.Framework.Data.Domain;
using DSS5_SupplyChainFinancialsOptimisation.Services.IntermediaryUser.DataContracts;
using DSS5_SupplyChainFinancialsOptimisation.BO;
using AutoMapper;

namespace DSS5_SupplyChainFinancialsOptimisation.Services
{
    [AspNetCompatibilityRequirements(RequirementsMode = AspNetCompatibilityRequirementsMode.Required)]
    public class IntermediaryUserService : IIntermediaryUserService
    {
        public void Create(IntermediaryUserDTO _newIntermediaryUser, string _RequestSourceIp, string _UserName)
        {
            InitializeMappers();
            try
            {
                var inputnewIntermediaryUser = Mapper.Map<IntermediaryUserDTO, DSS5_SupplyChainFinancialsOptimisation.BO.IntermediaryUser>(_newIntermediaryUser);
                CreateImplementation(inputnewIntermediaryUser);
            }
            catch (Exception @exception)
            {
                log4net.LogManager.GetLogger("IntermediaryUser Service").Error(@exception);
                throw;
            }
        }
        public IntermediaryUserDTO Get(string userName, string _RequestSourceIp, string _UserName)
        {
            InitializeMappers();
            try
            {
                var inputUserName = userName;
                var _get = GetImplementation(inputUserName);
                var result = Mapper.Map<DSS5_SupplyChainFinancialsOptimisation.BO.IntermediaryUser, IntermediaryUserDTO>(_get);
                return result;
            }
            catch (Exception @exception)
            {
                log4net.LogManager.GetLogger("IntermediaryUser Service").Error(@exception);
                throw;
            }
        }
        public int? Count(string _RequestSourceIp, string _UserName)
        {
            InitializeMappers();
            try
            {
                var _count = CountImplementation();
                var result = _count;
                return result;
            }
            catch (Exception @exception)
            {
                log4net.LogManager.GetLogger("IntermediaryUser Service").Error(@exception);
                throw;
            }
        }
        public System.Collections.Generic.List<IntermediaryUserDTO> GetAll(int? _pageSize, int? _pageIndex, string _RequestSourceIp, string _UserName)
        {
            InitializeMappers();
            try
            {
                var inputpageSize = _pageSize;
                var inputpageIndex = _pageIndex;
                var _getAll = GetAllImplementation(inputpageSize, inputpageIndex);
                var result = Mapper.Map<System.Collections.Generic.List<DSS5_SupplyChainFinancialsOptimisation.BO.IntermediaryUser>, System.Collections.Generic.List<IntermediaryUserDTO>>(_getAll);
                return result;
            }
            catch (Exception @exception)
            {
                log4net.LogManager.GetLogger("IntermediaryUser Service").Error(@exception);
                throw;
            }
        }
        public void Save(IntermediaryUserDTO intermediaryUser, string _RequestSourceIp, string _UserName)
        {
            InitializeMappers();
            try
            {
                var inputIntermediaryUser = Mapper.Map<IntermediaryUserDTO, DSS5_SupplyChainFinancialsOptimisation.BO.IntermediaryUser>(intermediaryUser);
                SaveImplementation(inputIntermediaryUser);
            }
            catch (Exception @exception)
            {
                log4net.LogManager.GetLogger("IntermediaryUser Service").Error(@exception);
                throw;
            }
        }
        public void Delete(string userName, string _RequestSourceIp, string _UserName)
        {
            InitializeMappers();
            try
            {
                var inputUserName = userName;
                DeleteImplementation(inputUserName);
            }
            catch (Exception @exception)
            {
                log4net.LogManager.GetLogger("IntermediaryUser Service").Error(@exception);
                throw;
            }
        }
        public bool IsIntermediary(string _username, string _RequestSourceIp, string _UserName)
        {
            InitializeMappers();
            try
            {
                var inputusername = _username;
                var _exposedOperation = IsIntermediaryImplementation(inputusername);
                var result = _exposedOperation;
                return result;
            }
            catch (Exception @exception)
            {
                log4net.LogManager.GetLogger("IntermediaryUser Service").Error(@exception);
                throw;
            }
        }


        private void InitializeMappers()
        {
            Mapper.CreateMap<IntermediaryUserDTO, DSS5_SupplyChainFinancialsOptimisation.BO.IntermediaryUser>();
            Mapper.CreateMap<DSS5_SupplyChainFinancialsOptimisation.BO.IntermediaryUser, IntermediaryUserDTO>();
        }

        public static void CreateImplementation(DSS5_SupplyChainFinancialsOptimisation.BO.IntermediaryUser newIntermediaryUser)
        {
            newIntermediaryUser.UserName = "";
            new DSS5_SupplyChainFinancialsOptimisation.DAL.Repository().Save<DSS5_SupplyChainFinancialsOptimisation.BO.IntermediaryUser>(newIntermediaryUser);
        }

        public static DSS5_SupplyChainFinancialsOptimisation.BO.IntermediaryUser GetImplementation(string UserName)
        {
            return  new DSS5_SupplyChainFinancialsOptimisation.DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.IntermediaryUser>(UserName);
        }

        public static int? CountImplementation()
        {
            return new DSS5_SupplyChainFinancialsOptimisation.DAL.Repository().GetCount<DSS5_SupplyChainFinancialsOptimisation.BO.IntermediaryUser>();
        }

        public static System.Collections.Generic.List<DSS5_SupplyChainFinancialsOptimisation.BO.IntermediaryUser> GetAllImplementation(int? pageSize, int? pageIndex)
        {
            if ((pageSize > 50))
            {
                pageSize = 50;
            }
            var _count0 = 0;
            return new DSS5_SupplyChainFinancialsOptimisation.DAL.Repository().GetAll<DSS5_SupplyChainFinancialsOptimisation.BO.IntermediaryUser>(pageIndex.GetValueOrDefault(0) * pageSize.GetValueOrDefault(0), (pageSize).GetValueOrDefault(0),out _count0);
        }

        public static void SaveImplementation(DSS5_SupplyChainFinancialsOptimisation.BO.IntermediaryUser IntermediaryUser)
        {
            new DSS5_SupplyChainFinancialsOptimisation.DAL.Repository().Save<DSS5_SupplyChainFinancialsOptimisation.BO.IntermediaryUser>(IntermediaryUser);
        }

        public static void DeleteImplementation(string UserName)
        {
            new DSS5_SupplyChainFinancialsOptimisation.DAL.Repository().DeleteIntermediaryUser( new DSS5_SupplyChainFinancialsOptimisation.DAL.Repository().GetById<DSS5_SupplyChainFinancialsOptimisation.BO.IntermediaryUser>(UserName));
        }

        public static bool IsIntermediaryImplementation(string username)
        {
            return new DSS5_SupplyChainFinancialsOptimisation.DAL.Repository().GetCount<DSS5_SupplyChainFinancialsOptimisation.BO.IntermediaryUser>((b) => b.UserName == username) > 0 && (new DSS5_SupplyChainFinancialsOptimisation.DAL.Repository().GetAsQueryable<DSS5_SupplyChainFinancialsOptimisation.BO.IntermediaryUser>((b) => b.UserName == username)?.FirstOrDefault()?.IsIntermediary() ?? false);
        }


    }
}